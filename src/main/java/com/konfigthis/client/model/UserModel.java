/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AddressModel;
import com.konfigthis.client.model.AwardModel;
import com.konfigthis.client.model.BankAccountModel;
import com.konfigthis.client.model.CertificationModel;
import com.konfigthis.client.model.CustomFieldValueModel;
import com.konfigthis.client.model.CustomTableModel;
import com.konfigthis.client.model.DepartmentModel;
import com.konfigthis.client.model.EducationModel;
import com.konfigthis.client.model.EmploymentModel;
import com.konfigthis.client.model.FinancialModel;
import com.konfigthis.client.model.HRCalendarModel;
import com.konfigthis.client.model.LocationModel;
import com.konfigthis.client.model.ProjectModel;
import com.konfigthis.client.model.SkillUserModel;
import com.konfigthis.client.model.UserProfileModel;
import com.konfigthis.client.model.UserThinModel;
import com.konfigthis.client.model.UserTrainingModel;
import com.konfigthis.client.model.WorkerTypeModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * UserModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UserModel {
  public static final String SERIALIZED_NAME_ADDRESS_MODEL_LIST = "addressModelList";
  @SerializedName(SERIALIZED_NAME_ADDRESS_MODEL_LIST)
  private List<AddressModel> addressModelList = null;

  public static final String SERIALIZED_NAME_ADP_ASSOCIATE_O_I_D = "adpAssociateOID";
  @SerializedName(SERIALIZED_NAME_ADP_ASSOCIATE_O_I_D)
  private String adpAssociateOID;

  public static final String SERIALIZED_NAME_ALLOCATION = "allocation";
  @SerializedName(SERIALIZED_NAME_ALLOCATION)
  private Double allocation;

  public static final String SERIALIZED_NAME_APPLE_USER_IDENTIFIER = "appleUserIdentifier";
  @SerializedName(SERIALIZED_NAME_APPLE_USER_IDENTIFIER)
  private String appleUserIdentifier;

  public static final String SERIALIZED_NAME_ASSIGNMENTS = "assignments";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENTS)
  private String assignments;

  public static final String SERIALIZED_NAME_AWARD_MODEL_LIST = "awardModelList";
  @SerializedName(SERIALIZED_NAME_AWARD_MODEL_LIST)
  private List<AwardModel> awardModelList = null;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT_MODEL = "bankAccountModel";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT_MODEL)
  private BankAccountModel bankAccountModel;

  public static final String SERIALIZED_NAME_CAL_WEEK_PREF = "calWeekPref";
  @SerializedName(SERIALIZED_NAME_CAL_WEEK_PREF)
  private String calWeekPref;

  public static final String SERIALIZED_NAME_CALENDAR_ID = "calendarId";
  @SerializedName(SERIALIZED_NAME_CALENDAR_ID)
  private Integer calendarId;

  public static final String SERIALIZED_NAME_CALENDAR_MODEL = "calendarModel";
  @SerializedName(SERIALIZED_NAME_CALENDAR_MODEL)
  private HRCalendarModel calendarModel;

  public static final String SERIALIZED_NAME_CANDIDATE_ID = "candidateId";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_ID)
  private Integer candidateId;

  public static final String SERIALIZED_NAME_CAREER_PATHWAY_ID = "careerPathwayId";
  @SerializedName(SERIALIZED_NAME_CAREER_PATHWAY_ID)
  private Integer careerPathwayId;

  public static final String SERIALIZED_NAME_CELL_PHONE = "cellPhone";
  @SerializedName(SERIALIZED_NAME_CELL_PHONE)
  private String cellPhone;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private Integer countryId;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD_VALUE_MODEL_LIST = "customFieldValueModelList";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD_VALUE_MODEL_LIST)
  private List<CustomFieldValueModel> customFieldValueModelList = null;

  public static final String SERIALIZED_NAME_CUSTOM_TABLE_MODEL_LIST = "customTableModelList";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TABLE_MODEL_LIST)
  private List<CustomTableModel> customTableModelList = null;

  public static final String SERIALIZED_NAME_DEPARTMENT_MODEL = "departmentModel";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_MODEL)
  private DepartmentModel departmentModel;

  public static final String SERIALIZED_NAME_DEPARTMENT_NAME = "departmentName";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_NAME)
  private String departmentName;

  public static final String SERIALIZED_NAME_DISPLAY_FULL_NAME = "displayFullName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_FULL_NAME)
  private String displayFullName;

  public static final String SERIALIZED_NAME_EDUCATION_MODEL_LIST = "educationModelList";
  @SerializedName(SERIALIZED_NAME_EDUCATION_MODEL_LIST)
  private List<EducationModel> educationModelList = null;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EMP_ID = "empId";
  @SerializedName(SERIALIZED_NAME_EMP_ID)
  private String empId;

  public static final String SERIALIZED_NAME_EMPLOYMENT_MODEL_LIST = "employmentModelList";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_MODEL_LIST)
  private List<EmploymentModel> employmentModelList = null;

  public static final String SERIALIZED_NAME_FAMILY_SUFFIX = "familySuffix";
  @SerializedName(SERIALIZED_NAME_FAMILY_SUFFIX)
  private String familySuffix;

  public static final String SERIALIZED_NAME_FINANCIAL_MODEL_LIST = "financialModelList";
  @SerializedName(SERIALIZED_NAME_FINANCIAL_MODEL_LIST)
  private List<FinancialModel> financialModelList = null;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_HAS_ACCESS = "hasAccess";
  @SerializedName(SERIALIZED_NAME_HAS_ACCESS)
  private Boolean hasAccess;

  public static final String SERIALIZED_NAME_HR_PORTAL = "hrPortal";
  @SerializedName(SERIALIZED_NAME_HR_PORTAL)
  private String hrPortal;

  public static final String SERIALIZED_NAME_IM = "im";
  @SerializedName(SERIALIZED_NAME_IM)
  private String im;

  public static final String SERIALIZED_NAME_IMAGE_NAME = "imageName";
  @SerializedName(SERIALIZED_NAME_IMAGE_NAME)
  private String imageName;

  public static final String SERIALIZED_NAME_IS_VIEW = "isView";
  @SerializedName(SERIALIZED_NAME_IS_VIEW)
  private Boolean isView;

  public static final String SERIALIZED_NAME_JOB_GRADE = "jobGrade";
  @SerializedName(SERIALIZED_NAME_JOB_GRADE)
  private String jobGrade;

  public static final String SERIALIZED_NAME_LANGUAGE_PREFERENCE = "languagePreference";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_PREFERENCE)
  private String languagePreference;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LAST_UPDATE_USERNAME = "lastUpdateUsername";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_USERNAME)
  private String lastUpdateUsername;

  public static final String SERIALIZED_NAME_LASTUPDATETS = "lastupdatets";
  @SerializedName(SERIALIZED_NAME_LASTUPDATETS)
  private LocalDate lastupdatets;

  public static final String SERIALIZED_NAME_LASTUPDATEUSERID = "lastupdateuserid";
  @SerializedName(SERIALIZED_NAME_LASTUPDATEUSERID)
  private Integer lastupdateuserid;

  public static final String SERIALIZED_NAME_LICENSE_MODEL_LIST = "licenseModelList";
  @SerializedName(SERIALIZED_NAME_LICENSE_MODEL_LIST)
  private List<CertificationModel> licenseModelList = null;

  public static final String SERIALIZED_NAME_LOCATION_MODEL = "locationModel";
  @SerializedName(SERIALIZED_NAME_LOCATION_MODEL)
  private LocationModel locationModel;

  public static final String SERIALIZED_NAME_MFA_PREFERENCE = "mfaPreference";
  @SerializedName(SERIALIZED_NAME_MFA_PREFERENCE)
  private Boolean mfaPreference;

  public static final String SERIALIZED_NAME_MFA_SECRET_KEY = "mfaSecretKey";
  @SerializedName(SERIALIZED_NAME_MFA_SECRET_KEY)
  private String mfaSecretKey;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private String middleName;

  public static final String SERIALIZED_NAME_NAME_PRONUNCIATION = "namePronunciation";
  @SerializedName(SERIALIZED_NAME_NAME_PRONUNCIATION)
  private String namePronunciation;

  public static final String SERIALIZED_NAME_NOTIFICATIONS = "notifications";
  @SerializedName(SERIALIZED_NAME_NOTIFICATIONS)
  private Boolean notifications;

  public static final String SERIALIZED_NAME_PA_ID = "paId";
  @SerializedName(SERIALIZED_NAME_PA_ID)
  private Integer paId;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_PREFIX_SALUTATION = "prefixSalutation";
  @SerializedName(SERIALIZED_NAME_PREFIX_SALUTATION)
  private String prefixSalutation;

  public static final String SERIALIZED_NAME_PROFILE_ID = "profileId";
  @SerializedName(SERIALIZED_NAME_PROFILE_ID)
  private Integer profileId;

  public static final String SERIALIZED_NAME_PROFILE_NAME = "profileName";
  @SerializedName(SERIALIZED_NAME_PROFILE_NAME)
  private String profileName;

  public static final String SERIALIZED_NAME_PROJECT_MODEL = "projectModel";
  @SerializedName(SERIALIZED_NAME_PROJECT_MODEL)
  private ProjectModel projectModel;

  public static final String SERIALIZED_NAME_PROJECT_MODEL_LIST = "projectModelList";
  @SerializedName(SERIALIZED_NAME_PROJECT_MODEL_LIST)
  private List<ProjectModel> projectModelList = null;

  public static final String SERIALIZED_NAME_PTOANNUAL = "ptoannual";
  @SerializedName(SERIALIZED_NAME_PTOANNUAL)
  private Float ptoannual;

  public static final String SERIALIZED_NAME_PTOBALANCE = "ptobalance";
  @SerializedName(SERIALIZED_NAME_PTOBALANCE)
  private Float ptobalance;

  public static final String SERIALIZED_NAME_QBO_PREF = "qboPref";
  @SerializedName(SERIALIZED_NAME_QBO_PREF)
  private Integer qboPref;

  public static final String SERIALIZED_NAME_RELATIVE_DATE = "relativeDate";
  @SerializedName(SERIALIZED_NAME_RELATIVE_DATE)
  private String relativeDate;

  public static final String SERIALIZED_NAME_REPORTS_TO_LIST_MAP = "reportsToListMap";
  @SerializedName(SERIALIZED_NAME_REPORTS_TO_LIST_MAP)
  private Map<String, String> reportsToListMap = null;

  public static final String SERIALIZED_NAME_SECOND_LAST_NAME = "secondLastName";
  @SerializedName(SERIALIZED_NAME_SECOND_LAST_NAME)
  private String secondLastName;

  public static final String SERIALIZED_NAME_SHORT_NAME = "shortName";
  @SerializedName(SERIALIZED_NAME_SHORT_NAME)
  private String shortName;

  public static final String SERIALIZED_NAME_SKILL_USER_MODEL_LIST = "skillUserModelList";
  @SerializedName(SERIALIZED_NAME_SKILL_USER_MODEL_LIST)
  private List<SkillUserModel> skillUserModelList = null;

  public static final String SERIALIZED_NAME_STAR = "star";
  @SerializedName(SERIALIZED_NAME_STAR)
  private Integer star;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STRIPE_ID = "stripeId";
  @SerializedName(SERIALIZED_NAME_STRIPE_ID)
  private String stripeId;

  public static final String SERIALIZED_NAME_SUPERVISOR_MODEL_LIST = "supervisorModelList";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_MODEL_LIST)
  private List<UserThinModel> supervisorModelList = null;

  public static final String SERIALIZED_NAME_THUMBNAIL = "thumbnail";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL)
  private String thumbnail;

  public static final String SERIALIZED_NAME_TIMECARD_PERIOD_PREF = "timecardPeriodPref";
  @SerializedName(SERIALIZED_NAME_TIMECARD_PERIOD_PREF)
  private String timecardPeriodPref;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_TOS_VERSION = "tosVersion";
  @SerializedName(SERIALIZED_NAME_TOS_VERSION)
  private String tosVersion;

  public static final String SERIALIZED_NAME_USER_COUNTRY = "userCountry";
  @SerializedName(SERIALIZED_NAME_USER_COUNTRY)
  private String userCountry;

  public static final String SERIALIZED_NAME_USER_DATE_FORMAT = "userDateFormat";
  @SerializedName(SERIALIZED_NAME_USER_DATE_FORMAT)
  private String userDateFormat;

  public static final String SERIALIZED_NAME_USER_DATE_OF_BIRTH = "userDateOfBirth";
  @SerializedName(SERIALIZED_NAME_USER_DATE_OF_BIRTH)
  private LocalDate userDateOfBirth;

  public static final String SERIALIZED_NAME_USER_DISPLAY_NAME = "userDisplayName";
  @SerializedName(SERIALIZED_NAME_USER_DISPLAY_NAME)
  private String userDisplayName;

  public static final String SERIALIZED_NAME_USER_END_DATE = "userEndDate";
  @SerializedName(SERIALIZED_NAME_USER_END_DATE)
  private LocalDate userEndDate;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_USER_NAME_FORMAT = "userNameFormat";
  @SerializedName(SERIALIZED_NAME_USER_NAME_FORMAT)
  private String userNameFormat;

  public static final String SERIALIZED_NAME_USER_PROFILE_MODEL = "userProfileModel";
  @SerializedName(SERIALIZED_NAME_USER_PROFILE_MODEL)
  private UserProfileModel userProfileModel;

  public static final String SERIALIZED_NAME_USER_START_DATE = "userStartDate";
  @SerializedName(SERIALIZED_NAME_USER_START_DATE)
  private LocalDate userStartDate;

  public static final String SERIALIZED_NAME_USER_TRAINING_MODEL_LIST = "userTrainingModelList";
  @SerializedName(SERIALIZED_NAME_USER_TRAINING_MODEL_LIST)
  private List<UserTrainingModel> userTrainingModelList = null;

  public static final String SERIALIZED_NAME_USER_TYPE = "userType";
  @SerializedName(SERIALIZED_NAME_USER_TYPE)
  private String userType;

  public static final String SERIALIZED_NAME_VIEW = "view";
  @SerializedName(SERIALIZED_NAME_VIEW)
  private Boolean view;

  public static final String SERIALIZED_NAME_WORKER_TYPE = "workerType";
  @SerializedName(SERIALIZED_NAME_WORKER_TYPE)
  private String workerType;

  public static final String SERIALIZED_NAME_WORKER_TYPE_MODEL = "workerTypeModel";
  @SerializedName(SERIALIZED_NAME_WORKER_TYPE_MODEL)
  private WorkerTypeModel workerTypeModel;

  public static final String SERIALIZED_NAME_WORKING_DAYS = "workingDays";
  @SerializedName(SERIALIZED_NAME_WORKING_DAYS)
  private String workingDays;

  public static final String SERIALIZED_NAME_USER_NAME = "userName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public UserModel() {
  }

  public UserModel addressModelList(List<AddressModel> addressModelList) {
    
    
    
    
    this.addressModelList = addressModelList;
    return this;
  }

  public UserModel addAddressModelListItem(AddressModel addressModelListItem) {
    if (this.addressModelList == null) {
      this.addressModelList = new ArrayList<>();
    }
    this.addressModelList.add(addressModelListItem);
    return this;
  }

   /**
   * Get addressModelList
   * @return addressModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AddressModel> getAddressModelList() {
    return addressModelList;
  }


  public void setAddressModelList(List<AddressModel> addressModelList) {
    
    
    
    this.addressModelList = addressModelList;
  }


  public UserModel adpAssociateOID(String adpAssociateOID) {
    
    
    
    
    this.adpAssociateOID = adpAssociateOID;
    return this;
  }

   /**
   * Get adpAssociateOID
   * @return adpAssociateOID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAdpAssociateOID() {
    return adpAssociateOID;
  }


  public void setAdpAssociateOID(String adpAssociateOID) {
    
    
    
    this.adpAssociateOID = adpAssociateOID;
  }


  public UserModel allocation(Double allocation) {
    
    
    
    
    this.allocation = allocation;
    return this;
  }

   /**
   * Get allocation
   * @return allocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAllocation() {
    return allocation;
  }


  public void setAllocation(Double allocation) {
    
    
    
    this.allocation = allocation;
  }


  public UserModel appleUserIdentifier(String appleUserIdentifier) {
    
    
    
    
    this.appleUserIdentifier = appleUserIdentifier;
    return this;
  }

   /**
   * Get appleUserIdentifier
   * @return appleUserIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppleUserIdentifier() {
    return appleUserIdentifier;
  }


  public void setAppleUserIdentifier(String appleUserIdentifier) {
    
    
    
    this.appleUserIdentifier = appleUserIdentifier;
  }


  public UserModel assignments(String assignments) {
    
    
    
    
    this.assignments = assignments;
    return this;
  }

   /**
   * Get assignments
   * @return assignments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAssignments() {
    return assignments;
  }


  public void setAssignments(String assignments) {
    
    
    
    this.assignments = assignments;
  }


  public UserModel awardModelList(List<AwardModel> awardModelList) {
    
    
    
    
    this.awardModelList = awardModelList;
    return this;
  }

  public UserModel addAwardModelListItem(AwardModel awardModelListItem) {
    if (this.awardModelList == null) {
      this.awardModelList = new ArrayList<>();
    }
    this.awardModelList.add(awardModelListItem);
    return this;
  }

   /**
   * Get awardModelList
   * @return awardModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AwardModel> getAwardModelList() {
    return awardModelList;
  }


  public void setAwardModelList(List<AwardModel> awardModelList) {
    
    
    
    this.awardModelList = awardModelList;
  }


  public UserModel bankAccountModel(BankAccountModel bankAccountModel) {
    
    
    
    
    this.bankAccountModel = bankAccountModel;
    return this;
  }

   /**
   * Get bankAccountModel
   * @return bankAccountModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BankAccountModel getBankAccountModel() {
    return bankAccountModel;
  }


  public void setBankAccountModel(BankAccountModel bankAccountModel) {
    
    
    
    this.bankAccountModel = bankAccountModel;
  }


  public UserModel calWeekPref(String calWeekPref) {
    
    
    
    
    this.calWeekPref = calWeekPref;
    return this;
  }

   /**
   * Get calWeekPref
   * @return calWeekPref
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCalWeekPref() {
    return calWeekPref;
  }


  public void setCalWeekPref(String calWeekPref) {
    
    
    
    this.calWeekPref = calWeekPref;
  }


  public UserModel calendarId(Integer calendarId) {
    
    
    
    
    this.calendarId = calendarId;
    return this;
  }

   /**
   * Get calendarId
   * @return calendarId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCalendarId() {
    return calendarId;
  }


  public void setCalendarId(Integer calendarId) {
    
    
    
    this.calendarId = calendarId;
  }


  public UserModel calendarModel(HRCalendarModel calendarModel) {
    
    
    
    
    this.calendarModel = calendarModel;
    return this;
  }

   /**
   * Get calendarModel
   * @return calendarModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HRCalendarModel getCalendarModel() {
    return calendarModel;
  }


  public void setCalendarModel(HRCalendarModel calendarModel) {
    
    
    
    this.calendarModel = calendarModel;
  }


  public UserModel candidateId(Integer candidateId) {
    
    
    
    
    this.candidateId = candidateId;
    return this;
  }

   /**
   * Get candidateId
   * @return candidateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCandidateId() {
    return candidateId;
  }


  public void setCandidateId(Integer candidateId) {
    
    
    
    this.candidateId = candidateId;
  }


  public UserModel careerPathwayId(Integer careerPathwayId) {
    
    
    
    
    this.careerPathwayId = careerPathwayId;
    return this;
  }

   /**
   * Get careerPathwayId
   * @return careerPathwayId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCareerPathwayId() {
    return careerPathwayId;
  }


  public void setCareerPathwayId(Integer careerPathwayId) {
    
    
    
    this.careerPathwayId = careerPathwayId;
  }


  public UserModel cellPhone(String cellPhone) {
    
    
    
    
    this.cellPhone = cellPhone;
    return this;
  }

   /**
   * Get cellPhone
   * @return cellPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCellPhone() {
    return cellPhone;
  }


  public void setCellPhone(String cellPhone) {
    
    
    
    this.cellPhone = cellPhone;
  }


  public UserModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public UserModel countryId(Integer countryId) {
    
    
    
    
    this.countryId = countryId;
    return this;
  }

   /**
   * Get countryId
   * @return countryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCountryId() {
    return countryId;
  }


  public void setCountryId(Integer countryId) {
    
    
    
    this.countryId = countryId;
  }


  public UserModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public UserModel customFieldValueModelList(List<CustomFieldValueModel> customFieldValueModelList) {
    
    
    
    
    this.customFieldValueModelList = customFieldValueModelList;
    return this;
  }

  public UserModel addCustomFieldValueModelListItem(CustomFieldValueModel customFieldValueModelListItem) {
    if (this.customFieldValueModelList == null) {
      this.customFieldValueModelList = new ArrayList<>();
    }
    this.customFieldValueModelList.add(customFieldValueModelListItem);
    return this;
  }

   /**
   * Get customFieldValueModelList
   * @return customFieldValueModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomFieldValueModel> getCustomFieldValueModelList() {
    return customFieldValueModelList;
  }


  public void setCustomFieldValueModelList(List<CustomFieldValueModel> customFieldValueModelList) {
    
    
    
    this.customFieldValueModelList = customFieldValueModelList;
  }


  public UserModel customTableModelList(List<CustomTableModel> customTableModelList) {
    
    
    
    
    this.customTableModelList = customTableModelList;
    return this;
  }

  public UserModel addCustomTableModelListItem(CustomTableModel customTableModelListItem) {
    if (this.customTableModelList == null) {
      this.customTableModelList = new ArrayList<>();
    }
    this.customTableModelList.add(customTableModelListItem);
    return this;
  }

   /**
   * Get customTableModelList
   * @return customTableModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomTableModel> getCustomTableModelList() {
    return customTableModelList;
  }


  public void setCustomTableModelList(List<CustomTableModel> customTableModelList) {
    
    
    
    this.customTableModelList = customTableModelList;
  }


  public UserModel departmentModel(DepartmentModel departmentModel) {
    
    
    
    
    this.departmentModel = departmentModel;
    return this;
  }

   /**
   * Get departmentModel
   * @return departmentModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DepartmentModel getDepartmentModel() {
    return departmentModel;
  }


  public void setDepartmentModel(DepartmentModel departmentModel) {
    
    
    
    this.departmentModel = departmentModel;
  }


  public UserModel departmentName(String departmentName) {
    
    
    
    
    this.departmentName = departmentName;
    return this;
  }

   /**
   * Get departmentName
   * @return departmentName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDepartmentName() {
    return departmentName;
  }


  public void setDepartmentName(String departmentName) {
    
    
    
    this.departmentName = departmentName;
  }


  public UserModel displayFullName(String displayFullName) {
    
    
    
    
    this.displayFullName = displayFullName;
    return this;
  }

   /**
   * Get displayFullName
   * @return displayFullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisplayFullName() {
    return displayFullName;
  }


  public void setDisplayFullName(String displayFullName) {
    
    
    
    this.displayFullName = displayFullName;
  }


  public UserModel educationModelList(List<EducationModel> educationModelList) {
    
    
    
    
    this.educationModelList = educationModelList;
    return this;
  }

  public UserModel addEducationModelListItem(EducationModel educationModelListItem) {
    if (this.educationModelList == null) {
      this.educationModelList = new ArrayList<>();
    }
    this.educationModelList.add(educationModelListItem);
    return this;
  }

   /**
   * Get educationModelList
   * @return educationModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EducationModel> getEducationModelList() {
    return educationModelList;
  }


  public void setEducationModelList(List<EducationModel> educationModelList) {
    
    
    
    this.educationModelList = educationModelList;
  }


  public UserModel email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public UserModel empId(String empId) {
    
    
    
    
    this.empId = empId;
    return this;
  }

   /**
   * Get empId
   * @return empId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmpId() {
    return empId;
  }


  public void setEmpId(String empId) {
    
    
    
    this.empId = empId;
  }


  public UserModel employmentModelList(List<EmploymentModel> employmentModelList) {
    
    
    
    
    this.employmentModelList = employmentModelList;
    return this;
  }

  public UserModel addEmploymentModelListItem(EmploymentModel employmentModelListItem) {
    if (this.employmentModelList == null) {
      this.employmentModelList = new ArrayList<>();
    }
    this.employmentModelList.add(employmentModelListItem);
    return this;
  }

   /**
   * Get employmentModelList
   * @return employmentModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EmploymentModel> getEmploymentModelList() {
    return employmentModelList;
  }


  public void setEmploymentModelList(List<EmploymentModel> employmentModelList) {
    
    
    
    this.employmentModelList = employmentModelList;
  }


  public UserModel familySuffix(String familySuffix) {
    
    
    
    
    this.familySuffix = familySuffix;
    return this;
  }

   /**
   * Get familySuffix
   * @return familySuffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFamilySuffix() {
    return familySuffix;
  }


  public void setFamilySuffix(String familySuffix) {
    
    
    
    this.familySuffix = familySuffix;
  }


  public UserModel financialModelList(List<FinancialModel> financialModelList) {
    
    
    
    
    this.financialModelList = financialModelList;
    return this;
  }

  public UserModel addFinancialModelListItem(FinancialModel financialModelListItem) {
    if (this.financialModelList == null) {
      this.financialModelList = new ArrayList<>();
    }
    this.financialModelList.add(financialModelListItem);
    return this;
  }

   /**
   * Get financialModelList
   * @return financialModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FinancialModel> getFinancialModelList() {
    return financialModelList;
  }


  public void setFinancialModelList(List<FinancialModel> financialModelList) {
    
    
    
    this.financialModelList = financialModelList;
  }


  public UserModel firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public UserModel gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public UserModel guid(String guid) {
    
    
    
    
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    
    
    
    this.guid = guid;
  }


  public UserModel hasAccess(Boolean hasAccess) {
    
    
    
    
    this.hasAccess = hasAccess;
    return this;
  }

   /**
   * Get hasAccess
   * @return hasAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasAccess() {
    return hasAccess;
  }


  public void setHasAccess(Boolean hasAccess) {
    
    
    
    this.hasAccess = hasAccess;
  }


  public UserModel hrPortal(String hrPortal) {
    
    
    
    
    this.hrPortal = hrPortal;
    return this;
  }

   /**
   * Get hrPortal
   * @return hrPortal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHrPortal() {
    return hrPortal;
  }


  public void setHrPortal(String hrPortal) {
    
    
    
    this.hrPortal = hrPortal;
  }


  public UserModel im(String im) {
    
    
    
    
    this.im = im;
    return this;
  }

   /**
   * Get im
   * @return im
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIm() {
    return im;
  }


  public void setIm(String im) {
    
    
    
    this.im = im;
  }


  public UserModel imageName(String imageName) {
    
    
    
    
    this.imageName = imageName;
    return this;
  }

   /**
   * Get imageName
   * @return imageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImageName() {
    return imageName;
  }


  public void setImageName(String imageName) {
    
    
    
    this.imageName = imageName;
  }


  public UserModel isView(Boolean isView) {
    
    
    
    
    this.isView = isView;
    return this;
  }

   /**
   * Get isView
   * @return isView
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsView() {
    return isView;
  }


  public void setIsView(Boolean isView) {
    
    
    
    this.isView = isView;
  }


  public UserModel jobGrade(String jobGrade) {
    
    
    
    
    this.jobGrade = jobGrade;
    return this;
  }

   /**
   * Get jobGrade
   * @return jobGrade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobGrade() {
    return jobGrade;
  }


  public void setJobGrade(String jobGrade) {
    
    
    
    this.jobGrade = jobGrade;
  }


  public UserModel languagePreference(String languagePreference) {
    
    
    
    
    this.languagePreference = languagePreference;
    return this;
  }

   /**
   * Get languagePreference
   * @return languagePreference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLanguagePreference() {
    return languagePreference;
  }


  public void setLanguagePreference(String languagePreference) {
    
    
    
    this.languagePreference = languagePreference;
  }


  public UserModel lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public UserModel lastUpdateUsername(String lastUpdateUsername) {
    
    
    
    
    this.lastUpdateUsername = lastUpdateUsername;
    return this;
  }

   /**
   * Get lastUpdateUsername
   * @return lastUpdateUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastUpdateUsername() {
    return lastUpdateUsername;
  }


  public void setLastUpdateUsername(String lastUpdateUsername) {
    
    
    
    this.lastUpdateUsername = lastUpdateUsername;
  }


  public UserModel lastupdatets(LocalDate lastupdatets) {
    
    
    
    
    this.lastupdatets = lastupdatets;
    return this;
  }

   /**
   * Get lastupdatets
   * @return lastupdatets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getLastupdatets() {
    return lastupdatets;
  }


  public void setLastupdatets(LocalDate lastupdatets) {
    
    
    
    this.lastupdatets = lastupdatets;
  }


  public UserModel lastupdateuserid(Integer lastupdateuserid) {
    
    
    
    
    this.lastupdateuserid = lastupdateuserid;
    return this;
  }

   /**
   * Get lastupdateuserid
   * @return lastupdateuserid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLastupdateuserid() {
    return lastupdateuserid;
  }


  public void setLastupdateuserid(Integer lastupdateuserid) {
    
    
    
    this.lastupdateuserid = lastupdateuserid;
  }


  public UserModel licenseModelList(List<CertificationModel> licenseModelList) {
    
    
    
    
    this.licenseModelList = licenseModelList;
    return this;
  }

  public UserModel addLicenseModelListItem(CertificationModel licenseModelListItem) {
    if (this.licenseModelList == null) {
      this.licenseModelList = new ArrayList<>();
    }
    this.licenseModelList.add(licenseModelListItem);
    return this;
  }

   /**
   * Get licenseModelList
   * @return licenseModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CertificationModel> getLicenseModelList() {
    return licenseModelList;
  }


  public void setLicenseModelList(List<CertificationModel> licenseModelList) {
    
    
    
    this.licenseModelList = licenseModelList;
  }


  public UserModel locationModel(LocationModel locationModel) {
    
    
    
    
    this.locationModel = locationModel;
    return this;
  }

   /**
   * Get locationModel
   * @return locationModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocationModel getLocationModel() {
    return locationModel;
  }


  public void setLocationModel(LocationModel locationModel) {
    
    
    
    this.locationModel = locationModel;
  }


  public UserModel mfaPreference(Boolean mfaPreference) {
    
    
    
    
    this.mfaPreference = mfaPreference;
    return this;
  }

   /**
   * Get mfaPreference
   * @return mfaPreference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getMfaPreference() {
    return mfaPreference;
  }


  public void setMfaPreference(Boolean mfaPreference) {
    
    
    
    this.mfaPreference = mfaPreference;
  }


  public UserModel mfaSecretKey(String mfaSecretKey) {
    
    
    
    
    this.mfaSecretKey = mfaSecretKey;
    return this;
  }

   /**
   * Get mfaSecretKey
   * @return mfaSecretKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMfaSecretKey() {
    return mfaSecretKey;
  }


  public void setMfaSecretKey(String mfaSecretKey) {
    
    
    
    this.mfaSecretKey = mfaSecretKey;
  }


  public UserModel middleName(String middleName) {
    
    
    
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Get middleName
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMiddleName() {
    return middleName;
  }


  public void setMiddleName(String middleName) {
    
    
    
    this.middleName = middleName;
  }


  public UserModel namePronunciation(String namePronunciation) {
    
    
    
    
    this.namePronunciation = namePronunciation;
    return this;
  }

   /**
   * Get namePronunciation
   * @return namePronunciation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNamePronunciation() {
    return namePronunciation;
  }


  public void setNamePronunciation(String namePronunciation) {
    
    
    
    this.namePronunciation = namePronunciation;
  }


  public UserModel notifications(Boolean notifications) {
    
    
    
    
    this.notifications = notifications;
    return this;
  }

   /**
   * Get notifications
   * @return notifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNotifications() {
    return notifications;
  }


  public void setNotifications(Boolean notifications) {
    
    
    
    this.notifications = notifications;
  }


  public UserModel paId(Integer paId) {
    
    
    
    
    this.paId = paId;
    return this;
  }

   /**
   * Get paId
   * @return paId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPaId() {
    return paId;
  }


  public void setPaId(Integer paId) {
    
    
    
    this.paId = paId;
  }


  public UserModel phone(String phone) {
    
    
    
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    
    
    
    this.phone = phone;
  }


  public UserModel position(String position) {
    
    
    
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPosition() {
    return position;
  }


  public void setPosition(String position) {
    
    
    
    this.position = position;
  }


  public UserModel prefixSalutation(String prefixSalutation) {
    
    
    
    
    this.prefixSalutation = prefixSalutation;
    return this;
  }

   /**
   * Get prefixSalutation
   * @return prefixSalutation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrefixSalutation() {
    return prefixSalutation;
  }


  public void setPrefixSalutation(String prefixSalutation) {
    
    
    
    this.prefixSalutation = prefixSalutation;
  }


  public UserModel profileId(Integer profileId) {
    
    
    
    
    this.profileId = profileId;
    return this;
  }

   /**
   * Get profileId
   * @return profileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProfileId() {
    return profileId;
  }


  public void setProfileId(Integer profileId) {
    
    
    
    this.profileId = profileId;
  }


  public UserModel profileName(String profileName) {
    
    
    
    
    this.profileName = profileName;
    return this;
  }

   /**
   * Get profileName
   * @return profileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProfileName() {
    return profileName;
  }


  public void setProfileName(String profileName) {
    
    
    
    this.profileName = profileName;
  }


  public UserModel projectModel(ProjectModel projectModel) {
    
    
    
    
    this.projectModel = projectModel;
    return this;
  }

   /**
   * Get projectModel
   * @return projectModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProjectModel getProjectModel() {
    return projectModel;
  }


  public void setProjectModel(ProjectModel projectModel) {
    
    
    
    this.projectModel = projectModel;
  }


  public UserModel projectModelList(List<ProjectModel> projectModelList) {
    
    
    
    
    this.projectModelList = projectModelList;
    return this;
  }

  public UserModel addProjectModelListItem(ProjectModel projectModelListItem) {
    if (this.projectModelList == null) {
      this.projectModelList = new ArrayList<>();
    }
    this.projectModelList.add(projectModelListItem);
    return this;
  }

   /**
   * Get projectModelList
   * @return projectModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProjectModel> getProjectModelList() {
    return projectModelList;
  }


  public void setProjectModelList(List<ProjectModel> projectModelList) {
    
    
    
    this.projectModelList = projectModelList;
  }


  public UserModel ptoannual(Float ptoannual) {
    
    
    
    
    this.ptoannual = ptoannual;
    return this;
  }

   /**
   * Get ptoannual
   * @return ptoannual
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getPtoannual() {
    return ptoannual;
  }


  public void setPtoannual(Float ptoannual) {
    
    
    
    this.ptoannual = ptoannual;
  }


  public UserModel ptobalance(Float ptobalance) {
    
    
    
    
    this.ptobalance = ptobalance;
    return this;
  }

   /**
   * Get ptobalance
   * @return ptobalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getPtobalance() {
    return ptobalance;
  }


  public void setPtobalance(Float ptobalance) {
    
    
    
    this.ptobalance = ptobalance;
  }


  public UserModel qboPref(Integer qboPref) {
    
    
    
    
    this.qboPref = qboPref;
    return this;
  }

   /**
   * Get qboPref
   * @return qboPref
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getQboPref() {
    return qboPref;
  }


  public void setQboPref(Integer qboPref) {
    
    
    
    this.qboPref = qboPref;
  }


  public UserModel relativeDate(String relativeDate) {
    
    
    
    
    this.relativeDate = relativeDate;
    return this;
  }

   /**
   * Get relativeDate
   * @return relativeDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRelativeDate() {
    return relativeDate;
  }


  public void setRelativeDate(String relativeDate) {
    
    
    
    this.relativeDate = relativeDate;
  }


  public UserModel reportsToListMap(Map<String, String> reportsToListMap) {
    
    
    
    
    this.reportsToListMap = reportsToListMap;
    return this;
  }

  public UserModel putReportsToListMapItem(String key, String reportsToListMapItem) {
    if (this.reportsToListMap == null) {
      this.reportsToListMap = new HashMap<>();
    }
    this.reportsToListMap.put(key, reportsToListMapItem);
    return this;
  }

   /**
   * Get reportsToListMap
   * @return reportsToListMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getReportsToListMap() {
    return reportsToListMap;
  }


  public void setReportsToListMap(Map<String, String> reportsToListMap) {
    
    
    
    this.reportsToListMap = reportsToListMap;
  }


  public UserModel secondLastName(String secondLastName) {
    
    
    
    
    this.secondLastName = secondLastName;
    return this;
  }

   /**
   * Get secondLastName
   * @return secondLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecondLastName() {
    return secondLastName;
  }


  public void setSecondLastName(String secondLastName) {
    
    
    
    this.secondLastName = secondLastName;
  }


  public UserModel shortName(String shortName) {
    
    
    
    
    this.shortName = shortName;
    return this;
  }

   /**
   * Get shortName
   * @return shortName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShortName() {
    return shortName;
  }


  public void setShortName(String shortName) {
    
    
    
    this.shortName = shortName;
  }


  public UserModel skillUserModelList(List<SkillUserModel> skillUserModelList) {
    
    
    
    
    this.skillUserModelList = skillUserModelList;
    return this;
  }

  public UserModel addSkillUserModelListItem(SkillUserModel skillUserModelListItem) {
    if (this.skillUserModelList == null) {
      this.skillUserModelList = new ArrayList<>();
    }
    this.skillUserModelList.add(skillUserModelListItem);
    return this;
  }

   /**
   * Get skillUserModelList
   * @return skillUserModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SkillUserModel> getSkillUserModelList() {
    return skillUserModelList;
  }


  public void setSkillUserModelList(List<SkillUserModel> skillUserModelList) {
    
    
    
    this.skillUserModelList = skillUserModelList;
  }


  public UserModel star(Integer star) {
    
    
    
    
    this.star = star;
    return this;
  }

   /**
   * Get star
   * @return star
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStar() {
    return star;
  }


  public void setStar(Integer star) {
    
    
    
    this.star = star;
  }


  public UserModel status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public UserModel stripeId(String stripeId) {
    
    
    
    
    this.stripeId = stripeId;
    return this;
  }

   /**
   * Get stripeId
   * @return stripeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStripeId() {
    return stripeId;
  }


  public void setStripeId(String stripeId) {
    
    
    
    this.stripeId = stripeId;
  }


  public UserModel supervisorModelList(List<UserThinModel> supervisorModelList) {
    
    
    
    
    this.supervisorModelList = supervisorModelList;
    return this;
  }

  public UserModel addSupervisorModelListItem(UserThinModel supervisorModelListItem) {
    if (this.supervisorModelList == null) {
      this.supervisorModelList = new ArrayList<>();
    }
    this.supervisorModelList.add(supervisorModelListItem);
    return this;
  }

   /**
   * Get supervisorModelList
   * @return supervisorModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<UserThinModel> getSupervisorModelList() {
    return supervisorModelList;
  }


  public void setSupervisorModelList(List<UserThinModel> supervisorModelList) {
    
    
    
    this.supervisorModelList = supervisorModelList;
  }


  public UserModel thumbnail(String thumbnail) {
    
    
    
    
    this.thumbnail = thumbnail;
    return this;
  }

   /**
   * Get thumbnail
   * @return thumbnail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getThumbnail() {
    return thumbnail;
  }


  public void setThumbnail(String thumbnail) {
    
    
    
    this.thumbnail = thumbnail;
  }


  public UserModel timecardPeriodPref(String timecardPeriodPref) {
    
    
    
    
    this.timecardPeriodPref = timecardPeriodPref;
    return this;
  }

   /**
   * Get timecardPeriodPref
   * @return timecardPeriodPref
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTimecardPeriodPref() {
    return timecardPeriodPref;
  }


  public void setTimecardPeriodPref(String timecardPeriodPref) {
    
    
    
    this.timecardPeriodPref = timecardPeriodPref;
  }


  public UserModel timezone(String timezone) {
    
    
    
    
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTimezone() {
    return timezone;
  }


  public void setTimezone(String timezone) {
    
    
    
    this.timezone = timezone;
  }


  public UserModel tosVersion(String tosVersion) {
    
    
    
    
    this.tosVersion = tosVersion;
    return this;
  }

   /**
   * Get tosVersion
   * @return tosVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTosVersion() {
    return tosVersion;
  }


  public void setTosVersion(String tosVersion) {
    
    
    
    this.tosVersion = tosVersion;
  }


  public UserModel userCountry(String userCountry) {
    
    
    
    
    this.userCountry = userCountry;
    return this;
  }

   /**
   * Get userCountry
   * @return userCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserCountry() {
    return userCountry;
  }


  public void setUserCountry(String userCountry) {
    
    
    
    this.userCountry = userCountry;
  }


  public UserModel userDateFormat(String userDateFormat) {
    
    
    
    
    this.userDateFormat = userDateFormat;
    return this;
  }

   /**
   * Get userDateFormat
   * @return userDateFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserDateFormat() {
    return userDateFormat;
  }


  public void setUserDateFormat(String userDateFormat) {
    
    
    
    this.userDateFormat = userDateFormat;
  }


  public UserModel userDateOfBirth(LocalDate userDateOfBirth) {
    
    
    
    
    this.userDateOfBirth = userDateOfBirth;
    return this;
  }

   /**
   * Get userDateOfBirth
   * @return userDateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getUserDateOfBirth() {
    return userDateOfBirth;
  }


  public void setUserDateOfBirth(LocalDate userDateOfBirth) {
    
    
    
    this.userDateOfBirth = userDateOfBirth;
  }


  public UserModel userDisplayName(String userDisplayName) {
    
    
    
    
    this.userDisplayName = userDisplayName;
    return this;
  }

   /**
   * Get userDisplayName
   * @return userDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserDisplayName() {
    return userDisplayName;
  }


  public void setUserDisplayName(String userDisplayName) {
    
    
    
    this.userDisplayName = userDisplayName;
  }


  public UserModel userEndDate(LocalDate userEndDate) {
    
    
    
    
    this.userEndDate = userEndDate;
    return this;
  }

   /**
   * Get userEndDate
   * @return userEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getUserEndDate() {
    return userEndDate;
  }


  public void setUserEndDate(LocalDate userEndDate) {
    
    
    
    this.userEndDate = userEndDate;
  }


  public UserModel userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public UserModel userNameFormat(String userNameFormat) {
    
    
    
    
    this.userNameFormat = userNameFormat;
    return this;
  }

   /**
   * Get userNameFormat
   * @return userNameFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserNameFormat() {
    return userNameFormat;
  }


  public void setUserNameFormat(String userNameFormat) {
    
    
    
    this.userNameFormat = userNameFormat;
  }


  public UserModel userProfileModel(UserProfileModel userProfileModel) {
    
    
    
    
    this.userProfileModel = userProfileModel;
    return this;
  }

   /**
   * Get userProfileModel
   * @return userProfileModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserProfileModel getUserProfileModel() {
    return userProfileModel;
  }


  public void setUserProfileModel(UserProfileModel userProfileModel) {
    
    
    
    this.userProfileModel = userProfileModel;
  }


  public UserModel userStartDate(LocalDate userStartDate) {
    
    
    
    
    this.userStartDate = userStartDate;
    return this;
  }

   /**
   * Get userStartDate
   * @return userStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getUserStartDate() {
    return userStartDate;
  }


  public void setUserStartDate(LocalDate userStartDate) {
    
    
    
    this.userStartDate = userStartDate;
  }


  public UserModel userTrainingModelList(List<UserTrainingModel> userTrainingModelList) {
    
    
    
    
    this.userTrainingModelList = userTrainingModelList;
    return this;
  }

  public UserModel addUserTrainingModelListItem(UserTrainingModel userTrainingModelListItem) {
    if (this.userTrainingModelList == null) {
      this.userTrainingModelList = new ArrayList<>();
    }
    this.userTrainingModelList.add(userTrainingModelListItem);
    return this;
  }

   /**
   * Get userTrainingModelList
   * @return userTrainingModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<UserTrainingModel> getUserTrainingModelList() {
    return userTrainingModelList;
  }


  public void setUserTrainingModelList(List<UserTrainingModel> userTrainingModelList) {
    
    
    
    this.userTrainingModelList = userTrainingModelList;
  }


  public UserModel userType(String userType) {
    
    
    
    
    this.userType = userType;
    return this;
  }

   /**
   * Get userType
   * @return userType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserType() {
    return userType;
  }


  public void setUserType(String userType) {
    
    
    
    this.userType = userType;
  }


  public UserModel view(Boolean view) {
    
    
    
    
    this.view = view;
    return this;
  }

   /**
   * Get view
   * @return view
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getView() {
    return view;
  }


  public void setView(Boolean view) {
    
    
    
    this.view = view;
  }


  public UserModel workerType(String workerType) {
    
    
    
    
    this.workerType = workerType;
    return this;
  }

   /**
   * Get workerType
   * @return workerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkerType() {
    return workerType;
  }


  public void setWorkerType(String workerType) {
    
    
    
    this.workerType = workerType;
  }


  public UserModel workerTypeModel(WorkerTypeModel workerTypeModel) {
    
    
    
    
    this.workerTypeModel = workerTypeModel;
    return this;
  }

   /**
   * Get workerTypeModel
   * @return workerTypeModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkerTypeModel getWorkerTypeModel() {
    return workerTypeModel;
  }


  public void setWorkerTypeModel(WorkerTypeModel workerTypeModel) {
    
    
    
    this.workerTypeModel = workerTypeModel;
  }


  public UserModel workingDays(String workingDays) {
    
    
    
    
    this.workingDays = workingDays;
    return this;
  }

   /**
   * Get workingDays
   * @return workingDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkingDays() {
    return workingDays;
  }


  public void setWorkingDays(String workingDays) {
    
    
    
    this.workingDays = workingDays;
  }


  public UserModel userName(String userName) {
    
    
    
    
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    
    
    
    this.userName = userName;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UserModel instance itself
   */
  public UserModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserModel userModel = (UserModel) o;
    return Objects.equals(this.addressModelList, userModel.addressModelList) &&
        Objects.equals(this.adpAssociateOID, userModel.adpAssociateOID) &&
        Objects.equals(this.allocation, userModel.allocation) &&
        Objects.equals(this.appleUserIdentifier, userModel.appleUserIdentifier) &&
        Objects.equals(this.assignments, userModel.assignments) &&
        Objects.equals(this.awardModelList, userModel.awardModelList) &&
        Objects.equals(this.bankAccountModel, userModel.bankAccountModel) &&
        Objects.equals(this.calWeekPref, userModel.calWeekPref) &&
        Objects.equals(this.calendarId, userModel.calendarId) &&
        Objects.equals(this.calendarModel, userModel.calendarModel) &&
        Objects.equals(this.candidateId, userModel.candidateId) &&
        Objects.equals(this.careerPathwayId, userModel.careerPathwayId) &&
        Objects.equals(this.cellPhone, userModel.cellPhone) &&
        Objects.equals(this.cid, userModel.cid) &&
        Objects.equals(this.countryId, userModel.countryId) &&
        Objects.equals(this.createts, userModel.createts) &&
        Objects.equals(this.customFieldValueModelList, userModel.customFieldValueModelList) &&
        Objects.equals(this.customTableModelList, userModel.customTableModelList) &&
        Objects.equals(this.departmentModel, userModel.departmentModel) &&
        Objects.equals(this.departmentName, userModel.departmentName) &&
        Objects.equals(this.displayFullName, userModel.displayFullName) &&
        Objects.equals(this.educationModelList, userModel.educationModelList) &&
        Objects.equals(this.email, userModel.email) &&
        Objects.equals(this.empId, userModel.empId) &&
        Objects.equals(this.employmentModelList, userModel.employmentModelList) &&
        Objects.equals(this.familySuffix, userModel.familySuffix) &&
        Objects.equals(this.financialModelList, userModel.financialModelList) &&
        Objects.equals(this.firstName, userModel.firstName) &&
        Objects.equals(this.gender, userModel.gender) &&
        Objects.equals(this.guid, userModel.guid) &&
        Objects.equals(this.hasAccess, userModel.hasAccess) &&
        Objects.equals(this.hrPortal, userModel.hrPortal) &&
        Objects.equals(this.im, userModel.im) &&
        Objects.equals(this.imageName, userModel.imageName) &&
        Objects.equals(this.isView, userModel.isView) &&
        Objects.equals(this.jobGrade, userModel.jobGrade) &&
        Objects.equals(this.languagePreference, userModel.languagePreference) &&
        Objects.equals(this.lastName, userModel.lastName) &&
        Objects.equals(this.lastUpdateUsername, userModel.lastUpdateUsername) &&
        Objects.equals(this.lastupdatets, userModel.lastupdatets) &&
        Objects.equals(this.lastupdateuserid, userModel.lastupdateuserid) &&
        Objects.equals(this.licenseModelList, userModel.licenseModelList) &&
        Objects.equals(this.locationModel, userModel.locationModel) &&
        Objects.equals(this.mfaPreference, userModel.mfaPreference) &&
        Objects.equals(this.mfaSecretKey, userModel.mfaSecretKey) &&
        Objects.equals(this.middleName, userModel.middleName) &&
        Objects.equals(this.namePronunciation, userModel.namePronunciation) &&
        Objects.equals(this.notifications, userModel.notifications) &&
        Objects.equals(this.paId, userModel.paId) &&
        Objects.equals(this.phone, userModel.phone) &&
        Objects.equals(this.position, userModel.position) &&
        Objects.equals(this.prefixSalutation, userModel.prefixSalutation) &&
        Objects.equals(this.profileId, userModel.profileId) &&
        Objects.equals(this.profileName, userModel.profileName) &&
        Objects.equals(this.projectModel, userModel.projectModel) &&
        Objects.equals(this.projectModelList, userModel.projectModelList) &&
        Objects.equals(this.ptoannual, userModel.ptoannual) &&
        Objects.equals(this.ptobalance, userModel.ptobalance) &&
        Objects.equals(this.qboPref, userModel.qboPref) &&
        Objects.equals(this.relativeDate, userModel.relativeDate) &&
        Objects.equals(this.reportsToListMap, userModel.reportsToListMap) &&
        Objects.equals(this.secondLastName, userModel.secondLastName) &&
        Objects.equals(this.shortName, userModel.shortName) &&
        Objects.equals(this.skillUserModelList, userModel.skillUserModelList) &&
        Objects.equals(this.star, userModel.star) &&
        Objects.equals(this.status, userModel.status) &&
        Objects.equals(this.stripeId, userModel.stripeId) &&
        Objects.equals(this.supervisorModelList, userModel.supervisorModelList) &&
        Objects.equals(this.thumbnail, userModel.thumbnail) &&
        Objects.equals(this.timecardPeriodPref, userModel.timecardPeriodPref) &&
        Objects.equals(this.timezone, userModel.timezone) &&
        Objects.equals(this.tosVersion, userModel.tosVersion) &&
        Objects.equals(this.userCountry, userModel.userCountry) &&
        Objects.equals(this.userDateFormat, userModel.userDateFormat) &&
        Objects.equals(this.userDateOfBirth, userModel.userDateOfBirth) &&
        Objects.equals(this.userDisplayName, userModel.userDisplayName) &&
        Objects.equals(this.userEndDate, userModel.userEndDate) &&
        Objects.equals(this.userId, userModel.userId) &&
        Objects.equals(this.userNameFormat, userModel.userNameFormat) &&
        Objects.equals(this.userProfileModel, userModel.userProfileModel) &&
        Objects.equals(this.userStartDate, userModel.userStartDate) &&
        Objects.equals(this.userTrainingModelList, userModel.userTrainingModelList) &&
        Objects.equals(this.userType, userModel.userType) &&
        Objects.equals(this.view, userModel.view) &&
        Objects.equals(this.workerType, userModel.workerType) &&
        Objects.equals(this.workerTypeModel, userModel.workerTypeModel) &&
        Objects.equals(this.workingDays, userModel.workingDays) &&
        Objects.equals(this.userName, userModel.userName)&&
        Objects.equals(this.additionalProperties, userModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressModelList, adpAssociateOID, allocation, appleUserIdentifier, assignments, awardModelList, bankAccountModel, calWeekPref, calendarId, calendarModel, candidateId, careerPathwayId, cellPhone, cid, countryId, createts, customFieldValueModelList, customTableModelList, departmentModel, departmentName, displayFullName, educationModelList, email, empId, employmentModelList, familySuffix, financialModelList, firstName, gender, guid, hasAccess, hrPortal, im, imageName, isView, jobGrade, languagePreference, lastName, lastUpdateUsername, lastupdatets, lastupdateuserid, licenseModelList, locationModel, mfaPreference, mfaSecretKey, middleName, namePronunciation, notifications, paId, phone, position, prefixSalutation, profileId, profileName, projectModel, projectModelList, ptoannual, ptobalance, qboPref, relativeDate, reportsToListMap, secondLastName, shortName, skillUserModelList, star, status, stripeId, supervisorModelList, thumbnail, timecardPeriodPref, timezone, tosVersion, userCountry, userDateFormat, userDateOfBirth, userDisplayName, userEndDate, userId, userNameFormat, userProfileModel, userStartDate, userTrainingModelList, userType, view, workerType, workerTypeModel, workingDays, userName, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserModel {\n");
    sb.append("    addressModelList: ").append(toIndentedString(addressModelList)).append("\n");
    sb.append("    adpAssociateOID: ").append(toIndentedString(adpAssociateOID)).append("\n");
    sb.append("    allocation: ").append(toIndentedString(allocation)).append("\n");
    sb.append("    appleUserIdentifier: ").append(toIndentedString(appleUserIdentifier)).append("\n");
    sb.append("    assignments: ").append(toIndentedString(assignments)).append("\n");
    sb.append("    awardModelList: ").append(toIndentedString(awardModelList)).append("\n");
    sb.append("    bankAccountModel: ").append(toIndentedString(bankAccountModel)).append("\n");
    sb.append("    calWeekPref: ").append(toIndentedString(calWeekPref)).append("\n");
    sb.append("    calendarId: ").append(toIndentedString(calendarId)).append("\n");
    sb.append("    calendarModel: ").append(toIndentedString(calendarModel)).append("\n");
    sb.append("    candidateId: ").append(toIndentedString(candidateId)).append("\n");
    sb.append("    careerPathwayId: ").append(toIndentedString(careerPathwayId)).append("\n");
    sb.append("    cellPhone: ").append(toIndentedString(cellPhone)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    customFieldValueModelList: ").append(toIndentedString(customFieldValueModelList)).append("\n");
    sb.append("    customTableModelList: ").append(toIndentedString(customTableModelList)).append("\n");
    sb.append("    departmentModel: ").append(toIndentedString(departmentModel)).append("\n");
    sb.append("    departmentName: ").append(toIndentedString(departmentName)).append("\n");
    sb.append("    displayFullName: ").append(toIndentedString(displayFullName)).append("\n");
    sb.append("    educationModelList: ").append(toIndentedString(educationModelList)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    empId: ").append(toIndentedString(empId)).append("\n");
    sb.append("    employmentModelList: ").append(toIndentedString(employmentModelList)).append("\n");
    sb.append("    familySuffix: ").append(toIndentedString(familySuffix)).append("\n");
    sb.append("    financialModelList: ").append(toIndentedString(financialModelList)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    hasAccess: ").append(toIndentedString(hasAccess)).append("\n");
    sb.append("    hrPortal: ").append(toIndentedString(hrPortal)).append("\n");
    sb.append("    im: ").append(toIndentedString(im)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    isView: ").append(toIndentedString(isView)).append("\n");
    sb.append("    jobGrade: ").append(toIndentedString(jobGrade)).append("\n");
    sb.append("    languagePreference: ").append(toIndentedString(languagePreference)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    lastUpdateUsername: ").append(toIndentedString(lastUpdateUsername)).append("\n");
    sb.append("    lastupdatets: ").append(toIndentedString(lastupdatets)).append("\n");
    sb.append("    lastupdateuserid: ").append(toIndentedString(lastupdateuserid)).append("\n");
    sb.append("    licenseModelList: ").append(toIndentedString(licenseModelList)).append("\n");
    sb.append("    locationModel: ").append(toIndentedString(locationModel)).append("\n");
    sb.append("    mfaPreference: ").append(toIndentedString(mfaPreference)).append("\n");
    sb.append("    mfaSecretKey: ").append(toIndentedString(mfaSecretKey)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    namePronunciation: ").append(toIndentedString(namePronunciation)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    paId: ").append(toIndentedString(paId)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    prefixSalutation: ").append(toIndentedString(prefixSalutation)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    profileName: ").append(toIndentedString(profileName)).append("\n");
    sb.append("    projectModel: ").append(toIndentedString(projectModel)).append("\n");
    sb.append("    projectModelList: ").append(toIndentedString(projectModelList)).append("\n");
    sb.append("    ptoannual: ").append(toIndentedString(ptoannual)).append("\n");
    sb.append("    ptobalance: ").append(toIndentedString(ptobalance)).append("\n");
    sb.append("    qboPref: ").append(toIndentedString(qboPref)).append("\n");
    sb.append("    relativeDate: ").append(toIndentedString(relativeDate)).append("\n");
    sb.append("    reportsToListMap: ").append(toIndentedString(reportsToListMap)).append("\n");
    sb.append("    secondLastName: ").append(toIndentedString(secondLastName)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    skillUserModelList: ").append(toIndentedString(skillUserModelList)).append("\n");
    sb.append("    star: ").append(toIndentedString(star)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    stripeId: ").append(toIndentedString(stripeId)).append("\n");
    sb.append("    supervisorModelList: ").append(toIndentedString(supervisorModelList)).append("\n");
    sb.append("    thumbnail: ").append(toIndentedString(thumbnail)).append("\n");
    sb.append("    timecardPeriodPref: ").append(toIndentedString(timecardPeriodPref)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    tosVersion: ").append(toIndentedString(tosVersion)).append("\n");
    sb.append("    userCountry: ").append(toIndentedString(userCountry)).append("\n");
    sb.append("    userDateFormat: ").append(toIndentedString(userDateFormat)).append("\n");
    sb.append("    userDateOfBirth: ").append(toIndentedString(userDateOfBirth)).append("\n");
    sb.append("    userDisplayName: ").append(toIndentedString(userDisplayName)).append("\n");
    sb.append("    userEndDate: ").append(toIndentedString(userEndDate)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userNameFormat: ").append(toIndentedString(userNameFormat)).append("\n");
    sb.append("    userProfileModel: ").append(toIndentedString(userProfileModel)).append("\n");
    sb.append("    userStartDate: ").append(toIndentedString(userStartDate)).append("\n");
    sb.append("    userTrainingModelList: ").append(toIndentedString(userTrainingModelList)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    view: ").append(toIndentedString(view)).append("\n");
    sb.append("    workerType: ").append(toIndentedString(workerType)).append("\n");
    sb.append("    workerTypeModel: ").append(toIndentedString(workerTypeModel)).append("\n");
    sb.append("    workingDays: ").append(toIndentedString(workingDays)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addressModelList");
    openapiFields.add("adpAssociateOID");
    openapiFields.add("allocation");
    openapiFields.add("appleUserIdentifier");
    openapiFields.add("assignments");
    openapiFields.add("awardModelList");
    openapiFields.add("bankAccountModel");
    openapiFields.add("calWeekPref");
    openapiFields.add("calendarId");
    openapiFields.add("calendarModel");
    openapiFields.add("candidateId");
    openapiFields.add("careerPathwayId");
    openapiFields.add("cellPhone");
    openapiFields.add("cid");
    openapiFields.add("countryId");
    openapiFields.add("createts");
    openapiFields.add("customFieldValueModelList");
    openapiFields.add("customTableModelList");
    openapiFields.add("departmentModel");
    openapiFields.add("departmentName");
    openapiFields.add("displayFullName");
    openapiFields.add("educationModelList");
    openapiFields.add("email");
    openapiFields.add("empId");
    openapiFields.add("employmentModelList");
    openapiFields.add("familySuffix");
    openapiFields.add("financialModelList");
    openapiFields.add("firstName");
    openapiFields.add("gender");
    openapiFields.add("guid");
    openapiFields.add("hasAccess");
    openapiFields.add("hrPortal");
    openapiFields.add("im");
    openapiFields.add("imageName");
    openapiFields.add("isView");
    openapiFields.add("jobGrade");
    openapiFields.add("languagePreference");
    openapiFields.add("lastName");
    openapiFields.add("lastUpdateUsername");
    openapiFields.add("lastupdatets");
    openapiFields.add("lastupdateuserid");
    openapiFields.add("licenseModelList");
    openapiFields.add("locationModel");
    openapiFields.add("mfaPreference");
    openapiFields.add("mfaSecretKey");
    openapiFields.add("middleName");
    openapiFields.add("namePronunciation");
    openapiFields.add("notifications");
    openapiFields.add("paId");
    openapiFields.add("phone");
    openapiFields.add("position");
    openapiFields.add("prefixSalutation");
    openapiFields.add("profileId");
    openapiFields.add("profileName");
    openapiFields.add("projectModel");
    openapiFields.add("projectModelList");
    openapiFields.add("ptoannual");
    openapiFields.add("ptobalance");
    openapiFields.add("qboPref");
    openapiFields.add("relativeDate");
    openapiFields.add("reportsToListMap");
    openapiFields.add("secondLastName");
    openapiFields.add("shortName");
    openapiFields.add("skillUserModelList");
    openapiFields.add("star");
    openapiFields.add("status");
    openapiFields.add("stripeId");
    openapiFields.add("supervisorModelList");
    openapiFields.add("thumbnail");
    openapiFields.add("timecardPeriodPref");
    openapiFields.add("timezone");
    openapiFields.add("tosVersion");
    openapiFields.add("userCountry");
    openapiFields.add("userDateFormat");
    openapiFields.add("userDateOfBirth");
    openapiFields.add("userDisplayName");
    openapiFields.add("userEndDate");
    openapiFields.add("userId");
    openapiFields.add("userNameFormat");
    openapiFields.add("userProfileModel");
    openapiFields.add("userStartDate");
    openapiFields.add("userTrainingModelList");
    openapiFields.add("userType");
    openapiFields.add("view");
    openapiFields.add("workerType");
    openapiFields.add("workerTypeModel");
    openapiFields.add("workingDays");
    openapiFields.add("userName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("userId");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UserModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UserModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserModel is not found in the empty JSON string", UserModel.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UserModel.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("addressModelList") != null && !jsonObj.get("addressModelList").isJsonNull()) {
        JsonArray jsonArrayaddressModelList = jsonObj.getAsJsonArray("addressModelList");
        if (jsonArrayaddressModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addressModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addressModelList` to be an array in the JSON string but got `%s`", jsonObj.get("addressModelList").toString()));
          }

          // validate the optional field `addressModelList` (array)
          for (int i = 0; i < jsonArrayaddressModelList.size(); i++) {
            AddressModel.validateJsonObject(jsonArrayaddressModelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("adpAssociateOID") != null && !jsonObj.get("adpAssociateOID").isJsonNull()) && !jsonObj.get("adpAssociateOID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adpAssociateOID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adpAssociateOID").toString()));
      }
      if ((jsonObj.get("appleUserIdentifier") != null && !jsonObj.get("appleUserIdentifier").isJsonNull()) && !jsonObj.get("appleUserIdentifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appleUserIdentifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appleUserIdentifier").toString()));
      }
      if ((jsonObj.get("assignments") != null && !jsonObj.get("assignments").isJsonNull()) && !jsonObj.get("assignments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assignments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assignments").toString()));
      }
      if (jsonObj.get("awardModelList") != null && !jsonObj.get("awardModelList").isJsonNull()) {
        JsonArray jsonArrayawardModelList = jsonObj.getAsJsonArray("awardModelList");
        if (jsonArrayawardModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("awardModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `awardModelList` to be an array in the JSON string but got `%s`", jsonObj.get("awardModelList").toString()));
          }

          // validate the optional field `awardModelList` (array)
          for (int i = 0; i < jsonArrayawardModelList.size(); i++) {
            AwardModel.validateJsonObject(jsonArrayawardModelList.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `bankAccountModel`
      if (jsonObj.get("bankAccountModel") != null && !jsonObj.get("bankAccountModel").isJsonNull()) {
        BankAccountModel.validateJsonObject(jsonObj.getAsJsonObject("bankAccountModel"));
      }
      if ((jsonObj.get("calWeekPref") != null && !jsonObj.get("calWeekPref").isJsonNull()) && !jsonObj.get("calWeekPref").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `calWeekPref` to be a primitive type in the JSON string but got `%s`", jsonObj.get("calWeekPref").toString()));
      }
      // validate the optional field `calendarModel`
      if (jsonObj.get("calendarModel") != null && !jsonObj.get("calendarModel").isJsonNull()) {
        HRCalendarModel.validateJsonObject(jsonObj.getAsJsonObject("calendarModel"));
      }
      if ((jsonObj.get("cellPhone") != null && !jsonObj.get("cellPhone").isJsonNull()) && !jsonObj.get("cellPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cellPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cellPhone").toString()));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      if (jsonObj.get("customFieldValueModelList") != null && !jsonObj.get("customFieldValueModelList").isJsonNull()) {
        JsonArray jsonArraycustomFieldValueModelList = jsonObj.getAsJsonArray("customFieldValueModelList");
        if (jsonArraycustomFieldValueModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customFieldValueModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customFieldValueModelList` to be an array in the JSON string but got `%s`", jsonObj.get("customFieldValueModelList").toString()));
          }

          // validate the optional field `customFieldValueModelList` (array)
          for (int i = 0; i < jsonArraycustomFieldValueModelList.size(); i++) {
            CustomFieldValueModel.validateJsonObject(jsonArraycustomFieldValueModelList.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customTableModelList") != null && !jsonObj.get("customTableModelList").isJsonNull()) {
        JsonArray jsonArraycustomTableModelList = jsonObj.getAsJsonArray("customTableModelList");
        if (jsonArraycustomTableModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customTableModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customTableModelList` to be an array in the JSON string but got `%s`", jsonObj.get("customTableModelList").toString()));
          }

          // validate the optional field `customTableModelList` (array)
          for (int i = 0; i < jsonArraycustomTableModelList.size(); i++) {
            CustomTableModel.validateJsonObject(jsonArraycustomTableModelList.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `departmentModel`
      if (jsonObj.get("departmentModel") != null && !jsonObj.get("departmentModel").isJsonNull()) {
        DepartmentModel.validateJsonObject(jsonObj.getAsJsonObject("departmentModel"));
      }
      if ((jsonObj.get("departmentName") != null && !jsonObj.get("departmentName").isJsonNull()) && !jsonObj.get("departmentName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `departmentName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("departmentName").toString()));
      }
      if ((jsonObj.get("displayFullName") != null && !jsonObj.get("displayFullName").isJsonNull()) && !jsonObj.get("displayFullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayFullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayFullName").toString()));
      }
      if (jsonObj.get("educationModelList") != null && !jsonObj.get("educationModelList").isJsonNull()) {
        JsonArray jsonArrayeducationModelList = jsonObj.getAsJsonArray("educationModelList");
        if (jsonArrayeducationModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("educationModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `educationModelList` to be an array in the JSON string but got `%s`", jsonObj.get("educationModelList").toString()));
          }

          // validate the optional field `educationModelList` (array)
          for (int i = 0; i < jsonArrayeducationModelList.size(); i++) {
            EducationModel.validateJsonObject(jsonArrayeducationModelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("empId") != null && !jsonObj.get("empId").isJsonNull()) && !jsonObj.get("empId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `empId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("empId").toString()));
      }
      if (jsonObj.get("employmentModelList") != null && !jsonObj.get("employmentModelList").isJsonNull()) {
        JsonArray jsonArrayemploymentModelList = jsonObj.getAsJsonArray("employmentModelList");
        if (jsonArrayemploymentModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("employmentModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `employmentModelList` to be an array in the JSON string but got `%s`", jsonObj.get("employmentModelList").toString()));
          }

          // validate the optional field `employmentModelList` (array)
          for (int i = 0; i < jsonArrayemploymentModelList.size(); i++) {
            EmploymentModel.validateJsonObject(jsonArrayemploymentModelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("familySuffix") != null && !jsonObj.get("familySuffix").isJsonNull()) && !jsonObj.get("familySuffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `familySuffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("familySuffix").toString()));
      }
      if (jsonObj.get("financialModelList") != null && !jsonObj.get("financialModelList").isJsonNull()) {
        JsonArray jsonArrayfinancialModelList = jsonObj.getAsJsonArray("financialModelList");
        if (jsonArrayfinancialModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("financialModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `financialModelList` to be an array in the JSON string but got `%s`", jsonObj.get("financialModelList").toString()));
          }

          // validate the optional field `financialModelList` (array)
          for (int i = 0; i < jsonArrayfinancialModelList.size(); i++) {
            FinancialModel.validateJsonObject(jsonArrayfinancialModelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("hrPortal") != null && !jsonObj.get("hrPortal").isJsonNull()) && !jsonObj.get("hrPortal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hrPortal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hrPortal").toString()));
      }
      if ((jsonObj.get("im") != null && !jsonObj.get("im").isJsonNull()) && !jsonObj.get("im").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `im` to be a primitive type in the JSON string but got `%s`", jsonObj.get("im").toString()));
      }
      if ((jsonObj.get("imageName") != null && !jsonObj.get("imageName").isJsonNull()) && !jsonObj.get("imageName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageName").toString()));
      }
      if ((jsonObj.get("jobGrade") != null && !jsonObj.get("jobGrade").isJsonNull()) && !jsonObj.get("jobGrade").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobGrade` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobGrade").toString()));
      }
      if ((jsonObj.get("languagePreference") != null && !jsonObj.get("languagePreference").isJsonNull()) && !jsonObj.get("languagePreference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languagePreference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languagePreference").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("lastUpdateUsername") != null && !jsonObj.get("lastUpdateUsername").isJsonNull()) && !jsonObj.get("lastUpdateUsername").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdateUsername` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdateUsername").toString()));
      }
      if (jsonObj.get("licenseModelList") != null && !jsonObj.get("licenseModelList").isJsonNull()) {
        JsonArray jsonArraylicenseModelList = jsonObj.getAsJsonArray("licenseModelList");
        if (jsonArraylicenseModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("licenseModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `licenseModelList` to be an array in the JSON string but got `%s`", jsonObj.get("licenseModelList").toString()));
          }

          // validate the optional field `licenseModelList` (array)
          for (int i = 0; i < jsonArraylicenseModelList.size(); i++) {
            CertificationModel.validateJsonObject(jsonArraylicenseModelList.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `locationModel`
      if (jsonObj.get("locationModel") != null && !jsonObj.get("locationModel").isJsonNull()) {
        LocationModel.validateJsonObject(jsonObj.getAsJsonObject("locationModel"));
      }
      if ((jsonObj.get("mfaSecretKey") != null && !jsonObj.get("mfaSecretKey").isJsonNull()) && !jsonObj.get("mfaSecretKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mfaSecretKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mfaSecretKey").toString()));
      }
      if ((jsonObj.get("middleName") != null && !jsonObj.get("middleName").isJsonNull()) && !jsonObj.get("middleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleName").toString()));
      }
      if ((jsonObj.get("namePronunciation") != null && !jsonObj.get("namePronunciation").isJsonNull()) && !jsonObj.get("namePronunciation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `namePronunciation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("namePronunciation").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("position") != null && !jsonObj.get("position").isJsonNull()) && !jsonObj.get("position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position").toString()));
      }
      if ((jsonObj.get("prefixSalutation") != null && !jsonObj.get("prefixSalutation").isJsonNull()) && !jsonObj.get("prefixSalutation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefixSalutation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefixSalutation").toString()));
      }
      if ((jsonObj.get("profileName") != null && !jsonObj.get("profileName").isJsonNull()) && !jsonObj.get("profileName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profileName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profileName").toString()));
      }
      // validate the optional field `projectModel`
      if (jsonObj.get("projectModel") != null && !jsonObj.get("projectModel").isJsonNull()) {
        ProjectModel.validateJsonObject(jsonObj.getAsJsonObject("projectModel"));
      }
      if (jsonObj.get("projectModelList") != null && !jsonObj.get("projectModelList").isJsonNull()) {
        JsonArray jsonArrayprojectModelList = jsonObj.getAsJsonArray("projectModelList");
        if (jsonArrayprojectModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("projectModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `projectModelList` to be an array in the JSON string but got `%s`", jsonObj.get("projectModelList").toString()));
          }

          // validate the optional field `projectModelList` (array)
          for (int i = 0; i < jsonArrayprojectModelList.size(); i++) {
            ProjectModel.validateJsonObject(jsonArrayprojectModelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("relativeDate") != null && !jsonObj.get("relativeDate").isJsonNull()) && !jsonObj.get("relativeDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relativeDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relativeDate").toString()));
      }
      if ((jsonObj.get("secondLastName") != null && !jsonObj.get("secondLastName").isJsonNull()) && !jsonObj.get("secondLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondLastName").toString()));
      }
      if ((jsonObj.get("shortName") != null && !jsonObj.get("shortName").isJsonNull()) && !jsonObj.get("shortName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shortName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shortName").toString()));
      }
      if (jsonObj.get("skillUserModelList") != null && !jsonObj.get("skillUserModelList").isJsonNull()) {
        JsonArray jsonArrayskillUserModelList = jsonObj.getAsJsonArray("skillUserModelList");
        if (jsonArrayskillUserModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("skillUserModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `skillUserModelList` to be an array in the JSON string but got `%s`", jsonObj.get("skillUserModelList").toString()));
          }

          // validate the optional field `skillUserModelList` (array)
          for (int i = 0; i < jsonArrayskillUserModelList.size(); i++) {
            SkillUserModel.validateJsonObject(jsonArrayskillUserModelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("stripeId") != null && !jsonObj.get("stripeId").isJsonNull()) && !jsonObj.get("stripeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stripeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stripeId").toString()));
      }
      if (jsonObj.get("supervisorModelList") != null && !jsonObj.get("supervisorModelList").isJsonNull()) {
        JsonArray jsonArraysupervisorModelList = jsonObj.getAsJsonArray("supervisorModelList");
        if (jsonArraysupervisorModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("supervisorModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `supervisorModelList` to be an array in the JSON string but got `%s`", jsonObj.get("supervisorModelList").toString()));
          }

          // validate the optional field `supervisorModelList` (array)
          for (int i = 0; i < jsonArraysupervisorModelList.size(); i++) {
            UserThinModel.validateJsonObject(jsonArraysupervisorModelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("thumbnail") != null && !jsonObj.get("thumbnail").isJsonNull()) && !jsonObj.get("thumbnail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumbnail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumbnail").toString()));
      }
      if ((jsonObj.get("timecardPeriodPref") != null && !jsonObj.get("timecardPeriodPref").isJsonNull()) && !jsonObj.get("timecardPeriodPref").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timecardPeriodPref` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timecardPeriodPref").toString()));
      }
      if ((jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) && !jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
      if ((jsonObj.get("tosVersion") != null && !jsonObj.get("tosVersion").isJsonNull()) && !jsonObj.get("tosVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tosVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tosVersion").toString()));
      }
      if ((jsonObj.get("userCountry") != null && !jsonObj.get("userCountry").isJsonNull()) && !jsonObj.get("userCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userCountry").toString()));
      }
      if ((jsonObj.get("userDateFormat") != null && !jsonObj.get("userDateFormat").isJsonNull()) && !jsonObj.get("userDateFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDateFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDateFormat").toString()));
      }
      if ((jsonObj.get("userDisplayName") != null && !jsonObj.get("userDisplayName").isJsonNull()) && !jsonObj.get("userDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDisplayName").toString()));
      }
      if ((jsonObj.get("userNameFormat") != null && !jsonObj.get("userNameFormat").isJsonNull()) && !jsonObj.get("userNameFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userNameFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userNameFormat").toString()));
      }
      // validate the optional field `userProfileModel`
      if (jsonObj.get("userProfileModel") != null && !jsonObj.get("userProfileModel").isJsonNull()) {
        UserProfileModel.validateJsonObject(jsonObj.getAsJsonObject("userProfileModel"));
      }
      if (jsonObj.get("userTrainingModelList") != null && !jsonObj.get("userTrainingModelList").isJsonNull()) {
        JsonArray jsonArrayuserTrainingModelList = jsonObj.getAsJsonArray("userTrainingModelList");
        if (jsonArrayuserTrainingModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("userTrainingModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `userTrainingModelList` to be an array in the JSON string but got `%s`", jsonObj.get("userTrainingModelList").toString()));
          }

          // validate the optional field `userTrainingModelList` (array)
          for (int i = 0; i < jsonArrayuserTrainingModelList.size(); i++) {
            UserTrainingModel.validateJsonObject(jsonArrayuserTrainingModelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("userType") != null && !jsonObj.get("userType").isJsonNull()) && !jsonObj.get("userType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userType").toString()));
      }
      if ((jsonObj.get("workerType") != null && !jsonObj.get("workerType").isJsonNull()) && !jsonObj.get("workerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workerType").toString()));
      }
      // validate the optional field `workerTypeModel`
      if (jsonObj.get("workerTypeModel") != null && !jsonObj.get("workerTypeModel").isJsonNull()) {
        WorkerTypeModel.validateJsonObject(jsonObj.getAsJsonObject("workerTypeModel"));
      }
      if ((jsonObj.get("workingDays") != null && !jsonObj.get("workingDays").isJsonNull()) && !jsonObj.get("workingDays").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workingDays` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workingDays").toString()));
      }
      if ((jsonObj.get("userName") != null && !jsonObj.get("userName").isJsonNull()) && !jsonObj.get("userName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserModel.class));

       return (TypeAdapter<T>) new TypeAdapter<UserModel>() {
           @Override
           public void write(JsonWriter out, UserModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UserModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UserModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserModel
  * @throws IOException if the JSON string is invalid with respect to UserModel
  */
  public static UserModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserModel.class);
  }

 /**
  * Convert an instance of UserModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

