/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TimesheetsGetApprovalListResponseDataInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TimesheetsGetApprovalListResponseDataInner {
  public static final String SERIALIZED_NAME_TIMESHEET_ID = "timesheetId";
  @SerializedName(SERIALIZED_NAME_TIMESHEET_ID)
  private String timesheetId;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_USER_NAME = "userName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EMP_ID = "empId";
  @SerializedName(SERIALIZED_NAME_EMP_ID)
  private String empId;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_ORG_UNIT = "orgUnit";
  @SerializedName(SERIALIZED_NAME_ORG_UNIT)
  private String orgUnit;

  public static final String SERIALIZED_NAME_DEPARTMENT_ID = "departmentId";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_ID)
  private String departmentId;

  public static final String SERIALIZED_NAME_LOCATION_ID = "locationId";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private String locationId;

  public static final String SERIALIZED_NAME_LOCATION_NAME = "locationName";
  @SerializedName(SERIALIZED_NAME_LOCATION_NAME)
  private String locationName;

  public static final String SERIALIZED_NAME_USER_STATUS = "userStatus";
  @SerializedName(SERIALIZED_NAME_USER_STATUS)
  private String userStatus;

  public static final String SERIALIZED_NAME_APPROVAL_FLOW_ID = "approvalFlowId";
  @SerializedName(SERIALIZED_NAME_APPROVAL_FLOW_ID)
  private String approvalFlowId;

  public static final String SERIALIZED_NAME_CARDS_COUNT = "cardsCount";
  @SerializedName(SERIALIZED_NAME_CARDS_COUNT)
  private String cardsCount;

  public static final String SERIALIZED_NAME_TOTAL_TIME = "totalTime";
  @SerializedName(SERIALIZED_NAME_TOTAL_TIME)
  private String totalTime;

  public static final String SERIALIZED_NAME_LEAVE_HOURS = "leaveHours";
  @SerializedName(SERIALIZED_NAME_LEAVE_HOURS)
  private String leaveHours;

  public static final String SERIALIZED_NAME_HOLIDAY_HOURS = "holidayHours";
  @SerializedName(SERIALIZED_NAME_HOLIDAY_HOURS)
  private String holidayHours;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private String cid;

  public TimesheetsGetApprovalListResponseDataInner() {
  }

  public TimesheetsGetApprovalListResponseDataInner timesheetId(String timesheetId) {
    
    
    
    
    this.timesheetId = timesheetId;
    return this;
  }

   /**
   * Get timesheetId
   * @return timesheetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getTimesheetId() {
    return timesheetId;
  }


  public void setTimesheetId(String timesheetId) {
    
    
    
    this.timesheetId = timesheetId;
  }


  public TimesheetsGetApprovalListResponseDataInner startDate(String startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "date", value = "")

  public String getStartDate() {
    return startDate;
  }


  public void setStartDate(String startDate) {
    
    
    
    this.startDate = startDate;
  }


  public TimesheetsGetApprovalListResponseDataInner endDate(String endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "date", value = "")

  public String getEndDate() {
    return endDate;
  }


  public void setEndDate(String endDate) {
    
    
    
    this.endDate = endDate;
  }


  public TimesheetsGetApprovalListResponseDataInner status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public TimesheetsGetApprovalListResponseDataInner userName(String userName) {
    
    
    
    
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    
    
    
    this.userName = userName;
  }


  public TimesheetsGetApprovalListResponseDataInner userId(String userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    
    
    
    this.userId = userId;
  }


  public TimesheetsGetApprovalListResponseDataInner email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public TimesheetsGetApprovalListResponseDataInner empId(String empId) {
    
    
    
    
    this.empId = empId;
    return this;
  }

   /**
   * Get empId
   * @return empId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "long", value = "")

  public String getEmpId() {
    return empId;
  }


  public void setEmpId(String empId) {
    
    
    
    this.empId = empId;
  }


  public TimesheetsGetApprovalListResponseDataInner gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public TimesheetsGetApprovalListResponseDataInner orgUnit(String orgUnit) {
    
    
    
    
    this.orgUnit = orgUnit;
    return this;
  }

   /**
   * Get orgUnit
   * @return orgUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getOrgUnit() {
    return orgUnit;
  }


  public void setOrgUnit(String orgUnit) {
    
    
    
    this.orgUnit = orgUnit;
  }


  public TimesheetsGetApprovalListResponseDataInner departmentId(String departmentId) {
    
    
    
    
    this.departmentId = departmentId;
    return this;
  }

   /**
   * Get departmentId
   * @return departmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getDepartmentId() {
    return departmentId;
  }


  public void setDepartmentId(String departmentId) {
    
    
    
    this.departmentId = departmentId;
  }


  public TimesheetsGetApprovalListResponseDataInner locationId(String locationId) {
    
    
    
    
    this.locationId = locationId;
    return this;
  }

   /**
   * Get locationId
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getLocationId() {
    return locationId;
  }


  public void setLocationId(String locationId) {
    
    
    
    this.locationId = locationId;
  }


  public TimesheetsGetApprovalListResponseDataInner locationName(String locationName) {
    
    
    
    
    this.locationName = locationName;
    return this;
  }

   /**
   * Get locationName
   * @return locationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getLocationName() {
    return locationName;
  }


  public void setLocationName(String locationName) {
    
    
    
    this.locationName = locationName;
  }


  public TimesheetsGetApprovalListResponseDataInner userStatus(String userStatus) {
    
    
    
    
    this.userStatus = userStatus;
    return this;
  }

   /**
   * Get userStatus
   * @return userStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getUserStatus() {
    return userStatus;
  }


  public void setUserStatus(String userStatus) {
    
    
    
    this.userStatus = userStatus;
  }


  public TimesheetsGetApprovalListResponseDataInner approvalFlowId(String approvalFlowId) {
    
    
    
    
    this.approvalFlowId = approvalFlowId;
    return this;
  }

   /**
   * Get approvalFlowId
   * @return approvalFlowId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getApprovalFlowId() {
    return approvalFlowId;
  }


  public void setApprovalFlowId(String approvalFlowId) {
    
    
    
    this.approvalFlowId = approvalFlowId;
  }


  public TimesheetsGetApprovalListResponseDataInner cardsCount(String cardsCount) {
    
    
    
    
    this.cardsCount = cardsCount;
    return this;
  }

   /**
   * Get cardsCount
   * @return cardsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getCardsCount() {
    return cardsCount;
  }


  public void setCardsCount(String cardsCount) {
    
    
    
    this.cardsCount = cardsCount;
  }


  public TimesheetsGetApprovalListResponseDataInner totalTime(String totalTime) {
    
    
    
    
    this.totalTime = totalTime;
    return this;
  }

   /**
   * Get totalTime
   * @return totalTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "long", value = "")

  public String getTotalTime() {
    return totalTime;
  }


  public void setTotalTime(String totalTime) {
    
    
    
    this.totalTime = totalTime;
  }


  public TimesheetsGetApprovalListResponseDataInner leaveHours(String leaveHours) {
    
    
    
    
    this.leaveHours = leaveHours;
    return this;
  }

   /**
   * Get leaveHours
   * @return leaveHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "long", value = "")

  public String getLeaveHours() {
    return leaveHours;
  }


  public void setLeaveHours(String leaveHours) {
    
    
    
    this.leaveHours = leaveHours;
  }


  public TimesheetsGetApprovalListResponseDataInner holidayHours(String holidayHours) {
    
    
    
    
    this.holidayHours = holidayHours;
    return this;
  }

   /**
   * Get holidayHours
   * @return holidayHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "long", value = "")

  public String getHolidayHours() {
    return holidayHours;
  }


  public void setHolidayHours(String holidayHours) {
    
    
    
    this.holidayHours = holidayHours;
  }


  public TimesheetsGetApprovalListResponseDataInner cid(String cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getCid() {
    return cid;
  }


  public void setCid(String cid) {
    
    
    
    this.cid = cid;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TimesheetsGetApprovalListResponseDataInner instance itself
   */
  public TimesheetsGetApprovalListResponseDataInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimesheetsGetApprovalListResponseDataInner timesheetsGetApprovalListResponseDataInner = (TimesheetsGetApprovalListResponseDataInner) o;
    return Objects.equals(this.timesheetId, timesheetsGetApprovalListResponseDataInner.timesheetId) &&
        Objects.equals(this.startDate, timesheetsGetApprovalListResponseDataInner.startDate) &&
        Objects.equals(this.endDate, timesheetsGetApprovalListResponseDataInner.endDate) &&
        Objects.equals(this.status, timesheetsGetApprovalListResponseDataInner.status) &&
        Objects.equals(this.userName, timesheetsGetApprovalListResponseDataInner.userName) &&
        Objects.equals(this.userId, timesheetsGetApprovalListResponseDataInner.userId) &&
        Objects.equals(this.email, timesheetsGetApprovalListResponseDataInner.email) &&
        Objects.equals(this.empId, timesheetsGetApprovalListResponseDataInner.empId) &&
        Objects.equals(this.gender, timesheetsGetApprovalListResponseDataInner.gender) &&
        Objects.equals(this.orgUnit, timesheetsGetApprovalListResponseDataInner.orgUnit) &&
        Objects.equals(this.departmentId, timesheetsGetApprovalListResponseDataInner.departmentId) &&
        Objects.equals(this.locationId, timesheetsGetApprovalListResponseDataInner.locationId) &&
        Objects.equals(this.locationName, timesheetsGetApprovalListResponseDataInner.locationName) &&
        Objects.equals(this.userStatus, timesheetsGetApprovalListResponseDataInner.userStatus) &&
        Objects.equals(this.approvalFlowId, timesheetsGetApprovalListResponseDataInner.approvalFlowId) &&
        Objects.equals(this.cardsCount, timesheetsGetApprovalListResponseDataInner.cardsCount) &&
        Objects.equals(this.totalTime, timesheetsGetApprovalListResponseDataInner.totalTime) &&
        Objects.equals(this.leaveHours, timesheetsGetApprovalListResponseDataInner.leaveHours) &&
        Objects.equals(this.holidayHours, timesheetsGetApprovalListResponseDataInner.holidayHours) &&
        Objects.equals(this.cid, timesheetsGetApprovalListResponseDataInner.cid)&&
        Objects.equals(this.additionalProperties, timesheetsGetApprovalListResponseDataInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timesheetId, startDate, endDate, status, userName, userId, email, empId, gender, orgUnit, departmentId, locationId, locationName, userStatus, approvalFlowId, cardsCount, totalTime, leaveHours, holidayHours, cid, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimesheetsGetApprovalListResponseDataInner {\n");
    sb.append("    timesheetId: ").append(toIndentedString(timesheetId)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    empId: ").append(toIndentedString(empId)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    orgUnit: ").append(toIndentedString(orgUnit)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    locationName: ").append(toIndentedString(locationName)).append("\n");
    sb.append("    userStatus: ").append(toIndentedString(userStatus)).append("\n");
    sb.append("    approvalFlowId: ").append(toIndentedString(approvalFlowId)).append("\n");
    sb.append("    cardsCount: ").append(toIndentedString(cardsCount)).append("\n");
    sb.append("    totalTime: ").append(toIndentedString(totalTime)).append("\n");
    sb.append("    leaveHours: ").append(toIndentedString(leaveHours)).append("\n");
    sb.append("    holidayHours: ").append(toIndentedString(holidayHours)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("timesheetId");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("status");
    openapiFields.add("userName");
    openapiFields.add("userId");
    openapiFields.add("email");
    openapiFields.add("empId");
    openapiFields.add("gender");
    openapiFields.add("orgUnit");
    openapiFields.add("departmentId");
    openapiFields.add("locationId");
    openapiFields.add("locationName");
    openapiFields.add("userStatus");
    openapiFields.add("approvalFlowId");
    openapiFields.add("cardsCount");
    openapiFields.add("totalTime");
    openapiFields.add("leaveHours");
    openapiFields.add("holidayHours");
    openapiFields.add("cid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TimesheetsGetApprovalListResponseDataInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TimesheetsGetApprovalListResponseDataInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TimesheetsGetApprovalListResponseDataInner is not found in the empty JSON string", TimesheetsGetApprovalListResponseDataInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("timesheetId") != null && !jsonObj.get("timesheetId").isJsonNull()) && !jsonObj.get("timesheetId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timesheetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timesheetId").toString()));
      }
      if ((jsonObj.get("startDate") != null && !jsonObj.get("startDate").isJsonNull()) && !jsonObj.get("startDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startDate").toString()));
      }
      if ((jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) && !jsonObj.get("endDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDate").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("userName") != null && !jsonObj.get("userName").isJsonNull()) && !jsonObj.get("userName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userName").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("empId") != null && !jsonObj.get("empId").isJsonNull()) && !jsonObj.get("empId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `empId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("empId").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("orgUnit") != null && !jsonObj.get("orgUnit").isJsonNull()) && !jsonObj.get("orgUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgUnit").toString()));
      }
      if ((jsonObj.get("departmentId") != null && !jsonObj.get("departmentId").isJsonNull()) && !jsonObj.get("departmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `departmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("departmentId").toString()));
      }
      if ((jsonObj.get("locationId") != null && !jsonObj.get("locationId").isJsonNull()) && !jsonObj.get("locationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationId").toString()));
      }
      if ((jsonObj.get("locationName") != null && !jsonObj.get("locationName").isJsonNull()) && !jsonObj.get("locationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationName").toString()));
      }
      if ((jsonObj.get("userStatus") != null && !jsonObj.get("userStatus").isJsonNull()) && !jsonObj.get("userStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userStatus").toString()));
      }
      if ((jsonObj.get("approvalFlowId") != null && !jsonObj.get("approvalFlowId").isJsonNull()) && !jsonObj.get("approvalFlowId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `approvalFlowId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("approvalFlowId").toString()));
      }
      if ((jsonObj.get("cardsCount") != null && !jsonObj.get("cardsCount").isJsonNull()) && !jsonObj.get("cardsCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardsCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardsCount").toString()));
      }
      if ((jsonObj.get("totalTime") != null && !jsonObj.get("totalTime").isJsonNull()) && !jsonObj.get("totalTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalTime").toString()));
      }
      if ((jsonObj.get("leaveHours") != null && !jsonObj.get("leaveHours").isJsonNull()) && !jsonObj.get("leaveHours").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `leaveHours` to be a primitive type in the JSON string but got `%s`", jsonObj.get("leaveHours").toString()));
      }
      if ((jsonObj.get("holidayHours") != null && !jsonObj.get("holidayHours").isJsonNull()) && !jsonObj.get("holidayHours").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `holidayHours` to be a primitive type in the JSON string but got `%s`", jsonObj.get("holidayHours").toString()));
      }
      if ((jsonObj.get("cid") != null && !jsonObj.get("cid").isJsonNull()) && !jsonObj.get("cid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TimesheetsGetApprovalListResponseDataInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TimesheetsGetApprovalListResponseDataInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TimesheetsGetApprovalListResponseDataInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TimesheetsGetApprovalListResponseDataInner.class));

       return (TypeAdapter<T>) new TypeAdapter<TimesheetsGetApprovalListResponseDataInner>() {
           @Override
           public void write(JsonWriter out, TimesheetsGetApprovalListResponseDataInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TimesheetsGetApprovalListResponseDataInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TimesheetsGetApprovalListResponseDataInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TimesheetsGetApprovalListResponseDataInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TimesheetsGetApprovalListResponseDataInner
  * @throws IOException if the JSON string is invalid with respect to TimesheetsGetApprovalListResponseDataInner
  */
  public static TimesheetsGetApprovalListResponseDataInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TimesheetsGetApprovalListResponseDataInner.class);
  }

 /**
  * Convert an instance of TimesheetsGetApprovalListResponseDataInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

