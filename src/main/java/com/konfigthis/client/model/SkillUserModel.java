/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.SkillModel;
import com.konfigthis.client.model.UserModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SkillUserModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SkillUserModel {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CANDIDATEID = "candidateid";
  @SerializedName(SERIALIZED_NAME_CANDIDATEID)
  private Integer candidateid;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CREATE_USER_ID = "createUserId";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_ID)
  private Integer createUserId;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_DATE_OF_LAST_USE = "dateOfLastUse";
  @SerializedName(SERIALIZED_NAME_DATE_OF_LAST_USE)
  private LocalDate dateOfLastUse;

  public static final String SERIALIZED_NAME_LAST_UPDATE_USER_MODEL = "lastUpdateUserModel";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_USER_MODEL)
  private UserModel lastUpdateUserModel;

  public static final String SERIALIZED_NAME_LEVEL = "level";
  @SerializedName(SERIALIZED_NAME_LEVEL)
  private Float level;

  public static final String SERIALIZED_NAME_PERFORMANCELEVEL = "performancelevel";
  @SerializedName(SERIALIZED_NAME_PERFORMANCELEVEL)
  private Float performancelevel;

  public static final String SERIALIZED_NAME_SKILL_ACQUIRE_DATE = "skillAcquireDate";
  @SerializedName(SERIALIZED_NAME_SKILL_ACQUIRE_DATE)
  private LocalDate skillAcquireDate;

  public static final String SERIALIZED_NAME_SKILL_COUNSELLOR = "skillCounsellor";
  @SerializedName(SERIALIZED_NAME_SKILL_COUNSELLOR)
  private Boolean skillCounsellor;

  public static final String SERIALIZED_NAME_SKILL_ID = "skillId";
  @SerializedName(SERIALIZED_NAME_SKILL_ID)
  private Integer skillId;

  public static final String SERIALIZED_NAME_SKILL_MODEL = "skillModel";
  @SerializedName(SERIALIZED_NAME_SKILL_MODEL)
  private SkillModel skillModel;

  public static final String SERIALIZED_NAME_SKILL_USER_ID = "skillUserId";
  @SerializedName(SERIALIZED_NAME_SKILL_USER_ID)
  private Integer skillUserId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TARGET_LEVEL = "targetLevel";
  @SerializedName(SERIALIZED_NAME_TARGET_LEVEL)
  private Float targetLevel;

  public static final String SERIALIZED_NAME_TARGET_LEVEL_CREATE_USER_ID = "targetLevelCreateUserId";
  @SerializedName(SERIALIZED_NAME_TARGET_LEVEL_CREATE_USER_ID)
  private Integer targetLevelCreateUserId;

  public static final String SERIALIZED_NAME_TARGET_LEVEL_CREATETS = "targetLevelCreatets";
  @SerializedName(SERIALIZED_NAME_TARGET_LEVEL_CREATETS)
  private Timestamp targetLevelCreatets;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_WEIGHTAGE = "weightage";
  @SerializedName(SERIALIZED_NAME_WEIGHTAGE)
  private Float weightage;

  public static final String SERIALIZED_NAME_YEARS_OF_EXPERIENCE = "yearsOfExperience";
  @SerializedName(SERIALIZED_NAME_YEARS_OF_EXPERIENCE)
  private Integer yearsOfExperience;

  public SkillUserModel() {
  }

  public SkillUserModel description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public SkillUserModel candidateid(Integer candidateid) {
    
    
    
    
    this.candidateid = candidateid;
    return this;
  }

   /**
   * Get candidateid
   * @return candidateid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCandidateid() {
    return candidateid;
  }


  public void setCandidateid(Integer candidateid) {
    
    
    
    this.candidateid = candidateid;
  }


  public SkillUserModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public SkillUserModel createUserId(Integer createUserId) {
    
    
    
    
    this.createUserId = createUserId;
    return this;
  }

   /**
   * Get createUserId
   * @return createUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateUserId() {
    return createUserId;
  }


  public void setCreateUserId(Integer createUserId) {
    
    
    
    this.createUserId = createUserId;
  }


  public SkillUserModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public SkillUserModel dateOfLastUse(LocalDate dateOfLastUse) {
    
    
    
    
    this.dateOfLastUse = dateOfLastUse;
    return this;
  }

   /**
   * Get dateOfLastUse
   * @return dateOfLastUse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getDateOfLastUse() {
    return dateOfLastUse;
  }


  public void setDateOfLastUse(LocalDate dateOfLastUse) {
    
    
    
    this.dateOfLastUse = dateOfLastUse;
  }


  public SkillUserModel lastUpdateUserModel(UserModel lastUpdateUserModel) {
    
    
    
    
    this.lastUpdateUserModel = lastUpdateUserModel;
    return this;
  }

   /**
   * Get lastUpdateUserModel
   * @return lastUpdateUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getLastUpdateUserModel() {
    return lastUpdateUserModel;
  }


  public void setLastUpdateUserModel(UserModel lastUpdateUserModel) {
    
    
    
    this.lastUpdateUserModel = lastUpdateUserModel;
  }


  public SkillUserModel level(Float level) {
    
    
    
    
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getLevel() {
    return level;
  }


  public void setLevel(Float level) {
    
    
    
    this.level = level;
  }


  public SkillUserModel performancelevel(Float performancelevel) {
    
    
    
    
    this.performancelevel = performancelevel;
    return this;
  }

   /**
   * Get performancelevel
   * @return performancelevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getPerformancelevel() {
    return performancelevel;
  }


  public void setPerformancelevel(Float performancelevel) {
    
    
    
    this.performancelevel = performancelevel;
  }


  public SkillUserModel skillAcquireDate(LocalDate skillAcquireDate) {
    
    
    
    
    this.skillAcquireDate = skillAcquireDate;
    return this;
  }

   /**
   * Get skillAcquireDate
   * @return skillAcquireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getSkillAcquireDate() {
    return skillAcquireDate;
  }


  public void setSkillAcquireDate(LocalDate skillAcquireDate) {
    
    
    
    this.skillAcquireDate = skillAcquireDate;
  }


  public SkillUserModel skillCounsellor(Boolean skillCounsellor) {
    
    
    
    
    this.skillCounsellor = skillCounsellor;
    return this;
  }

   /**
   * Get skillCounsellor
   * @return skillCounsellor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSkillCounsellor() {
    return skillCounsellor;
  }


  public void setSkillCounsellor(Boolean skillCounsellor) {
    
    
    
    this.skillCounsellor = skillCounsellor;
  }


  public SkillUserModel skillId(Integer skillId) {
    
    
    
    
    this.skillId = skillId;
    return this;
  }

   /**
   * Get skillId
   * @return skillId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSkillId() {
    return skillId;
  }


  public void setSkillId(Integer skillId) {
    
    
    
    this.skillId = skillId;
  }


  public SkillUserModel skillModel(SkillModel skillModel) {
    
    
    
    
    this.skillModel = skillModel;
    return this;
  }

   /**
   * Get skillModel
   * @return skillModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SkillModel getSkillModel() {
    return skillModel;
  }


  public void setSkillModel(SkillModel skillModel) {
    
    
    
    this.skillModel = skillModel;
  }


  public SkillUserModel skillUserId(Integer skillUserId) {
    
    
    
    
    this.skillUserId = skillUserId;
    return this;
  }

   /**
   * Get skillUserId
   * @return skillUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSkillUserId() {
    return skillUserId;
  }


  public void setSkillUserId(Integer skillUserId) {
    
    
    
    this.skillUserId = skillUserId;
  }


  public SkillUserModel status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public SkillUserModel targetLevel(Float targetLevel) {
    
    
    
    
    this.targetLevel = targetLevel;
    return this;
  }

   /**
   * Get targetLevel
   * @return targetLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getTargetLevel() {
    return targetLevel;
  }


  public void setTargetLevel(Float targetLevel) {
    
    
    
    this.targetLevel = targetLevel;
  }


  public SkillUserModel targetLevelCreateUserId(Integer targetLevelCreateUserId) {
    
    
    
    
    this.targetLevelCreateUserId = targetLevelCreateUserId;
    return this;
  }

   /**
   * Get targetLevelCreateUserId
   * @return targetLevelCreateUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTargetLevelCreateUserId() {
    return targetLevelCreateUserId;
  }


  public void setTargetLevelCreateUserId(Integer targetLevelCreateUserId) {
    
    
    
    this.targetLevelCreateUserId = targetLevelCreateUserId;
  }


  public SkillUserModel targetLevelCreatets(Timestamp targetLevelCreatets) {
    
    
    
    
    this.targetLevelCreatets = targetLevelCreatets;
    return this;
  }

   /**
   * Get targetLevelCreatets
   * @return targetLevelCreatets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getTargetLevelCreatets() {
    return targetLevelCreatets;
  }


  public void setTargetLevelCreatets(Timestamp targetLevelCreatets) {
    
    
    
    this.targetLevelCreatets = targetLevelCreatets;
  }


  public SkillUserModel userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public SkillUserModel weightage(Float weightage) {
    
    
    
    
    this.weightage = weightage;
    return this;
  }

   /**
   * Get weightage
   * @return weightage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getWeightage() {
    return weightage;
  }


  public void setWeightage(Float weightage) {
    
    
    
    this.weightage = weightage;
  }


  public SkillUserModel yearsOfExperience(Integer yearsOfExperience) {
    
    
    
    
    this.yearsOfExperience = yearsOfExperience;
    return this;
  }

   /**
   * Get yearsOfExperience
   * @return yearsOfExperience
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getYearsOfExperience() {
    return yearsOfExperience;
  }


  public void setYearsOfExperience(Integer yearsOfExperience) {
    
    
    
    this.yearsOfExperience = yearsOfExperience;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SkillUserModel instance itself
   */
  public SkillUserModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SkillUserModel skillUserModel = (SkillUserModel) o;
    return Objects.equals(this.description, skillUserModel.description) &&
        Objects.equals(this.candidateid, skillUserModel.candidateid) &&
        Objects.equals(this.cid, skillUserModel.cid) &&
        Objects.equals(this.createUserId, skillUserModel.createUserId) &&
        Objects.equals(this.createts, skillUserModel.createts) &&
        Objects.equals(this.dateOfLastUse, skillUserModel.dateOfLastUse) &&
        Objects.equals(this.lastUpdateUserModel, skillUserModel.lastUpdateUserModel) &&
        Objects.equals(this.level, skillUserModel.level) &&
        Objects.equals(this.performancelevel, skillUserModel.performancelevel) &&
        Objects.equals(this.skillAcquireDate, skillUserModel.skillAcquireDate) &&
        Objects.equals(this.skillCounsellor, skillUserModel.skillCounsellor) &&
        Objects.equals(this.skillId, skillUserModel.skillId) &&
        Objects.equals(this.skillModel, skillUserModel.skillModel) &&
        Objects.equals(this.skillUserId, skillUserModel.skillUserId) &&
        Objects.equals(this.status, skillUserModel.status) &&
        Objects.equals(this.targetLevel, skillUserModel.targetLevel) &&
        Objects.equals(this.targetLevelCreateUserId, skillUserModel.targetLevelCreateUserId) &&
        Objects.equals(this.targetLevelCreatets, skillUserModel.targetLevelCreatets) &&
        Objects.equals(this.userId, skillUserModel.userId) &&
        Objects.equals(this.weightage, skillUserModel.weightage) &&
        Objects.equals(this.yearsOfExperience, skillUserModel.yearsOfExperience)&&
        Objects.equals(this.additionalProperties, skillUserModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, candidateid, cid, createUserId, createts, dateOfLastUse, lastUpdateUserModel, level, performancelevel, skillAcquireDate, skillCounsellor, skillId, skillModel, skillUserId, status, targetLevel, targetLevelCreateUserId, targetLevelCreatets, userId, weightage, yearsOfExperience, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SkillUserModel {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    candidateid: ").append(toIndentedString(candidateid)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    createUserId: ").append(toIndentedString(createUserId)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    dateOfLastUse: ").append(toIndentedString(dateOfLastUse)).append("\n");
    sb.append("    lastUpdateUserModel: ").append(toIndentedString(lastUpdateUserModel)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    performancelevel: ").append(toIndentedString(performancelevel)).append("\n");
    sb.append("    skillAcquireDate: ").append(toIndentedString(skillAcquireDate)).append("\n");
    sb.append("    skillCounsellor: ").append(toIndentedString(skillCounsellor)).append("\n");
    sb.append("    skillId: ").append(toIndentedString(skillId)).append("\n");
    sb.append("    skillModel: ").append(toIndentedString(skillModel)).append("\n");
    sb.append("    skillUserId: ").append(toIndentedString(skillUserId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    targetLevel: ").append(toIndentedString(targetLevel)).append("\n");
    sb.append("    targetLevelCreateUserId: ").append(toIndentedString(targetLevelCreateUserId)).append("\n");
    sb.append("    targetLevelCreatets: ").append(toIndentedString(targetLevelCreatets)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    weightage: ").append(toIndentedString(weightage)).append("\n");
    sb.append("    yearsOfExperience: ").append(toIndentedString(yearsOfExperience)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("candidateid");
    openapiFields.add("cid");
    openapiFields.add("createUserId");
    openapiFields.add("createts");
    openapiFields.add("dateOfLastUse");
    openapiFields.add("lastUpdateUserModel");
    openapiFields.add("level");
    openapiFields.add("performancelevel");
    openapiFields.add("skillAcquireDate");
    openapiFields.add("skillCounsellor");
    openapiFields.add("skillId");
    openapiFields.add("skillModel");
    openapiFields.add("skillUserId");
    openapiFields.add("status");
    openapiFields.add("targetLevel");
    openapiFields.add("targetLevelCreateUserId");
    openapiFields.add("targetLevelCreatets");
    openapiFields.add("userId");
    openapiFields.add("weightage");
    openapiFields.add("yearsOfExperience");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SkillUserModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SkillUserModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SkillUserModel is not found in the empty JSON string", SkillUserModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      // validate the optional field `lastUpdateUserModel`
      if (jsonObj.get("lastUpdateUserModel") != null && !jsonObj.get("lastUpdateUserModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("lastUpdateUserModel"));
      }
      // validate the optional field `skillModel`
      if (jsonObj.get("skillModel") != null && !jsonObj.get("skillModel").isJsonNull()) {
        SkillModel.validateJsonObject(jsonObj.getAsJsonObject("skillModel"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `targetLevelCreatets`
      if (jsonObj.get("targetLevelCreatets") != null && !jsonObj.get("targetLevelCreatets").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("targetLevelCreatets"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SkillUserModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SkillUserModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SkillUserModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SkillUserModel.class));

       return (TypeAdapter<T>) new TypeAdapter<SkillUserModel>() {
           @Override
           public void write(JsonWriter out, SkillUserModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SkillUserModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SkillUserModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SkillUserModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SkillUserModel
  * @throws IOException if the JSON string is invalid with respect to SkillUserModel
  */
  public static SkillUserModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SkillUserModel.class);
  }

 /**
  * Convert an instance of SkillUserModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

