/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner {
  public static final String SERIALIZED_NAME_COURSE = "course";
  @SerializedName(SERIALIZED_NAME_COURSE)
  private String course;

  public static final String SERIALIZED_NAME_DEGREE = "degree";
  @SerializedName(SERIALIZED_NAME_DEGREE)
  private String degree;

  public static final String SERIALIZED_NAME_INSTITUTION = "institution";
  @SerializedName(SERIALIZED_NAME_INSTITUTION)
  private String institution;

  public static final String SERIALIZED_NAME_GPA = "gpa";
  @SerializedName(SERIALIZED_NAME_GPA)
  private String gpa;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private String countryId;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_EXT_APP_U_I_D = "extAppUID";
  @SerializedName(SERIALIZED_NAME_EXT_APP_U_I_D)
  private String extAppUID;

  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner() {
  }

  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner course(String course) {
    
    
    
    
    this.course = course;
    return this;
  }

   /**
   * Name of the course.
   * @return course
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the course.")

  public String getCourse() {
    return course;
  }


  public void setCourse(String course) {
    
    
    
    this.course = course;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner degree(String degree) {
    
    
    
    
    this.degree = degree;
    return this;
  }

   /**
   * Name of the degree.
   * @return degree
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the degree.")

  public String getDegree() {
    return degree;
  }


  public void setDegree(String degree) {
    
    
    
    this.degree = degree;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner institution(String institution) {
    
    
    
    
    this.institution = institution;
    return this;
  }

   /**
   * Name of the institution.
   * @return institution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the institution.")

  public String getInstitution() {
    return institution;
  }


  public void setInstitution(String institution) {
    
    
    
    this.institution = institution;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner gpa(String gpa) {
    
    
    
    
    this.gpa = gpa;
    return this;
  }

   /**
   * Get gpa
   * @return gpa
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGpa() {
    return gpa;
  }


  public void setGpa(String gpa) {
    
    
    
    this.gpa = gpa;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner state(String state) {
    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * Name of the state.
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the state.")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    
    
    
    this.state = state;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * Name of the city.
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the city.")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner countryId(String countryId) {
    
    
    
    
    this.countryId = countryId;
    return this;
  }

   /**
   * Country Identifier (should be a number id).
   * @return countryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Country Identifier (should be a number id).")

  public String getCountryId() {
    return countryId;
  }


  public void setCountryId(String countryId) {
    
    
    
    this.countryId = countryId;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner countryCode(String countryCode) {
    
    
    
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Country ISO2 code.
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Country ISO2 code.")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    
    
    
    this.countryCode = countryCode;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner startDate(String startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Start Date of the course.
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Start Date of the course.")

  public String getStartDate() {
    return startDate;
  }


  public void setStartDate(String startDate) {
    
    
    
    this.startDate = startDate;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner endDate(String endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * End Date of the course.
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "End Date of the course.")

  public String getEndDate() {
    return endDate;
  }


  public void setEndDate(String endDate) {
    
    
    
    this.endDate = endDate;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner extAppUID(String extAppUID) {
    
    
    
    
    this.extAppUID = extAppUID;
    return this;
  }

   /**
   * Get extAppUID
   * @return extAppUID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExtAppUID() {
    return extAppUID;
  }


  public void setExtAppUID(String extAppUID) {
    
    
    
    this.extAppUID = extAppUID;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner instance itself
   */
  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner = (PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner) o;
    return Objects.equals(this.course, peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.course) &&
        Objects.equals(this.degree, peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.degree) &&
        Objects.equals(this.institution, peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.institution) &&
        Objects.equals(this.gpa, peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.gpa) &&
        Objects.equals(this.state, peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.state) &&
        Objects.equals(this.city, peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.city) &&
        Objects.equals(this.countryId, peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.countryId) &&
        Objects.equals(this.countryCode, peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.countryCode) &&
        Objects.equals(this.startDate, peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.startDate) &&
        Objects.equals(this.endDate, peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.endDate) &&
        Objects.equals(this.extAppUID, peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.extAppUID)&&
        Objects.equals(this.additionalProperties, peopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(course, degree, institution, gpa, state, city, countryId, countryCode, startDate, endDate, extAppUID, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner {\n");
    sb.append("    course: ").append(toIndentedString(course)).append("\n");
    sb.append("    degree: ").append(toIndentedString(degree)).append("\n");
    sb.append("    institution: ").append(toIndentedString(institution)).append("\n");
    sb.append("    gpa: ").append(toIndentedString(gpa)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    extAppUID: ").append(toIndentedString(extAppUID)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("course");
    openapiFields.add("degree");
    openapiFields.add("institution");
    openapiFields.add("gpa");
    openapiFields.add("state");
    openapiFields.add("city");
    openapiFields.add("countryId");
    openapiFields.add("countryCode");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("extAppUID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner is not found in the empty JSON string", PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("course") != null && !jsonObj.get("course").isJsonNull()) && !jsonObj.get("course").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `course` to be a primitive type in the JSON string but got `%s`", jsonObj.get("course").toString()));
      }
      if ((jsonObj.get("degree") != null && !jsonObj.get("degree").isJsonNull()) && !jsonObj.get("degree").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `degree` to be a primitive type in the JSON string but got `%s`", jsonObj.get("degree").toString()));
      }
      if ((jsonObj.get("institution") != null && !jsonObj.get("institution").isJsonNull()) && !jsonObj.get("institution").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `institution` to be a primitive type in the JSON string but got `%s`", jsonObj.get("institution").toString()));
      }
      if ((jsonObj.get("gpa") != null && !jsonObj.get("gpa").isJsonNull()) && !jsonObj.get("gpa").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gpa` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gpa").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("countryId") != null && !jsonObj.get("countryId").isJsonNull()) && !jsonObj.get("countryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryId").toString()));
      }
      if ((jsonObj.get("countryCode") != null && !jsonObj.get("countryCode").isJsonNull()) && !jsonObj.get("countryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCode").toString()));
      }
      if ((jsonObj.get("startDate") != null && !jsonObj.get("startDate").isJsonNull()) && !jsonObj.get("startDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startDate").toString()));
      }
      if ((jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) && !jsonObj.get("endDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDate").toString()));
      }
      if ((jsonObj.get("extAppUID") != null && !jsonObj.get("extAppUID").isJsonNull()) && !jsonObj.get("extAppUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extAppUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extAppUID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner>() {
           @Override
           public void write(JsonWriter out, PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner
  * @throws IOException if the JSON string is invalid with respect to PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner
  */
  public static PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.class);
  }

 /**
  * Convert an instance of PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

