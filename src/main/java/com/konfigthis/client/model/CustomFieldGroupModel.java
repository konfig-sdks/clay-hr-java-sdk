/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CustomFieldGroupModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CustomFieldGroupModel {
  public static final String SERIALIZED_NAME_ACCESS = "access";
  @SerializedName(SERIALIZED_NAME_ACCESS)
  private String access;

  public static final String SERIALIZED_NAME_CFGROUPID = "cfgroupid";
  @SerializedName(SERIALIZED_NAME_CFGROUPID)
  private Integer cfgroupid;

  public static final String SERIALIZED_NAME_CFGROUPNAME = "cfgroupname";
  @SerializedName(SERIALIZED_NAME_CFGROUPNAME)
  private String cfgroupname;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_HAS_CUSTOM_FIELDS = "hasCustomFields";
  @SerializedName(SERIALIZED_NAME_HAS_CUSTOM_FIELDS)
  private Boolean hasCustomFields;

  public static final String SERIALIZED_NAME_LAYOUT = "layout";
  @SerializedName(SERIALIZED_NAME_LAYOUT)
  private String layout;

  public static final String SERIALIZED_NAME_OBJECT_TYPE = "objectType";
  @SerializedName(SERIALIZED_NAME_OBJECT_TYPE)
  private String objectType;

  public static final String SERIALIZED_NAME_SEQUENCE = "sequence";
  @SerializedName(SERIALIZED_NAME_SEQUENCE)
  private Integer sequence;

  public static final String SERIALIZED_NAME_USERGROUPID = "usergroupid";
  @SerializedName(SERIALIZED_NAME_USERGROUPID)
  private Integer usergroupid;

  public CustomFieldGroupModel() {
  }

  public CustomFieldGroupModel access(String access) {
    
    
    
    
    this.access = access;
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccess() {
    return access;
  }


  public void setAccess(String access) {
    
    
    
    this.access = access;
  }


  public CustomFieldGroupModel cfgroupid(Integer cfgroupid) {
    
    
    
    
    this.cfgroupid = cfgroupid;
    return this;
  }

   /**
   * Get cfgroupid
   * @return cfgroupid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCfgroupid() {
    return cfgroupid;
  }


  public void setCfgroupid(Integer cfgroupid) {
    
    
    
    this.cfgroupid = cfgroupid;
  }


  public CustomFieldGroupModel cfgroupname(String cfgroupname) {
    
    
    
    
    this.cfgroupname = cfgroupname;
    return this;
  }

   /**
   * Get cfgroupname
   * @return cfgroupname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCfgroupname() {
    return cfgroupname;
  }


  public void setCfgroupname(String cfgroupname) {
    
    
    
    this.cfgroupname = cfgroupname;
  }


  public CustomFieldGroupModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public CustomFieldGroupModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public CustomFieldGroupModel hasCustomFields(Boolean hasCustomFields) {
    
    
    
    
    this.hasCustomFields = hasCustomFields;
    return this;
  }

   /**
   * Get hasCustomFields
   * @return hasCustomFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasCustomFields() {
    return hasCustomFields;
  }


  public void setHasCustomFields(Boolean hasCustomFields) {
    
    
    
    this.hasCustomFields = hasCustomFields;
  }


  public CustomFieldGroupModel layout(String layout) {
    
    
    
    
    this.layout = layout;
    return this;
  }

   /**
   * Get layout
   * @return layout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLayout() {
    return layout;
  }


  public void setLayout(String layout) {
    
    
    
    this.layout = layout;
  }


  public CustomFieldGroupModel objectType(String objectType) {
    
    
    
    
    this.objectType = objectType;
    return this;
  }

   /**
   * Get objectType
   * @return objectType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getObjectType() {
    return objectType;
  }


  public void setObjectType(String objectType) {
    
    
    
    this.objectType = objectType;
  }


  public CustomFieldGroupModel sequence(Integer sequence) {
    
    
    
    
    this.sequence = sequence;
    return this;
  }

   /**
   * Get sequence
   * @return sequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSequence() {
    return sequence;
  }


  public void setSequence(Integer sequence) {
    
    
    
    this.sequence = sequence;
  }


  public CustomFieldGroupModel usergroupid(Integer usergroupid) {
    
    
    
    
    this.usergroupid = usergroupid;
    return this;
  }

   /**
   * Get usergroupid
   * @return usergroupid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUsergroupid() {
    return usergroupid;
  }


  public void setUsergroupid(Integer usergroupid) {
    
    
    
    this.usergroupid = usergroupid;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CustomFieldGroupModel instance itself
   */
  public CustomFieldGroupModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomFieldGroupModel customFieldGroupModel = (CustomFieldGroupModel) o;
    return Objects.equals(this.access, customFieldGroupModel.access) &&
        Objects.equals(this.cfgroupid, customFieldGroupModel.cfgroupid) &&
        Objects.equals(this.cfgroupname, customFieldGroupModel.cfgroupname) &&
        Objects.equals(this.cid, customFieldGroupModel.cid) &&
        Objects.equals(this.createts, customFieldGroupModel.createts) &&
        Objects.equals(this.hasCustomFields, customFieldGroupModel.hasCustomFields) &&
        Objects.equals(this.layout, customFieldGroupModel.layout) &&
        Objects.equals(this.objectType, customFieldGroupModel.objectType) &&
        Objects.equals(this.sequence, customFieldGroupModel.sequence) &&
        Objects.equals(this.usergroupid, customFieldGroupModel.usergroupid)&&
        Objects.equals(this.additionalProperties, customFieldGroupModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(access, cfgroupid, cfgroupname, cid, createts, hasCustomFields, layout, objectType, sequence, usergroupid, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomFieldGroupModel {\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    cfgroupid: ").append(toIndentedString(cfgroupid)).append("\n");
    sb.append("    cfgroupname: ").append(toIndentedString(cfgroupname)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    hasCustomFields: ").append(toIndentedString(hasCustomFields)).append("\n");
    sb.append("    layout: ").append(toIndentedString(layout)).append("\n");
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    usergroupid: ").append(toIndentedString(usergroupid)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access");
    openapiFields.add("cfgroupid");
    openapiFields.add("cfgroupname");
    openapiFields.add("cid");
    openapiFields.add("createts");
    openapiFields.add("hasCustomFields");
    openapiFields.add("layout");
    openapiFields.add("objectType");
    openapiFields.add("sequence");
    openapiFields.add("usergroupid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomFieldGroupModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomFieldGroupModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomFieldGroupModel is not found in the empty JSON string", CustomFieldGroupModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("access") != null && !jsonObj.get("access").isJsonNull()) && !jsonObj.get("access").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access").toString()));
      }
      if ((jsonObj.get("cfgroupname") != null && !jsonObj.get("cfgroupname").isJsonNull()) && !jsonObj.get("cfgroupname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfgroupname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfgroupname").toString()));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      if ((jsonObj.get("layout") != null && !jsonObj.get("layout").isJsonNull()) && !jsonObj.get("layout").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `layout` to be a primitive type in the JSON string but got `%s`", jsonObj.get("layout").toString()));
      }
      if ((jsonObj.get("objectType") != null && !jsonObj.get("objectType").isJsonNull()) && !jsonObj.get("objectType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `objectType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("objectType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomFieldGroupModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomFieldGroupModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomFieldGroupModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomFieldGroupModel.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomFieldGroupModel>() {
           @Override
           public void write(JsonWriter out, CustomFieldGroupModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomFieldGroupModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CustomFieldGroupModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomFieldGroupModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomFieldGroupModel
  * @throws IOException if the JSON string is invalid with respect to CustomFieldGroupModel
  */
  public static CustomFieldGroupModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomFieldGroupModel.class);
  }

 /**
  * Convert an instance of CustomFieldGroupModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

