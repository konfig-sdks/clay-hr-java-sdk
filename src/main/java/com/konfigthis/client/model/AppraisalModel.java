/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AssessmentModel;
import com.konfigthis.client.model.UserModel;
import com.konfigthis.client.model.UserViewModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AppraisalModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AppraisalModel {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_APPRAISAL_ID = "appraisalId";
  @SerializedName(SERIALIZED_NAME_APPRAISAL_ID)
  private Integer appraisalId;

  public static final String SERIALIZED_NAME_APPRAISAL_NAME = "appraisalName";
  @SerializedName(SERIALIZED_NAME_APPRAISAL_NAME)
  private String appraisalName;

  public static final String SERIALIZED_NAME_APPRAISAL_TYPE = "appraisalType";
  @SerializedName(SERIALIZED_NAME_APPRAISAL_TYPE)
  private String appraisalType;

  public static final String SERIALIZED_NAME_CANDIDATE_POSITION_ID = "candidatePositionId";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_POSITION_ID)
  private Long candidatePositionId;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_COMPLETION_DATE = "completionDate";
  @SerializedName(SERIALIZED_NAME_COMPLETION_DATE)
  private LocalDate completionDate;

  public static final String SERIALIZED_NAME_CREATE_USER_ID = "createUserId";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_ID)
  private Integer createUserId;

  public static final String SERIALIZED_NAME_CREATE_USER_MODEL = "createUserModel";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_MODEL)
  private UserModel createUserModel;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private LocalDate createts;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private LocalDate endDate;

  public static final String SERIALIZED_NAME_FINAL_COMMENT = "finalComment";
  @SerializedName(SERIALIZED_NAME_FINAL_COMMENT)
  private String finalComment;

  public static final String SERIALIZED_NAME_FINAL_VALUE = "finalValue";
  @SerializedName(SERIALIZED_NAME_FINAL_VALUE)
  private Double finalValue;

  public static final String SERIALIZED_NAME_FINAL_VALUE_STR = "finalValueStr";
  @SerializedName(SERIALIZED_NAME_FINAL_VALUE_STR)
  private String finalValueStr;

  public static final String SERIALIZED_NAME_MANAGER_ID = "managerId";
  @SerializedName(SERIALIZED_NAME_MANAGER_ID)
  private Integer managerId;

  public static final String SERIALIZED_NAME_MANAGER_USER_MODEL = "managerUserModel";
  @SerializedName(SERIALIZED_NAME_MANAGER_USER_MODEL)
  private UserModel managerUserModel;

  public static final String SERIALIZED_NAME_OBTYPE = "obtype";
  @SerializedName(SERIALIZED_NAME_OBTYPE)
  private String obtype;

  public static final String SERIALIZED_NAME_PRE_FINAL_COMMENT = "preFinalComment";
  @SerializedName(SERIALIZED_NAME_PRE_FINAL_COMMENT)
  private String preFinalComment;

  public static final String SERIALIZED_NAME_PRE_FINAL_VALUE = "preFinalValue";
  @SerializedName(SERIALIZED_NAME_PRE_FINAL_VALUE)
  private Double preFinalValue;

  public static final String SERIALIZED_NAME_PRE_FINAL_VALUE_STR = "preFinalValueStr";
  @SerializedName(SERIALIZED_NAME_PRE_FINAL_VALUE_STR)
  private String preFinalValueStr;

  public static final String SERIALIZED_NAME_REVIEW_MODE = "reviewMode";
  @SerializedName(SERIALIZED_NAME_REVIEW_MODE)
  private String reviewMode;

  public static final String SERIALIZED_NAME_SAVE_FOR_LATER = "saveForLater";
  @SerializedName(SERIALIZED_NAME_SAVE_FOR_LATER)
  private Integer saveForLater;

  public static final String SERIALIZED_NAME_SCORE_TEMPLATE_ID = "scoreTemplateId";
  @SerializedName(SERIALIZED_NAME_SCORE_TEMPLATE_ID)
  private Integer scoreTemplateId;

  public static final String SERIALIZED_NAME_SCORE_TEMPLATE_MODEL = "scoreTemplateModel";
  @SerializedName(SERIALIZED_NAME_SCORE_TEMPLATE_MODEL)
  private AssessmentModel scoreTemplateModel;

  public static final String SERIALIZED_NAME_SHOW_FINAL_VALUE = "showFinalValue";
  @SerializedName(SERIALIZED_NAME_SHOW_FINAL_VALUE)
  private Integer showFinalValue;

  public static final String SERIALIZED_NAME_SHOW_WEIGHTED_TOTAL = "showWeightedTotal";
  @SerializedName(SERIALIZED_NAME_SHOW_WEIGHTED_TOTAL)
  private Integer showWeightedTotal;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private LocalDate startDate;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_CODE = "statusCode";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  private String statusCode;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_USER_MODEL = "userModel";
  @SerializedName(SERIALIZED_NAME_USER_MODEL)
  private UserModel userModel;

  public static final String SERIALIZED_NAME_USER_VIEW_MODEL = "userViewModel";
  @SerializedName(SERIALIZED_NAME_USER_VIEW_MODEL)
  private UserViewModel userViewModel;

  public static final String SERIALIZED_NAME_WORKFLOW_ID = "workflowId";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_ID)
  private Integer workflowId;

  public AppraisalModel() {
  }

  public AppraisalModel description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public AppraisalModel appraisalId(Integer appraisalId) {
    
    
    
    
    this.appraisalId = appraisalId;
    return this;
  }

   /**
   * Get appraisalId
   * @return appraisalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAppraisalId() {
    return appraisalId;
  }


  public void setAppraisalId(Integer appraisalId) {
    
    
    
    this.appraisalId = appraisalId;
  }


  public AppraisalModel appraisalName(String appraisalName) {
    
    
    
    
    this.appraisalName = appraisalName;
    return this;
  }

   /**
   * Get appraisalName
   * @return appraisalName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppraisalName() {
    return appraisalName;
  }


  public void setAppraisalName(String appraisalName) {
    
    
    
    this.appraisalName = appraisalName;
  }


  public AppraisalModel appraisalType(String appraisalType) {
    
    
    
    
    this.appraisalType = appraisalType;
    return this;
  }

   /**
   * Get appraisalType
   * @return appraisalType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppraisalType() {
    return appraisalType;
  }


  public void setAppraisalType(String appraisalType) {
    
    
    
    this.appraisalType = appraisalType;
  }


  public AppraisalModel candidatePositionId(Long candidatePositionId) {
    
    
    
    
    this.candidatePositionId = candidatePositionId;
    return this;
  }

   /**
   * Get candidatePositionId
   * @return candidatePositionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getCandidatePositionId() {
    return candidatePositionId;
  }


  public void setCandidatePositionId(Long candidatePositionId) {
    
    
    
    this.candidatePositionId = candidatePositionId;
  }


  public AppraisalModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public AppraisalModel completionDate(LocalDate completionDate) {
    
    
    
    
    this.completionDate = completionDate;
    return this;
  }

   /**
   * Get completionDate
   * @return completionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getCompletionDate() {
    return completionDate;
  }


  public void setCompletionDate(LocalDate completionDate) {
    
    
    
    this.completionDate = completionDate;
  }


  public AppraisalModel createUserId(Integer createUserId) {
    
    
    
    
    this.createUserId = createUserId;
    return this;
  }

   /**
   * Get createUserId
   * @return createUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateUserId() {
    return createUserId;
  }


  public void setCreateUserId(Integer createUserId) {
    
    
    
    this.createUserId = createUserId;
  }


  public AppraisalModel createUserModel(UserModel createUserModel) {
    
    
    
    
    this.createUserModel = createUserModel;
    return this;
  }

   /**
   * Get createUserModel
   * @return createUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getCreateUserModel() {
    return createUserModel;
  }


  public void setCreateUserModel(UserModel createUserModel) {
    
    
    
    this.createUserModel = createUserModel;
  }


  public AppraisalModel createts(LocalDate createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getCreatets() {
    return createts;
  }


  public void setCreatets(LocalDate createts) {
    
    
    
    this.createts = createts;
  }


  public AppraisalModel endDate(LocalDate endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getEndDate() {
    return endDate;
  }


  public void setEndDate(LocalDate endDate) {
    
    
    
    this.endDate = endDate;
  }


  public AppraisalModel finalComment(String finalComment) {
    
    
    
    
    this.finalComment = finalComment;
    return this;
  }

   /**
   * Get finalComment
   * @return finalComment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFinalComment() {
    return finalComment;
  }


  public void setFinalComment(String finalComment) {
    
    
    
    this.finalComment = finalComment;
  }


  public AppraisalModel finalValue(Double finalValue) {
    
    
    
    
    this.finalValue = finalValue;
    return this;
  }

   /**
   * Get finalValue
   * @return finalValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getFinalValue() {
    return finalValue;
  }


  public void setFinalValue(Double finalValue) {
    
    
    
    this.finalValue = finalValue;
  }


  public AppraisalModel finalValueStr(String finalValueStr) {
    
    
    
    
    this.finalValueStr = finalValueStr;
    return this;
  }

   /**
   * Get finalValueStr
   * @return finalValueStr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFinalValueStr() {
    return finalValueStr;
  }


  public void setFinalValueStr(String finalValueStr) {
    
    
    
    this.finalValueStr = finalValueStr;
  }


  public AppraisalModel managerId(Integer managerId) {
    
    
    
    
    this.managerId = managerId;
    return this;
  }

   /**
   * Get managerId
   * @return managerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getManagerId() {
    return managerId;
  }


  public void setManagerId(Integer managerId) {
    
    
    
    this.managerId = managerId;
  }


  public AppraisalModel managerUserModel(UserModel managerUserModel) {
    
    
    
    
    this.managerUserModel = managerUserModel;
    return this;
  }

   /**
   * Get managerUserModel
   * @return managerUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getManagerUserModel() {
    return managerUserModel;
  }


  public void setManagerUserModel(UserModel managerUserModel) {
    
    
    
    this.managerUserModel = managerUserModel;
  }


  public AppraisalModel obtype(String obtype) {
    
    
    
    
    this.obtype = obtype;
    return this;
  }

   /**
   * Get obtype
   * @return obtype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getObtype() {
    return obtype;
  }


  public void setObtype(String obtype) {
    
    
    
    this.obtype = obtype;
  }


  public AppraisalModel preFinalComment(String preFinalComment) {
    
    
    
    
    this.preFinalComment = preFinalComment;
    return this;
  }

   /**
   * Get preFinalComment
   * @return preFinalComment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPreFinalComment() {
    return preFinalComment;
  }


  public void setPreFinalComment(String preFinalComment) {
    
    
    
    this.preFinalComment = preFinalComment;
  }


  public AppraisalModel preFinalValue(Double preFinalValue) {
    
    
    
    
    this.preFinalValue = preFinalValue;
    return this;
  }

   /**
   * Get preFinalValue
   * @return preFinalValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPreFinalValue() {
    return preFinalValue;
  }


  public void setPreFinalValue(Double preFinalValue) {
    
    
    
    this.preFinalValue = preFinalValue;
  }


  public AppraisalModel preFinalValueStr(String preFinalValueStr) {
    
    
    
    
    this.preFinalValueStr = preFinalValueStr;
    return this;
  }

   /**
   * Get preFinalValueStr
   * @return preFinalValueStr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPreFinalValueStr() {
    return preFinalValueStr;
  }


  public void setPreFinalValueStr(String preFinalValueStr) {
    
    
    
    this.preFinalValueStr = preFinalValueStr;
  }


  public AppraisalModel reviewMode(String reviewMode) {
    
    
    
    
    this.reviewMode = reviewMode;
    return this;
  }

   /**
   * Get reviewMode
   * @return reviewMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReviewMode() {
    return reviewMode;
  }


  public void setReviewMode(String reviewMode) {
    
    
    
    this.reviewMode = reviewMode;
  }


  public AppraisalModel saveForLater(Integer saveForLater) {
    
    
    
    
    this.saveForLater = saveForLater;
    return this;
  }

   /**
   * Get saveForLater
   * @return saveForLater
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSaveForLater() {
    return saveForLater;
  }


  public void setSaveForLater(Integer saveForLater) {
    
    
    
    this.saveForLater = saveForLater;
  }


  public AppraisalModel scoreTemplateId(Integer scoreTemplateId) {
    
    
    
    
    this.scoreTemplateId = scoreTemplateId;
    return this;
  }

   /**
   * Get scoreTemplateId
   * @return scoreTemplateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getScoreTemplateId() {
    return scoreTemplateId;
  }


  public void setScoreTemplateId(Integer scoreTemplateId) {
    
    
    
    this.scoreTemplateId = scoreTemplateId;
  }


  public AppraisalModel scoreTemplateModel(AssessmentModel scoreTemplateModel) {
    
    
    
    
    this.scoreTemplateModel = scoreTemplateModel;
    return this;
  }

   /**
   * Get scoreTemplateModel
   * @return scoreTemplateModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AssessmentModel getScoreTemplateModel() {
    return scoreTemplateModel;
  }


  public void setScoreTemplateModel(AssessmentModel scoreTemplateModel) {
    
    
    
    this.scoreTemplateModel = scoreTemplateModel;
  }


  public AppraisalModel showFinalValue(Integer showFinalValue) {
    
    
    
    
    this.showFinalValue = showFinalValue;
    return this;
  }

   /**
   * Get showFinalValue
   * @return showFinalValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getShowFinalValue() {
    return showFinalValue;
  }


  public void setShowFinalValue(Integer showFinalValue) {
    
    
    
    this.showFinalValue = showFinalValue;
  }


  public AppraisalModel showWeightedTotal(Integer showWeightedTotal) {
    
    
    
    
    this.showWeightedTotal = showWeightedTotal;
    return this;
  }

   /**
   * Get showWeightedTotal
   * @return showWeightedTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getShowWeightedTotal() {
    return showWeightedTotal;
  }


  public void setShowWeightedTotal(Integer showWeightedTotal) {
    
    
    
    this.showWeightedTotal = showWeightedTotal;
  }


  public AppraisalModel startDate(LocalDate startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getStartDate() {
    return startDate;
  }


  public void setStartDate(LocalDate startDate) {
    
    
    
    this.startDate = startDate;
  }


  public AppraisalModel status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public AppraisalModel statusCode(String statusCode) {
    
    
    
    
    this.statusCode = statusCode;
    return this;
  }

   /**
   * Get statusCode
   * @return statusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatusCode() {
    return statusCode;
  }


  public void setStatusCode(String statusCode) {
    
    
    
    this.statusCode = statusCode;
  }


  public AppraisalModel userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public AppraisalModel userModel(UserModel userModel) {
    
    
    
    
    this.userModel = userModel;
    return this;
  }

   /**
   * Get userModel
   * @return userModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getUserModel() {
    return userModel;
  }


  public void setUserModel(UserModel userModel) {
    
    
    
    this.userModel = userModel;
  }


  public AppraisalModel userViewModel(UserViewModel userViewModel) {
    
    
    
    
    this.userViewModel = userViewModel;
    return this;
  }

   /**
   * Get userViewModel
   * @return userViewModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserViewModel getUserViewModel() {
    return userViewModel;
  }


  public void setUserViewModel(UserViewModel userViewModel) {
    
    
    
    this.userViewModel = userViewModel;
  }


  public AppraisalModel workflowId(Integer workflowId) {
    
    
    
    
    this.workflowId = workflowId;
    return this;
  }

   /**
   * Get workflowId
   * @return workflowId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWorkflowId() {
    return workflowId;
  }


  public void setWorkflowId(Integer workflowId) {
    
    
    
    this.workflowId = workflowId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AppraisalModel instance itself
   */
  public AppraisalModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppraisalModel appraisalModel = (AppraisalModel) o;
    return Objects.equals(this.description, appraisalModel.description) &&
        Objects.equals(this.appraisalId, appraisalModel.appraisalId) &&
        Objects.equals(this.appraisalName, appraisalModel.appraisalName) &&
        Objects.equals(this.appraisalType, appraisalModel.appraisalType) &&
        Objects.equals(this.candidatePositionId, appraisalModel.candidatePositionId) &&
        Objects.equals(this.cid, appraisalModel.cid) &&
        Objects.equals(this.completionDate, appraisalModel.completionDate) &&
        Objects.equals(this.createUserId, appraisalModel.createUserId) &&
        Objects.equals(this.createUserModel, appraisalModel.createUserModel) &&
        Objects.equals(this.createts, appraisalModel.createts) &&
        Objects.equals(this.endDate, appraisalModel.endDate) &&
        Objects.equals(this.finalComment, appraisalModel.finalComment) &&
        Objects.equals(this.finalValue, appraisalModel.finalValue) &&
        Objects.equals(this.finalValueStr, appraisalModel.finalValueStr) &&
        Objects.equals(this.managerId, appraisalModel.managerId) &&
        Objects.equals(this.managerUserModel, appraisalModel.managerUserModel) &&
        Objects.equals(this.obtype, appraisalModel.obtype) &&
        Objects.equals(this.preFinalComment, appraisalModel.preFinalComment) &&
        Objects.equals(this.preFinalValue, appraisalModel.preFinalValue) &&
        Objects.equals(this.preFinalValueStr, appraisalModel.preFinalValueStr) &&
        Objects.equals(this.reviewMode, appraisalModel.reviewMode) &&
        Objects.equals(this.saveForLater, appraisalModel.saveForLater) &&
        Objects.equals(this.scoreTemplateId, appraisalModel.scoreTemplateId) &&
        Objects.equals(this.scoreTemplateModel, appraisalModel.scoreTemplateModel) &&
        Objects.equals(this.showFinalValue, appraisalModel.showFinalValue) &&
        Objects.equals(this.showWeightedTotal, appraisalModel.showWeightedTotal) &&
        Objects.equals(this.startDate, appraisalModel.startDate) &&
        Objects.equals(this.status, appraisalModel.status) &&
        Objects.equals(this.statusCode, appraisalModel.statusCode) &&
        Objects.equals(this.userId, appraisalModel.userId) &&
        Objects.equals(this.userModel, appraisalModel.userModel) &&
        Objects.equals(this.userViewModel, appraisalModel.userViewModel) &&
        Objects.equals(this.workflowId, appraisalModel.workflowId)&&
        Objects.equals(this.additionalProperties, appraisalModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, appraisalId, appraisalName, appraisalType, candidatePositionId, cid, completionDate, createUserId, createUserModel, createts, endDate, finalComment, finalValue, finalValueStr, managerId, managerUserModel, obtype, preFinalComment, preFinalValue, preFinalValueStr, reviewMode, saveForLater, scoreTemplateId, scoreTemplateModel, showFinalValue, showWeightedTotal, startDate, status, statusCode, userId, userModel, userViewModel, workflowId, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppraisalModel {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    appraisalId: ").append(toIndentedString(appraisalId)).append("\n");
    sb.append("    appraisalName: ").append(toIndentedString(appraisalName)).append("\n");
    sb.append("    appraisalType: ").append(toIndentedString(appraisalType)).append("\n");
    sb.append("    candidatePositionId: ").append(toIndentedString(candidatePositionId)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    createUserId: ").append(toIndentedString(createUserId)).append("\n");
    sb.append("    createUserModel: ").append(toIndentedString(createUserModel)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    finalComment: ").append(toIndentedString(finalComment)).append("\n");
    sb.append("    finalValue: ").append(toIndentedString(finalValue)).append("\n");
    sb.append("    finalValueStr: ").append(toIndentedString(finalValueStr)).append("\n");
    sb.append("    managerId: ").append(toIndentedString(managerId)).append("\n");
    sb.append("    managerUserModel: ").append(toIndentedString(managerUserModel)).append("\n");
    sb.append("    obtype: ").append(toIndentedString(obtype)).append("\n");
    sb.append("    preFinalComment: ").append(toIndentedString(preFinalComment)).append("\n");
    sb.append("    preFinalValue: ").append(toIndentedString(preFinalValue)).append("\n");
    sb.append("    preFinalValueStr: ").append(toIndentedString(preFinalValueStr)).append("\n");
    sb.append("    reviewMode: ").append(toIndentedString(reviewMode)).append("\n");
    sb.append("    saveForLater: ").append(toIndentedString(saveForLater)).append("\n");
    sb.append("    scoreTemplateId: ").append(toIndentedString(scoreTemplateId)).append("\n");
    sb.append("    scoreTemplateModel: ").append(toIndentedString(scoreTemplateModel)).append("\n");
    sb.append("    showFinalValue: ").append(toIndentedString(showFinalValue)).append("\n");
    sb.append("    showWeightedTotal: ").append(toIndentedString(showWeightedTotal)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userModel: ").append(toIndentedString(userModel)).append("\n");
    sb.append("    userViewModel: ").append(toIndentedString(userViewModel)).append("\n");
    sb.append("    workflowId: ").append(toIndentedString(workflowId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("appraisalId");
    openapiFields.add("appraisalName");
    openapiFields.add("appraisalType");
    openapiFields.add("candidatePositionId");
    openapiFields.add("cid");
    openapiFields.add("completionDate");
    openapiFields.add("createUserId");
    openapiFields.add("createUserModel");
    openapiFields.add("createts");
    openapiFields.add("endDate");
    openapiFields.add("finalComment");
    openapiFields.add("finalValue");
    openapiFields.add("finalValueStr");
    openapiFields.add("managerId");
    openapiFields.add("managerUserModel");
    openapiFields.add("obtype");
    openapiFields.add("preFinalComment");
    openapiFields.add("preFinalValue");
    openapiFields.add("preFinalValueStr");
    openapiFields.add("reviewMode");
    openapiFields.add("saveForLater");
    openapiFields.add("scoreTemplateId");
    openapiFields.add("scoreTemplateModel");
    openapiFields.add("showFinalValue");
    openapiFields.add("showWeightedTotal");
    openapiFields.add("startDate");
    openapiFields.add("status");
    openapiFields.add("statusCode");
    openapiFields.add("userId");
    openapiFields.add("userModel");
    openapiFields.add("userViewModel");
    openapiFields.add("workflowId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AppraisalModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AppraisalModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppraisalModel is not found in the empty JSON string", AppraisalModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("appraisalName") != null && !jsonObj.get("appraisalName").isJsonNull()) && !jsonObj.get("appraisalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appraisalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appraisalName").toString()));
      }
      if ((jsonObj.get("appraisalType") != null && !jsonObj.get("appraisalType").isJsonNull()) && !jsonObj.get("appraisalType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appraisalType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appraisalType").toString()));
      }
      // validate the optional field `createUserModel`
      if (jsonObj.get("createUserModel") != null && !jsonObj.get("createUserModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("createUserModel"));
      }
      if ((jsonObj.get("finalComment") != null && !jsonObj.get("finalComment").isJsonNull()) && !jsonObj.get("finalComment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `finalComment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("finalComment").toString()));
      }
      if ((jsonObj.get("finalValueStr") != null && !jsonObj.get("finalValueStr").isJsonNull()) && !jsonObj.get("finalValueStr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `finalValueStr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("finalValueStr").toString()));
      }
      // validate the optional field `managerUserModel`
      if (jsonObj.get("managerUserModel") != null && !jsonObj.get("managerUserModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("managerUserModel"));
      }
      if ((jsonObj.get("obtype") != null && !jsonObj.get("obtype").isJsonNull()) && !jsonObj.get("obtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `obtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("obtype").toString()));
      }
      if ((jsonObj.get("preFinalComment") != null && !jsonObj.get("preFinalComment").isJsonNull()) && !jsonObj.get("preFinalComment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preFinalComment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preFinalComment").toString()));
      }
      if ((jsonObj.get("preFinalValueStr") != null && !jsonObj.get("preFinalValueStr").isJsonNull()) && !jsonObj.get("preFinalValueStr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preFinalValueStr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preFinalValueStr").toString()));
      }
      if ((jsonObj.get("reviewMode") != null && !jsonObj.get("reviewMode").isJsonNull()) && !jsonObj.get("reviewMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reviewMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reviewMode").toString()));
      }
      // validate the optional field `scoreTemplateModel`
      if (jsonObj.get("scoreTemplateModel") != null && !jsonObj.get("scoreTemplateModel").isJsonNull()) {
        AssessmentModel.validateJsonObject(jsonObj.getAsJsonObject("scoreTemplateModel"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("statusCode") != null && !jsonObj.get("statusCode").isJsonNull()) && !jsonObj.get("statusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusCode").toString()));
      }
      // validate the optional field `userModel`
      if (jsonObj.get("userModel") != null && !jsonObj.get("userModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("userModel"));
      }
      // validate the optional field `userViewModel`
      if (jsonObj.get("userViewModel") != null && !jsonObj.get("userViewModel").isJsonNull()) {
        UserViewModel.validateJsonObject(jsonObj.getAsJsonObject("userViewModel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppraisalModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppraisalModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppraisalModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppraisalModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AppraisalModel>() {
           @Override
           public void write(JsonWriter out, AppraisalModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AppraisalModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AppraisalModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AppraisalModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AppraisalModel
  * @throws IOException if the JSON string is invalid with respect to AppraisalModel
  */
  public static AppraisalModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppraisalModel.class);
  }

 /**
  * Convert an instance of AppraisalModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

