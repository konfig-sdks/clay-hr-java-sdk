/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CandidateModel;
import com.konfigthis.client.model.TrainingModel;
import com.konfigthis.client.model.UserViewModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * UserTrainingModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UserTrainingModel {
  public static final String SERIALIZED_NAME_ASSESSMENT_SCORE = "assessmentScore";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_SCORE)
  private Double assessmentScore;

  public static final String SERIALIZED_NAME_ASSIGNED_BY_USER_ID = "assignedByUserId";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_BY_USER_ID)
  private Integer assignedByUserId;

  public static final String SERIALIZED_NAME_CANDIDATE_MODEL = "candidateModel";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_MODEL)
  private CandidateModel candidateModel;

  public static final String SERIALIZED_NAME_CANDIDATEID = "candidateid";
  @SerializedName(SERIALIZED_NAME_CANDIDATEID)
  private Integer candidateid;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_COMPLETIONTS = "completionts";
  @SerializedName(SERIALIZED_NAME_COMPLETIONTS)
  private Timestamp completionts;

  public static final String SERIALIZED_NAME_COORDINATOR_NAME = "coordinatorName";
  @SerializedName(SERIALIZED_NAME_COORDINATOR_NAME)
  private String coordinatorName;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_DUE_DATE = "dueDate";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private LocalDate dueDate;

  public static final String SERIALIZED_NAME_DYNA_FORM_ASSIGNMENT_ID = "dynaFormAssignmentId";
  @SerializedName(SERIALIZED_NAME_DYNA_FORM_ASSIGNMENT_ID)
  private Integer dynaFormAssignmentId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TEST_RESULT = "testResult";
  @SerializedName(SERIALIZED_NAME_TEST_RESULT)
  private String testResult;

  public static final String SERIALIZED_NAME_TRAINING_COORDINATOR = "trainingCoordinator";
  @SerializedName(SERIALIZED_NAME_TRAINING_COORDINATOR)
  private Integer trainingCoordinator;

  public static final String SERIALIZED_NAME_TRAINING_ID = "trainingId";
  @SerializedName(SERIALIZED_NAME_TRAINING_ID)
  private Integer trainingId;

  public static final String SERIALIZED_NAME_TRAINING_MODEL = "trainingModel";
  @SerializedName(SERIALIZED_NAME_TRAINING_MODEL)
  private TrainingModel trainingModel;

  public static final String SERIALIZED_NAME_TRAININGUSER_ID = "traininguserId";
  @SerializedName(SERIALIZED_NAME_TRAININGUSER_ID)
  private Integer traininguserId;

  public static final String SERIALIZED_NAME_USER_MODEL = "userModel";
  @SerializedName(SERIALIZED_NAME_USER_MODEL)
  private UserViewModel userModel;

  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private Integer userid;

  public UserTrainingModel() {
  }

  public UserTrainingModel assessmentScore(Double assessmentScore) {
    
    
    
    
    this.assessmentScore = assessmentScore;
    return this;
  }

   /**
   * Get assessmentScore
   * @return assessmentScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAssessmentScore() {
    return assessmentScore;
  }


  public void setAssessmentScore(Double assessmentScore) {
    
    
    
    this.assessmentScore = assessmentScore;
  }


  public UserTrainingModel assignedByUserId(Integer assignedByUserId) {
    
    
    
    
    this.assignedByUserId = assignedByUserId;
    return this;
  }

   /**
   * Get assignedByUserId
   * @return assignedByUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAssignedByUserId() {
    return assignedByUserId;
  }


  public void setAssignedByUserId(Integer assignedByUserId) {
    
    
    
    this.assignedByUserId = assignedByUserId;
  }


  public UserTrainingModel candidateModel(CandidateModel candidateModel) {
    
    
    
    
    this.candidateModel = candidateModel;
    return this;
  }

   /**
   * Get candidateModel
   * @return candidateModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CandidateModel getCandidateModel() {
    return candidateModel;
  }


  public void setCandidateModel(CandidateModel candidateModel) {
    
    
    
    this.candidateModel = candidateModel;
  }


  public UserTrainingModel candidateid(Integer candidateid) {
    
    
    
    
    this.candidateid = candidateid;
    return this;
  }

   /**
   * Get candidateid
   * @return candidateid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCandidateid() {
    return candidateid;
  }


  public void setCandidateid(Integer candidateid) {
    
    
    
    this.candidateid = candidateid;
  }


  public UserTrainingModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public UserTrainingModel completionts(Timestamp completionts) {
    
    
    
    
    this.completionts = completionts;
    return this;
  }

   /**
   * Get completionts
   * @return completionts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCompletionts() {
    return completionts;
  }


  public void setCompletionts(Timestamp completionts) {
    
    
    
    this.completionts = completionts;
  }


  public UserTrainingModel coordinatorName(String coordinatorName) {
    
    
    
    
    this.coordinatorName = coordinatorName;
    return this;
  }

   /**
   * Get coordinatorName
   * @return coordinatorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCoordinatorName() {
    return coordinatorName;
  }


  public void setCoordinatorName(String coordinatorName) {
    
    
    
    this.coordinatorName = coordinatorName;
  }


  public UserTrainingModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public UserTrainingModel dueDate(LocalDate dueDate) {
    
    
    
    
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getDueDate() {
    return dueDate;
  }


  public void setDueDate(LocalDate dueDate) {
    
    
    
    this.dueDate = dueDate;
  }


  public UserTrainingModel dynaFormAssignmentId(Integer dynaFormAssignmentId) {
    
    
    
    
    this.dynaFormAssignmentId = dynaFormAssignmentId;
    return this;
  }

   /**
   * Get dynaFormAssignmentId
   * @return dynaFormAssignmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDynaFormAssignmentId() {
    return dynaFormAssignmentId;
  }


  public void setDynaFormAssignmentId(Integer dynaFormAssignmentId) {
    
    
    
    this.dynaFormAssignmentId = dynaFormAssignmentId;
  }


  public UserTrainingModel status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public UserTrainingModel testResult(String testResult) {
    
    
    
    
    this.testResult = testResult;
    return this;
  }

   /**
   * Get testResult
   * @return testResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTestResult() {
    return testResult;
  }


  public void setTestResult(String testResult) {
    
    
    
    this.testResult = testResult;
  }


  public UserTrainingModel trainingCoordinator(Integer trainingCoordinator) {
    
    
    
    
    this.trainingCoordinator = trainingCoordinator;
    return this;
  }

   /**
   * Get trainingCoordinator
   * @return trainingCoordinator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTrainingCoordinator() {
    return trainingCoordinator;
  }


  public void setTrainingCoordinator(Integer trainingCoordinator) {
    
    
    
    this.trainingCoordinator = trainingCoordinator;
  }


  public UserTrainingModel trainingId(Integer trainingId) {
    
    
    
    
    this.trainingId = trainingId;
    return this;
  }

   /**
   * Get trainingId
   * @return trainingId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTrainingId() {
    return trainingId;
  }


  public void setTrainingId(Integer trainingId) {
    
    
    
    this.trainingId = trainingId;
  }


  public UserTrainingModel trainingModel(TrainingModel trainingModel) {
    
    
    
    
    this.trainingModel = trainingModel;
    return this;
  }

   /**
   * Get trainingModel
   * @return trainingModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TrainingModel getTrainingModel() {
    return trainingModel;
  }


  public void setTrainingModel(TrainingModel trainingModel) {
    
    
    
    this.trainingModel = trainingModel;
  }


  public UserTrainingModel traininguserId(Integer traininguserId) {
    
    
    
    
    this.traininguserId = traininguserId;
    return this;
  }

   /**
   * Get traininguserId
   * @return traininguserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTraininguserId() {
    return traininguserId;
  }


  public void setTraininguserId(Integer traininguserId) {
    
    
    
    this.traininguserId = traininguserId;
  }


  public UserTrainingModel userModel(UserViewModel userModel) {
    
    
    
    
    this.userModel = userModel;
    return this;
  }

   /**
   * Get userModel
   * @return userModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserViewModel getUserModel() {
    return userModel;
  }


  public void setUserModel(UserViewModel userModel) {
    
    
    
    this.userModel = userModel;
  }


  public UserTrainingModel userid(Integer userid) {
    
    
    
    
    this.userid = userid;
    return this;
  }

   /**
   * Get userid
   * @return userid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserid() {
    return userid;
  }


  public void setUserid(Integer userid) {
    
    
    
    this.userid = userid;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UserTrainingModel instance itself
   */
  public UserTrainingModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserTrainingModel userTrainingModel = (UserTrainingModel) o;
    return Objects.equals(this.assessmentScore, userTrainingModel.assessmentScore) &&
        Objects.equals(this.assignedByUserId, userTrainingModel.assignedByUserId) &&
        Objects.equals(this.candidateModel, userTrainingModel.candidateModel) &&
        Objects.equals(this.candidateid, userTrainingModel.candidateid) &&
        Objects.equals(this.cid, userTrainingModel.cid) &&
        Objects.equals(this.completionts, userTrainingModel.completionts) &&
        Objects.equals(this.coordinatorName, userTrainingModel.coordinatorName) &&
        Objects.equals(this.createts, userTrainingModel.createts) &&
        Objects.equals(this.dueDate, userTrainingModel.dueDate) &&
        Objects.equals(this.dynaFormAssignmentId, userTrainingModel.dynaFormAssignmentId) &&
        Objects.equals(this.status, userTrainingModel.status) &&
        Objects.equals(this.testResult, userTrainingModel.testResult) &&
        Objects.equals(this.trainingCoordinator, userTrainingModel.trainingCoordinator) &&
        Objects.equals(this.trainingId, userTrainingModel.trainingId) &&
        Objects.equals(this.trainingModel, userTrainingModel.trainingModel) &&
        Objects.equals(this.traininguserId, userTrainingModel.traininguserId) &&
        Objects.equals(this.userModel, userTrainingModel.userModel) &&
        Objects.equals(this.userid, userTrainingModel.userid)&&
        Objects.equals(this.additionalProperties, userTrainingModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assessmentScore, assignedByUserId, candidateModel, candidateid, cid, completionts, coordinatorName, createts, dueDate, dynaFormAssignmentId, status, testResult, trainingCoordinator, trainingId, trainingModel, traininguserId, userModel, userid, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserTrainingModel {\n");
    sb.append("    assessmentScore: ").append(toIndentedString(assessmentScore)).append("\n");
    sb.append("    assignedByUserId: ").append(toIndentedString(assignedByUserId)).append("\n");
    sb.append("    candidateModel: ").append(toIndentedString(candidateModel)).append("\n");
    sb.append("    candidateid: ").append(toIndentedString(candidateid)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    completionts: ").append(toIndentedString(completionts)).append("\n");
    sb.append("    coordinatorName: ").append(toIndentedString(coordinatorName)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    dynaFormAssignmentId: ").append(toIndentedString(dynaFormAssignmentId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    testResult: ").append(toIndentedString(testResult)).append("\n");
    sb.append("    trainingCoordinator: ").append(toIndentedString(trainingCoordinator)).append("\n");
    sb.append("    trainingId: ").append(toIndentedString(trainingId)).append("\n");
    sb.append("    trainingModel: ").append(toIndentedString(trainingModel)).append("\n");
    sb.append("    traininguserId: ").append(toIndentedString(traininguserId)).append("\n");
    sb.append("    userModel: ").append(toIndentedString(userModel)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assessmentScore");
    openapiFields.add("assignedByUserId");
    openapiFields.add("candidateModel");
    openapiFields.add("candidateid");
    openapiFields.add("cid");
    openapiFields.add("completionts");
    openapiFields.add("coordinatorName");
    openapiFields.add("createts");
    openapiFields.add("dueDate");
    openapiFields.add("dynaFormAssignmentId");
    openapiFields.add("status");
    openapiFields.add("testResult");
    openapiFields.add("trainingCoordinator");
    openapiFields.add("trainingId");
    openapiFields.add("trainingModel");
    openapiFields.add("traininguserId");
    openapiFields.add("userModel");
    openapiFields.add("userid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UserTrainingModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UserTrainingModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserTrainingModel is not found in the empty JSON string", UserTrainingModel.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `candidateModel`
      if (jsonObj.get("candidateModel") != null && !jsonObj.get("candidateModel").isJsonNull()) {
        CandidateModel.validateJsonObject(jsonObj.getAsJsonObject("candidateModel"));
      }
      // validate the optional field `completionts`
      if (jsonObj.get("completionts") != null && !jsonObj.get("completionts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("completionts"));
      }
      if ((jsonObj.get("coordinatorName") != null && !jsonObj.get("coordinatorName").isJsonNull()) && !jsonObj.get("coordinatorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coordinatorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coordinatorName").toString()));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("testResult") != null && !jsonObj.get("testResult").isJsonNull()) && !jsonObj.get("testResult").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `testResult` to be a primitive type in the JSON string but got `%s`", jsonObj.get("testResult").toString()));
      }
      // validate the optional field `trainingModel`
      if (jsonObj.get("trainingModel") != null && !jsonObj.get("trainingModel").isJsonNull()) {
        TrainingModel.validateJsonObject(jsonObj.getAsJsonObject("trainingModel"));
      }
      // validate the optional field `userModel`
      if (jsonObj.get("userModel") != null && !jsonObj.get("userModel").isJsonNull()) {
        UserViewModel.validateJsonObject(jsonObj.getAsJsonObject("userModel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserTrainingModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserTrainingModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserTrainingModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserTrainingModel.class));

       return (TypeAdapter<T>) new TypeAdapter<UserTrainingModel>() {
           @Override
           public void write(JsonWriter out, UserTrainingModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UserTrainingModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UserTrainingModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserTrainingModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserTrainingModel
  * @throws IOException if the JSON string is invalid with respect to UserTrainingModel
  */
  public static UserTrainingModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserTrainingModel.class);
  }

 /**
  * Convert an instance of UserTrainingModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

