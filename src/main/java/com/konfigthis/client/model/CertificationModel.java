/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CertificationModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CertificationModel {
  public static final String SERIALIZED_NAME_CERTIFICATION_NUMBER = "CertificationNumber";
  @SerializedName(SERIALIZED_NAME_CERTIFICATION_NUMBER)
  private String certificationNumber;

  public static final String SERIALIZED_NAME_AUTHORITY = "authority";
  @SerializedName(SERIALIZED_NAME_AUTHORITY)
  private String authority;

  public static final String SERIALIZED_NAME_CANDIDATE_ID = "candidateId";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_ID)
  private Integer candidateId;

  public static final String SERIALIZED_NAME_CERTIFICATION_ID = "certificationId";
  @SerializedName(SERIALIZED_NAME_CERTIFICATION_ID)
  private Long certificationId;

  public static final String SERIALIZED_NAME_CERTIFICATION_NUMBER = "certificationNumber";
  @SerializedName(SERIALIZED_NAME_CERTIFICATION_NUMBER)
  private String certificationNumber;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_CREATE_USER_ID = "createUserId";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_ID)
  private Integer createUserId;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_EXPIRE_DATE = "expireDate";
  @SerializedName(SERIALIZED_NAME_EXPIRE_DATE)
  private LocalDate expireDate;

  public static final String SERIALIZED_NAME_ISSUE_DATE = "issueDate";
  @SerializedName(SERIALIZED_NAME_ISSUE_DATE)
  private LocalDate issueDate;

  public static final String SERIALIZED_NAME_ISSUE_STATE = "issueState";
  @SerializedName(SERIALIZED_NAME_ISSUE_STATE)
  private String issueState;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_VALID_STATE = "validState";
  @SerializedName(SERIALIZED_NAME_VALID_STATE)
  private String validState;

  public CertificationModel() {
  }

  public CertificationModel certificationNumber(String certificationNumber) {
    
    
    
    
    this.certificationNumber = certificationNumber;
    return this;
  }

   /**
   * Get certificationNumber
   * @return certificationNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCertificationNumber() {
    return certificationNumber;
  }


  public void setCertificationNumber(String certificationNumber) {
    
    
    
    this.certificationNumber = certificationNumber;
  }


  public CertificationModel authority(String authority) {
    
    
    
    
    this.authority = authority;
    return this;
  }

   /**
   * Get authority
   * @return authority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthority() {
    return authority;
  }


  public void setAuthority(String authority) {
    
    
    
    this.authority = authority;
  }


  public CertificationModel candidateId(Integer candidateId) {
    
    
    
    
    this.candidateId = candidateId;
    return this;
  }

   /**
   * Get candidateId
   * @return candidateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCandidateId() {
    return candidateId;
  }


  public void setCandidateId(Integer candidateId) {
    
    
    
    this.candidateId = candidateId;
  }


  public CertificationModel certificationId(Long certificationId) {
    
    
    
    
    this.certificationId = certificationId;
    return this;
  }

   /**
   * Get certificationId
   * @return certificationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getCertificationId() {
    return certificationId;
  }


  public void setCertificationId(Long certificationId) {
    
    
    
    this.certificationId = certificationId;
  }


  public CertificationModel certificationNumber(String certificationNumber) {
    
    
    
    
    this.certificationNumber = certificationNumber;
    return this;
  }

   /**
   * Get certificationNumber
   * @return certificationNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCertificationNumber() {
    return certificationNumber;
  }


  public void setCertificationNumber(String certificationNumber) {
    
    
    
    this.certificationNumber = certificationNumber;
  }


  public CertificationModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public CertificationModel comments(String comments) {
    
    
    
    
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComments() {
    return comments;
  }


  public void setComments(String comments) {
    
    
    
    this.comments = comments;
  }


  public CertificationModel createUserId(Integer createUserId) {
    
    
    
    
    this.createUserId = createUserId;
    return this;
  }

   /**
   * Get createUserId
   * @return createUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateUserId() {
    return createUserId;
  }


  public void setCreateUserId(Integer createUserId) {
    
    
    
    this.createUserId = createUserId;
  }


  public CertificationModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public CertificationModel expireDate(LocalDate expireDate) {
    
    
    
    
    this.expireDate = expireDate;
    return this;
  }

   /**
   * Get expireDate
   * @return expireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getExpireDate() {
    return expireDate;
  }


  public void setExpireDate(LocalDate expireDate) {
    
    
    
    this.expireDate = expireDate;
  }


  public CertificationModel issueDate(LocalDate issueDate) {
    
    
    
    
    this.issueDate = issueDate;
    return this;
  }

   /**
   * Get issueDate
   * @return issueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getIssueDate() {
    return issueDate;
  }


  public void setIssueDate(LocalDate issueDate) {
    
    
    
    this.issueDate = issueDate;
  }


  public CertificationModel issueState(String issueState) {
    
    
    
    
    this.issueState = issueState;
    return this;
  }

   /**
   * Get issueState
   * @return issueState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIssueState() {
    return issueState;
  }


  public void setIssueState(String issueState) {
    
    
    
    this.issueState = issueState;
  }


  public CertificationModel type(String type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    
    
    
    this.type = type;
  }


  public CertificationModel userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public CertificationModel validState(String validState) {
    
    
    
    
    this.validState = validState;
    return this;
  }

   /**
   * Get validState
   * @return validState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getValidState() {
    return validState;
  }


  public void setValidState(String validState) {
    
    
    
    this.validState = validState;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CertificationModel instance itself
   */
  public CertificationModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificationModel certificationModel = (CertificationModel) o;
    return Objects.equals(this.certificationNumber, certificationModel.certificationNumber) &&
        Objects.equals(this.authority, certificationModel.authority) &&
        Objects.equals(this.candidateId, certificationModel.candidateId) &&
        Objects.equals(this.certificationId, certificationModel.certificationId) &&
        Objects.equals(this.certificationNumber, certificationModel.certificationNumber) &&
        Objects.equals(this.cid, certificationModel.cid) &&
        Objects.equals(this.comments, certificationModel.comments) &&
        Objects.equals(this.createUserId, certificationModel.createUserId) &&
        Objects.equals(this.createts, certificationModel.createts) &&
        Objects.equals(this.expireDate, certificationModel.expireDate) &&
        Objects.equals(this.issueDate, certificationModel.issueDate) &&
        Objects.equals(this.issueState, certificationModel.issueState) &&
        Objects.equals(this.type, certificationModel.type) &&
        Objects.equals(this.userId, certificationModel.userId) &&
        Objects.equals(this.validState, certificationModel.validState)&&
        Objects.equals(this.additionalProperties, certificationModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificationNumber, authority, candidateId, certificationId, certificationNumber, cid, comments, createUserId, createts, expireDate, issueDate, issueState, type, userId, validState, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificationModel {\n");
    sb.append("    certificationNumber: ").append(toIndentedString(certificationNumber)).append("\n");
    sb.append("    authority: ").append(toIndentedString(authority)).append("\n");
    sb.append("    candidateId: ").append(toIndentedString(candidateId)).append("\n");
    sb.append("    certificationId: ").append(toIndentedString(certificationId)).append("\n");
    sb.append("    certificationNumber: ").append(toIndentedString(certificationNumber)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    createUserId: ").append(toIndentedString(createUserId)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    expireDate: ").append(toIndentedString(expireDate)).append("\n");
    sb.append("    issueDate: ").append(toIndentedString(issueDate)).append("\n");
    sb.append("    issueState: ").append(toIndentedString(issueState)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    validState: ").append(toIndentedString(validState)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CertificationNumber");
    openapiFields.add("authority");
    openapiFields.add("candidateId");
    openapiFields.add("certificationId");
    openapiFields.add("certificationNumber");
    openapiFields.add("cid");
    openapiFields.add("comments");
    openapiFields.add("createUserId");
    openapiFields.add("createts");
    openapiFields.add("expireDate");
    openapiFields.add("issueDate");
    openapiFields.add("issueState");
    openapiFields.add("type");
    openapiFields.add("userId");
    openapiFields.add("validState");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CertificationModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CertificationModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CertificationModel is not found in the empty JSON string", CertificationModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("CertificationNumber") != null && !jsonObj.get("CertificationNumber").isJsonNull()) && !jsonObj.get("CertificationNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CertificationNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CertificationNumber").toString()));
      }
      if ((jsonObj.get("authority") != null && !jsonObj.get("authority").isJsonNull()) && !jsonObj.get("authority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authority").toString()));
      }
      if ((jsonObj.get("certificationNumber") != null && !jsonObj.get("certificationNumber").isJsonNull()) && !jsonObj.get("certificationNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificationNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificationNumber").toString()));
      }
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      if ((jsonObj.get("issueState") != null && !jsonObj.get("issueState").isJsonNull()) && !jsonObj.get("issueState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issueState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issueState").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("validState") != null && !jsonObj.get("validState").isJsonNull()) && !jsonObj.get("validState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `validState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("validState").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CertificationModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CertificationModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CertificationModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CertificationModel.class));

       return (TypeAdapter<T>) new TypeAdapter<CertificationModel>() {
           @Override
           public void write(JsonWriter out, CertificationModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CertificationModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CertificationModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CertificationModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CertificationModel
  * @throws IOException if the JSON string is invalid with respect to CertificationModel
  */
  public static CertificationModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CertificationModel.class);
  }

 /**
  * Convert an instance of CertificationModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

