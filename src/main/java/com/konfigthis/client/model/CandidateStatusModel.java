/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CandidateStatusModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CandidateStatusModel {
  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_COLOR_CODE = "colorCode";
  @SerializedName(SERIALIZED_NAME_COLOR_CODE)
  private String colorCode;

  public static final String SERIALIZED_NAME_INTERNAL_CODE = "internalCode";
  @SerializedName(SERIALIZED_NAME_INTERNAL_CODE)
  private String internalCode;

  public static final String SERIALIZED_NAME_NO_OF_CANDIDATES = "noOfCandidates";
  @SerializedName(SERIALIZED_NAME_NO_OF_CANDIDATES)
  private String noOfCandidates;

  public static final String SERIALIZED_NAME_SEQUENCE = "sequence";
  @SerializedName(SERIALIZED_NAME_SEQUENCE)
  private Integer sequence;

  public static final String SERIALIZED_NAME_SHARE_STATUS = "shareStatus";
  @SerializedName(SERIALIZED_NAME_SHARE_STATUS)
  private String shareStatus;

  public static final String SERIALIZED_NAME_STATUS_ID = "statusId";
  @SerializedName(SERIALIZED_NAME_STATUS_ID)
  private Integer statusId;

  public static final String SERIALIZED_NAME_STATUS_VALUE = "statusValue";
  @SerializedName(SERIALIZED_NAME_STATUS_VALUE)
  private String statusValue;

  public static final String SERIALIZED_NAME_TOTAL_CANDIDATES = "totalCandidates";
  @SerializedName(SERIALIZED_NAME_TOTAL_CANDIDATES)
  private String totalCandidates;

  public CandidateStatusModel() {
  }

  public CandidateStatusModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public CandidateStatusModel colorCode(String colorCode) {
    
    
    
    
    this.colorCode = colorCode;
    return this;
  }

   /**
   * Get colorCode
   * @return colorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getColorCode() {
    return colorCode;
  }


  public void setColorCode(String colorCode) {
    
    
    
    this.colorCode = colorCode;
  }


  public CandidateStatusModel internalCode(String internalCode) {
    
    
    
    
    this.internalCode = internalCode;
    return this;
  }

   /**
   * Get internalCode
   * @return internalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInternalCode() {
    return internalCode;
  }


  public void setInternalCode(String internalCode) {
    
    
    
    this.internalCode = internalCode;
  }


  public CandidateStatusModel noOfCandidates(String noOfCandidates) {
    
    
    
    
    this.noOfCandidates = noOfCandidates;
    return this;
  }

   /**
   * Get noOfCandidates
   * @return noOfCandidates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNoOfCandidates() {
    return noOfCandidates;
  }


  public void setNoOfCandidates(String noOfCandidates) {
    
    
    
    this.noOfCandidates = noOfCandidates;
  }


  public CandidateStatusModel sequence(Integer sequence) {
    
    
    
    
    this.sequence = sequence;
    return this;
  }

   /**
   * Get sequence
   * @return sequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSequence() {
    return sequence;
  }


  public void setSequence(Integer sequence) {
    
    
    
    this.sequence = sequence;
  }


  public CandidateStatusModel shareStatus(String shareStatus) {
    
    
    
    
    this.shareStatus = shareStatus;
    return this;
  }

   /**
   * Get shareStatus
   * @return shareStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShareStatus() {
    return shareStatus;
  }


  public void setShareStatus(String shareStatus) {
    
    
    
    this.shareStatus = shareStatus;
  }


  public CandidateStatusModel statusId(Integer statusId) {
    
    
    
    
    this.statusId = statusId;
    return this;
  }

   /**
   * Get statusId
   * @return statusId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatusId() {
    return statusId;
  }


  public void setStatusId(Integer statusId) {
    
    
    
    this.statusId = statusId;
  }


  public CandidateStatusModel statusValue(String statusValue) {
    
    
    
    
    this.statusValue = statusValue;
    return this;
  }

   /**
   * Get statusValue
   * @return statusValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatusValue() {
    return statusValue;
  }


  public void setStatusValue(String statusValue) {
    
    
    
    this.statusValue = statusValue;
  }


  public CandidateStatusModel totalCandidates(String totalCandidates) {
    
    
    
    
    this.totalCandidates = totalCandidates;
    return this;
  }

   /**
   * Get totalCandidates
   * @return totalCandidates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTotalCandidates() {
    return totalCandidates;
  }


  public void setTotalCandidates(String totalCandidates) {
    
    
    
    this.totalCandidates = totalCandidates;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CandidateStatusModel instance itself
   */
  public CandidateStatusModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CandidateStatusModel candidateStatusModel = (CandidateStatusModel) o;
    return Objects.equals(this.cid, candidateStatusModel.cid) &&
        Objects.equals(this.colorCode, candidateStatusModel.colorCode) &&
        Objects.equals(this.internalCode, candidateStatusModel.internalCode) &&
        Objects.equals(this.noOfCandidates, candidateStatusModel.noOfCandidates) &&
        Objects.equals(this.sequence, candidateStatusModel.sequence) &&
        Objects.equals(this.shareStatus, candidateStatusModel.shareStatus) &&
        Objects.equals(this.statusId, candidateStatusModel.statusId) &&
        Objects.equals(this.statusValue, candidateStatusModel.statusValue) &&
        Objects.equals(this.totalCandidates, candidateStatusModel.totalCandidates)&&
        Objects.equals(this.additionalProperties, candidateStatusModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cid, colorCode, internalCode, noOfCandidates, sequence, shareStatus, statusId, statusValue, totalCandidates, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CandidateStatusModel {\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    colorCode: ").append(toIndentedString(colorCode)).append("\n");
    sb.append("    internalCode: ").append(toIndentedString(internalCode)).append("\n");
    sb.append("    noOfCandidates: ").append(toIndentedString(noOfCandidates)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    shareStatus: ").append(toIndentedString(shareStatus)).append("\n");
    sb.append("    statusId: ").append(toIndentedString(statusId)).append("\n");
    sb.append("    statusValue: ").append(toIndentedString(statusValue)).append("\n");
    sb.append("    totalCandidates: ").append(toIndentedString(totalCandidates)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cid");
    openapiFields.add("colorCode");
    openapiFields.add("internalCode");
    openapiFields.add("noOfCandidates");
    openapiFields.add("sequence");
    openapiFields.add("shareStatus");
    openapiFields.add("statusId");
    openapiFields.add("statusValue");
    openapiFields.add("totalCandidates");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CandidateStatusModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CandidateStatusModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CandidateStatusModel is not found in the empty JSON string", CandidateStatusModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("colorCode") != null && !jsonObj.get("colorCode").isJsonNull()) && !jsonObj.get("colorCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `colorCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("colorCode").toString()));
      }
      if ((jsonObj.get("internalCode") != null && !jsonObj.get("internalCode").isJsonNull()) && !jsonObj.get("internalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internalCode").toString()));
      }
      if ((jsonObj.get("noOfCandidates") != null && !jsonObj.get("noOfCandidates").isJsonNull()) && !jsonObj.get("noOfCandidates").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `noOfCandidates` to be a primitive type in the JSON string but got `%s`", jsonObj.get("noOfCandidates").toString()));
      }
      if ((jsonObj.get("shareStatus") != null && !jsonObj.get("shareStatus").isJsonNull()) && !jsonObj.get("shareStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shareStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shareStatus").toString()));
      }
      if ((jsonObj.get("statusValue") != null && !jsonObj.get("statusValue").isJsonNull()) && !jsonObj.get("statusValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusValue").toString()));
      }
      if ((jsonObj.get("totalCandidates") != null && !jsonObj.get("totalCandidates").isJsonNull()) && !jsonObj.get("totalCandidates").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalCandidates` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalCandidates").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CandidateStatusModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CandidateStatusModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CandidateStatusModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CandidateStatusModel.class));

       return (TypeAdapter<T>) new TypeAdapter<CandidateStatusModel>() {
           @Override
           public void write(JsonWriter out, CandidateStatusModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CandidateStatusModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CandidateStatusModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CandidateStatusModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CandidateStatusModel
  * @throws IOException if the JSON string is invalid with respect to CandidateStatusModel
  */
  public static CandidateStatusModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CandidateStatusModel.class);
  }

 /**
  * Convert an instance of CandidateStatusModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

