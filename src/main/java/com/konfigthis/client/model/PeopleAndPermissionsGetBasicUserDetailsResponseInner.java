/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PeopleAndPermissionsGetBasicUserDetailsResponseInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PeopleAndPermissionsGetBasicUserDetailsResponseInner {
  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SHORT_NAME = "shortName";
  @SerializedName(SERIALIZED_NAME_SHORT_NAME)
  private String shortName;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_USER_START_DATE = "userStartDate";
  @SerializedName(SERIALIZED_NAME_USER_START_DATE)
  private String userStartDate;

  public static final String SERIALIZED_NAME_CELL_PHONE = "cellPhone";
  @SerializedName(SERIALIZED_NAME_CELL_PHONE)
  private String cellPhone;

  public static final String SERIALIZED_NAME_ALLOCATION = "allocation";
  @SerializedName(SERIALIZED_NAME_ALLOCATION)
  private String allocation;

  public static final String SERIALIZED_NAME_USER_DATE_FORMAT = "userDateFormat";
  @SerializedName(SERIALIZED_NAME_USER_DATE_FORMAT)
  private String userDateFormat;

  public static final String SERIALIZED_NAME_STAR = "star";
  @SerializedName(SERIALIZED_NAME_STAR)
  private String star;

  public static final String SERIALIZED_NAME_CREATEUSERID = "createuserid";
  @SerializedName(SERIALIZED_NAME_CREATEUSERID)
  private String createuserid;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private String cid;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_HAS_ACCESS = "hasAccess";
  @SerializedName(SERIALIZED_NAME_HAS_ACCESS)
  private String hasAccess;

  public PeopleAndPermissionsGetBasicUserDetailsResponseInner() {
  }

  public PeopleAndPermissionsGetBasicUserDetailsResponseInner userId(String userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    
    
    
    this.userId = userId;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner phone(String phone) {
    
    
    
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    
    
    
    this.phone = phone;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner shortName(String shortName) {
    
    
    
    
    this.shortName = shortName;
    return this;
  }

   /**
   * Get shortName
   * @return shortName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getShortName() {
    return shortName;
  }


  public void setShortName(String shortName) {
    
    
    
    this.shortName = shortName;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner timezone(String timezone) {
    
    
    
    
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getTimezone() {
    return timezone;
  }


  public void setTimezone(String timezone) {
    
    
    
    this.timezone = timezone;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner userStartDate(String userStartDate) {
    
    
    
    
    this.userStartDate = userStartDate;
    return this;
  }

   /**
   * Get userStartDate
   * @return userStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "date", value = "")

  public String getUserStartDate() {
    return userStartDate;
  }


  public void setUserStartDate(String userStartDate) {
    
    
    
    this.userStartDate = userStartDate;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner cellPhone(String cellPhone) {
    
    
    
    
    this.cellPhone = cellPhone;
    return this;
  }

   /**
   * Get cellPhone
   * @return cellPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getCellPhone() {
    return cellPhone;
  }


  public void setCellPhone(String cellPhone) {
    
    
    
    this.cellPhone = cellPhone;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner allocation(String allocation) {
    
    
    
    
    this.allocation = allocation;
    return this;
  }

   /**
   * Get allocation
   * @return allocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getAllocation() {
    return allocation;
  }


  public void setAllocation(String allocation) {
    
    
    
    this.allocation = allocation;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner userDateFormat(String userDateFormat) {
    
    
    
    
    this.userDateFormat = userDateFormat;
    return this;
  }

   /**
   * Get userDateFormat
   * @return userDateFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "date", value = "")

  public String getUserDateFormat() {
    return userDateFormat;
  }


  public void setUserDateFormat(String userDateFormat) {
    
    
    
    this.userDateFormat = userDateFormat;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner star(String star) {
    
    
    
    
    this.star = star;
    return this;
  }

   /**
   * Get star
   * @return star
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getStar() {
    return star;
  }


  public void setStar(String star) {
    
    
    
    this.star = star;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner createuserid(String createuserid) {
    
    
    
    
    this.createuserid = createuserid;
    return this;
  }

   /**
   * Get createuserid
   * @return createuserid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getCreateuserid() {
    return createuserid;
  }


  public void setCreateuserid(String createuserid) {
    
    
    
    this.createuserid = createuserid;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner cid(String cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getCid() {
    return cid;
  }


  public void setCid(String cid) {
    
    
    
    this.cid = cid;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner guid(String guid) {
    
    
    
    
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    
    
    
    this.guid = guid;
  }


  public PeopleAndPermissionsGetBasicUserDetailsResponseInner hasAccess(String hasAccess) {
    
    
    
    
    this.hasAccess = hasAccess;
    return this;
  }

   /**
   * Get hasAccess
   * @return hasAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getHasAccess() {
    return hasAccess;
  }


  public void setHasAccess(String hasAccess) {
    
    
    
    this.hasAccess = hasAccess;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PeopleAndPermissionsGetBasicUserDetailsResponseInner instance itself
   */
  public PeopleAndPermissionsGetBasicUserDetailsResponseInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeopleAndPermissionsGetBasicUserDetailsResponseInner peopleAndPermissionsGetBasicUserDetailsResponseInner = (PeopleAndPermissionsGetBasicUserDetailsResponseInner) o;
    return Objects.equals(this.userId, peopleAndPermissionsGetBasicUserDetailsResponseInner.userId) &&
        Objects.equals(this.firstName, peopleAndPermissionsGetBasicUserDetailsResponseInner.firstName) &&
        Objects.equals(this.lastName, peopleAndPermissionsGetBasicUserDetailsResponseInner.lastName) &&
        Objects.equals(this.name, peopleAndPermissionsGetBasicUserDetailsResponseInner.name) &&
        Objects.equals(this.phone, peopleAndPermissionsGetBasicUserDetailsResponseInner.phone) &&
        Objects.equals(this.email, peopleAndPermissionsGetBasicUserDetailsResponseInner.email) &&
        Objects.equals(this.status, peopleAndPermissionsGetBasicUserDetailsResponseInner.status) &&
        Objects.equals(this.shortName, peopleAndPermissionsGetBasicUserDetailsResponseInner.shortName) &&
        Objects.equals(this.timezone, peopleAndPermissionsGetBasicUserDetailsResponseInner.timezone) &&
        Objects.equals(this.userStartDate, peopleAndPermissionsGetBasicUserDetailsResponseInner.userStartDate) &&
        Objects.equals(this.cellPhone, peopleAndPermissionsGetBasicUserDetailsResponseInner.cellPhone) &&
        Objects.equals(this.allocation, peopleAndPermissionsGetBasicUserDetailsResponseInner.allocation) &&
        Objects.equals(this.userDateFormat, peopleAndPermissionsGetBasicUserDetailsResponseInner.userDateFormat) &&
        Objects.equals(this.star, peopleAndPermissionsGetBasicUserDetailsResponseInner.star) &&
        Objects.equals(this.createuserid, peopleAndPermissionsGetBasicUserDetailsResponseInner.createuserid) &&
        Objects.equals(this.cid, peopleAndPermissionsGetBasicUserDetailsResponseInner.cid) &&
        Objects.equals(this.guid, peopleAndPermissionsGetBasicUserDetailsResponseInner.guid) &&
        Objects.equals(this.hasAccess, peopleAndPermissionsGetBasicUserDetailsResponseInner.hasAccess)&&
        Objects.equals(this.additionalProperties, peopleAndPermissionsGetBasicUserDetailsResponseInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, firstName, lastName, name, phone, email, status, shortName, timezone, userStartDate, cellPhone, allocation, userDateFormat, star, createuserid, cid, guid, hasAccess, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeopleAndPermissionsGetBasicUserDetailsResponseInner {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    userStartDate: ").append(toIndentedString(userStartDate)).append("\n");
    sb.append("    cellPhone: ").append(toIndentedString(cellPhone)).append("\n");
    sb.append("    allocation: ").append(toIndentedString(allocation)).append("\n");
    sb.append("    userDateFormat: ").append(toIndentedString(userDateFormat)).append("\n");
    sb.append("    star: ").append(toIndentedString(star)).append("\n");
    sb.append("    createuserid: ").append(toIndentedString(createuserid)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    hasAccess: ").append(toIndentedString(hasAccess)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("userId");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("name");
    openapiFields.add("phone");
    openapiFields.add("email");
    openapiFields.add("status");
    openapiFields.add("shortName");
    openapiFields.add("timezone");
    openapiFields.add("userStartDate");
    openapiFields.add("cellPhone");
    openapiFields.add("allocation");
    openapiFields.add("userDateFormat");
    openapiFields.add("star");
    openapiFields.add("createuserid");
    openapiFields.add("cid");
    openapiFields.add("guid");
    openapiFields.add("hasAccess");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PeopleAndPermissionsGetBasicUserDetailsResponseInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PeopleAndPermissionsGetBasicUserDetailsResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PeopleAndPermissionsGetBasicUserDetailsResponseInner is not found in the empty JSON string", PeopleAndPermissionsGetBasicUserDetailsResponseInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("shortName") != null && !jsonObj.get("shortName").isJsonNull()) && !jsonObj.get("shortName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shortName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shortName").toString()));
      }
      if ((jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) && !jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
      if ((jsonObj.get("userStartDate") != null && !jsonObj.get("userStartDate").isJsonNull()) && !jsonObj.get("userStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userStartDate").toString()));
      }
      if ((jsonObj.get("cellPhone") != null && !jsonObj.get("cellPhone").isJsonNull()) && !jsonObj.get("cellPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cellPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cellPhone").toString()));
      }
      if ((jsonObj.get("allocation") != null && !jsonObj.get("allocation").isJsonNull()) && !jsonObj.get("allocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `allocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("allocation").toString()));
      }
      if ((jsonObj.get("userDateFormat") != null && !jsonObj.get("userDateFormat").isJsonNull()) && !jsonObj.get("userDateFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDateFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDateFormat").toString()));
      }
      if ((jsonObj.get("star") != null && !jsonObj.get("star").isJsonNull()) && !jsonObj.get("star").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `star` to be a primitive type in the JSON string but got `%s`", jsonObj.get("star").toString()));
      }
      if ((jsonObj.get("createuserid") != null && !jsonObj.get("createuserid").isJsonNull()) && !jsonObj.get("createuserid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createuserid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createuserid").toString()));
      }
      if ((jsonObj.get("cid") != null && !jsonObj.get("cid").isJsonNull()) && !jsonObj.get("cid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cid").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("hasAccess") != null && !jsonObj.get("hasAccess").isJsonNull()) && !jsonObj.get("hasAccess").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hasAccess` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hasAccess").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PeopleAndPermissionsGetBasicUserDetailsResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PeopleAndPermissionsGetBasicUserDetailsResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PeopleAndPermissionsGetBasicUserDetailsResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PeopleAndPermissionsGetBasicUserDetailsResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<PeopleAndPermissionsGetBasicUserDetailsResponseInner>() {
           @Override
           public void write(JsonWriter out, PeopleAndPermissionsGetBasicUserDetailsResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PeopleAndPermissionsGetBasicUserDetailsResponseInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PeopleAndPermissionsGetBasicUserDetailsResponseInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PeopleAndPermissionsGetBasicUserDetailsResponseInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PeopleAndPermissionsGetBasicUserDetailsResponseInner
  * @throws IOException if the JSON string is invalid with respect to PeopleAndPermissionsGetBasicUserDetailsResponseInner
  */
  public static PeopleAndPermissionsGetBasicUserDetailsResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PeopleAndPermissionsGetBasicUserDetailsResponseInner.class);
  }

 /**
  * Convert an instance of PeopleAndPermissionsGetBasicUserDetailsResponseInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

