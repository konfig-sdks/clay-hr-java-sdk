/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AppraisalModel;
import com.konfigthis.client.model.AttachmentModel;
import com.konfigthis.client.model.CandidateModel;
import com.konfigthis.client.model.DynamicFormAssignmentModel;
import com.konfigthis.client.model.UserGroupModel;
import com.konfigthis.client.model.UserModel;
import com.konfigthis.client.model.UserTrainingModel;
import com.konfigthis.client.model.UserWorkflowModel;
import com.konfigthis.client.model.WorkflowParameterAssignmentModel;
import com.konfigthis.client.model.WorkflowStepModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TaskModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TaskModel {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_APPRAISAL_ID = "appraisalId";
  @SerializedName(SERIALIZED_NAME_APPRAISAL_ID)
  private Integer appraisalId;

  public static final String SERIALIZED_NAME_ASSGN_CAND_MODEL = "assgnCandModel";
  @SerializedName(SERIALIZED_NAME_ASSGN_CAND_MODEL)
  private CandidateModel assgnCandModel;

  public static final String SERIALIZED_NAME_ASSGN_USER_MODEL = "assgnUserModel";
  @SerializedName(SERIALIZED_NAME_ASSGN_USER_MODEL)
  private UserModel assgnUserModel;

  public static final String SERIALIZED_NAME_ASSIGNED_USER_ID = "assignedUserId";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_USER_ID)
  private Integer assignedUserId;

  public static final String SERIALIZED_NAME_CI = "ci";
  @SerializedName(SERIALIZED_NAME_CI)
  private Boolean ci;

  public static final String SERIALIZED_NAME_CREATE_USER_ID = "createUserId";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_ID)
  private Integer createUserId;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private LocalDate createts;

  public static final String SERIALIZED_NAME_DUE_DATE = "dueDate";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private LocalDate dueDate;

  public static final String SERIALIZED_NAME_LAST_EDIT = "lastEdit";
  @SerializedName(SERIALIZED_NAME_LAST_EDIT)
  private String lastEdit;

  public static final String SERIALIZED_NAME_LAUNCHTS = "launchts";
  @SerializedName(SERIALIZED_NAME_LAUNCHTS)
  private Timestamp launchts;

  public static final String SERIALIZED_NAME_PHASENAME = "phasename";
  @SerializedName(SERIALIZED_NAME_PHASENAME)
  private String phasename;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private Integer projectId;

  public static final String SERIALIZED_NAME_RECRUIT_ID = "recruitId";
  @SerializedName(SERIALIZED_NAME_RECRUIT_ID)
  private Integer recruitId;

  public static final String SERIALIZED_NAME_RELATED_DYNAMIC_FORM_ASSIGNMENT_MODEL = "relatedDynamicFormAssignmentModel";
  @SerializedName(SERIALIZED_NAME_RELATED_DYNAMIC_FORM_ASSIGNMENT_MODEL)
  private DynamicFormAssignmentModel relatedDynamicFormAssignmentModel;

  public static final String SERIALIZED_NAME_RELEVENT_APPRAISAL_MODEL = "releventAppraisalModel";
  @SerializedName(SERIALIZED_NAME_RELEVENT_APPRAISAL_MODEL)
  private AppraisalModel releventAppraisalModel;

  public static final String SERIALIZED_NAME_RELEVENT_ATTACHMENT_MODEL = "releventAttachmentModel";
  @SerializedName(SERIALIZED_NAME_RELEVENT_ATTACHMENT_MODEL)
  private AttachmentModel releventAttachmentModel;

  public static final String SERIALIZED_NAME_RELEVENT_USER_TRAINING_MODEL = "releventUserTrainingModel";
  @SerializedName(SERIALIZED_NAME_RELEVENT_USER_TRAINING_MODEL)
  private UserTrainingModel releventUserTrainingModel;

  public static final String SERIALIZED_NAME_STATUS_CODE = "statusCode";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  private String statusCode;

  public static final String SERIALIZED_NAME_SYSTEM_TASK = "systemTask";
  @SerializedName(SERIALIZED_NAME_SYSTEM_TASK)
  private Integer systemTask;

  public static final String SERIALIZED_NAME_TASK_ID = "taskId";
  @SerializedName(SERIALIZED_NAME_TASK_ID)
  private Integer taskId;

  public static final String SERIALIZED_NAME_TASK_U_I_D = "taskUID";
  @SerializedName(SERIALIZED_NAME_TASK_U_I_D)
  private Integer taskUID;

  public static final String SERIALIZED_NAME_TRANSITION_NAME = "transitionName";
  @SerializedName(SERIALIZED_NAME_TRANSITION_NAME)
  private String transitionName;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_USER_GROUP_MODEL = "userGroupModel";
  @SerializedName(SERIALIZED_NAME_USER_GROUP_MODEL)
  private UserGroupModel userGroupModel;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_USER_MODEL = "userModel";
  @SerializedName(SERIALIZED_NAME_USER_MODEL)
  private UserModel userModel;

  public static final String SERIALIZED_NAME_USER_WORKFLOW_MODEL = "userWorkflowModel";
  @SerializedName(SERIALIZED_NAME_USER_WORKFLOW_MODEL)
  private UserWorkflowModel userWorkflowModel;

  public static final String SERIALIZED_NAME_WORKFLOW_PARAMETER_ASSIGNMENT_MODEL = "workflowParameterAssignmentModel";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_PARAMETER_ASSIGNMENT_MODEL)
  private WorkflowParameterAssignmentModel workflowParameterAssignmentModel;

  public static final String SERIALIZED_NAME_WORKFLOW_STEP_ID = "workflowStepId";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_STEP_ID)
  private Long workflowStepId;

  public static final String SERIALIZED_NAME_WORKFLOW_STEP_MODEL = "workflowStepModel";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_STEP_MODEL)
  private WorkflowStepModel workflowStepModel;

  public TaskModel() {
  }

  public TaskModel title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public TaskModel description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public TaskModel appraisalId(Integer appraisalId) {
    
    
    
    
    this.appraisalId = appraisalId;
    return this;
  }

   /**
   * Get appraisalId
   * @return appraisalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAppraisalId() {
    return appraisalId;
  }


  public void setAppraisalId(Integer appraisalId) {
    
    
    
    this.appraisalId = appraisalId;
  }


  public TaskModel assgnCandModel(CandidateModel assgnCandModel) {
    
    
    
    
    this.assgnCandModel = assgnCandModel;
    return this;
  }

   /**
   * Get assgnCandModel
   * @return assgnCandModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CandidateModel getAssgnCandModel() {
    return assgnCandModel;
  }


  public void setAssgnCandModel(CandidateModel assgnCandModel) {
    
    
    
    this.assgnCandModel = assgnCandModel;
  }


  public TaskModel assgnUserModel(UserModel assgnUserModel) {
    
    
    
    
    this.assgnUserModel = assgnUserModel;
    return this;
  }

   /**
   * Get assgnUserModel
   * @return assgnUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getAssgnUserModel() {
    return assgnUserModel;
  }


  public void setAssgnUserModel(UserModel assgnUserModel) {
    
    
    
    this.assgnUserModel = assgnUserModel;
  }


  public TaskModel assignedUserId(Integer assignedUserId) {
    
    
    
    
    this.assignedUserId = assignedUserId;
    return this;
  }

   /**
   * Get assignedUserId
   * @return assignedUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAssignedUserId() {
    return assignedUserId;
  }


  public void setAssignedUserId(Integer assignedUserId) {
    
    
    
    this.assignedUserId = assignedUserId;
  }


  public TaskModel ci(Boolean ci) {
    
    
    
    
    this.ci = ci;
    return this;
  }

   /**
   * Get ci
   * @return ci
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCi() {
    return ci;
  }


  public void setCi(Boolean ci) {
    
    
    
    this.ci = ci;
  }


  public TaskModel createUserId(Integer createUserId) {
    
    
    
    
    this.createUserId = createUserId;
    return this;
  }

   /**
   * Get createUserId
   * @return createUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateUserId() {
    return createUserId;
  }


  public void setCreateUserId(Integer createUserId) {
    
    
    
    this.createUserId = createUserId;
  }


  public TaskModel createts(LocalDate createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getCreatets() {
    return createts;
  }


  public void setCreatets(LocalDate createts) {
    
    
    
    this.createts = createts;
  }


  public TaskModel dueDate(LocalDate dueDate) {
    
    
    
    
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getDueDate() {
    return dueDate;
  }


  public void setDueDate(LocalDate dueDate) {
    
    
    
    this.dueDate = dueDate;
  }


  public TaskModel lastEdit(String lastEdit) {
    
    
    
    
    this.lastEdit = lastEdit;
    return this;
  }

   /**
   * Get lastEdit
   * @return lastEdit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastEdit() {
    return lastEdit;
  }


  public void setLastEdit(String lastEdit) {
    
    
    
    this.lastEdit = lastEdit;
  }


  public TaskModel launchts(Timestamp launchts) {
    
    
    
    
    this.launchts = launchts;
    return this;
  }

   /**
   * Get launchts
   * @return launchts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getLaunchts() {
    return launchts;
  }


  public void setLaunchts(Timestamp launchts) {
    
    
    
    this.launchts = launchts;
  }


  public TaskModel phasename(String phasename) {
    
    
    
    
    this.phasename = phasename;
    return this;
  }

   /**
   * Get phasename
   * @return phasename
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPhasename() {
    return phasename;
  }


  public void setPhasename(String phasename) {
    
    
    
    this.phasename = phasename;
  }


  public TaskModel projectId(Integer projectId) {
    
    
    
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProjectId() {
    return projectId;
  }


  public void setProjectId(Integer projectId) {
    
    
    
    this.projectId = projectId;
  }


  public TaskModel recruitId(Integer recruitId) {
    
    
    
    
    this.recruitId = recruitId;
    return this;
  }

   /**
   * Get recruitId
   * @return recruitId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRecruitId() {
    return recruitId;
  }


  public void setRecruitId(Integer recruitId) {
    
    
    
    this.recruitId = recruitId;
  }


  public TaskModel relatedDynamicFormAssignmentModel(DynamicFormAssignmentModel relatedDynamicFormAssignmentModel) {
    
    
    
    
    this.relatedDynamicFormAssignmentModel = relatedDynamicFormAssignmentModel;
    return this;
  }

   /**
   * Get relatedDynamicFormAssignmentModel
   * @return relatedDynamicFormAssignmentModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DynamicFormAssignmentModel getRelatedDynamicFormAssignmentModel() {
    return relatedDynamicFormAssignmentModel;
  }


  public void setRelatedDynamicFormAssignmentModel(DynamicFormAssignmentModel relatedDynamicFormAssignmentModel) {
    
    
    
    this.relatedDynamicFormAssignmentModel = relatedDynamicFormAssignmentModel;
  }


  public TaskModel releventAppraisalModel(AppraisalModel releventAppraisalModel) {
    
    
    
    
    this.releventAppraisalModel = releventAppraisalModel;
    return this;
  }

   /**
   * Get releventAppraisalModel
   * @return releventAppraisalModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AppraisalModel getReleventAppraisalModel() {
    return releventAppraisalModel;
  }


  public void setReleventAppraisalModel(AppraisalModel releventAppraisalModel) {
    
    
    
    this.releventAppraisalModel = releventAppraisalModel;
  }


  public TaskModel releventAttachmentModel(AttachmentModel releventAttachmentModel) {
    
    
    
    
    this.releventAttachmentModel = releventAttachmentModel;
    return this;
  }

   /**
   * Get releventAttachmentModel
   * @return releventAttachmentModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AttachmentModel getReleventAttachmentModel() {
    return releventAttachmentModel;
  }


  public void setReleventAttachmentModel(AttachmentModel releventAttachmentModel) {
    
    
    
    this.releventAttachmentModel = releventAttachmentModel;
  }


  public TaskModel releventUserTrainingModel(UserTrainingModel releventUserTrainingModel) {
    
    
    
    
    this.releventUserTrainingModel = releventUserTrainingModel;
    return this;
  }

   /**
   * Get releventUserTrainingModel
   * @return releventUserTrainingModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserTrainingModel getReleventUserTrainingModel() {
    return releventUserTrainingModel;
  }


  public void setReleventUserTrainingModel(UserTrainingModel releventUserTrainingModel) {
    
    
    
    this.releventUserTrainingModel = releventUserTrainingModel;
  }


  public TaskModel statusCode(String statusCode) {
    
    
    
    
    this.statusCode = statusCode;
    return this;
  }

   /**
   * Get statusCode
   * @return statusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatusCode() {
    return statusCode;
  }


  public void setStatusCode(String statusCode) {
    
    
    
    this.statusCode = statusCode;
  }


  public TaskModel systemTask(Integer systemTask) {
    
    
    
    
    this.systemTask = systemTask;
    return this;
  }

   /**
   * Get systemTask
   * @return systemTask
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSystemTask() {
    return systemTask;
  }


  public void setSystemTask(Integer systemTask) {
    
    
    
    this.systemTask = systemTask;
  }


  public TaskModel taskId(Integer taskId) {
    
    
    
    
    this.taskId = taskId;
    return this;
  }

   /**
   * Get taskId
   * @return taskId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTaskId() {
    return taskId;
  }


  public void setTaskId(Integer taskId) {
    
    
    
    this.taskId = taskId;
  }


  public TaskModel taskUID(Integer taskUID) {
    
    
    
    
    this.taskUID = taskUID;
    return this;
  }

   /**
   * Get taskUID
   * @return taskUID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTaskUID() {
    return taskUID;
  }


  public void setTaskUID(Integer taskUID) {
    
    
    
    this.taskUID = taskUID;
  }


  public TaskModel transitionName(String transitionName) {
    
    
    
    
    this.transitionName = transitionName;
    return this;
  }

   /**
   * Get transitionName
   * @return transitionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTransitionName() {
    return transitionName;
  }


  public void setTransitionName(String transitionName) {
    
    
    
    this.transitionName = transitionName;
  }


  public TaskModel type(String type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    
    
    
    this.type = type;
  }


  public TaskModel userGroupModel(UserGroupModel userGroupModel) {
    
    
    
    
    this.userGroupModel = userGroupModel;
    return this;
  }

   /**
   * Get userGroupModel
   * @return userGroupModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserGroupModel getUserGroupModel() {
    return userGroupModel;
  }


  public void setUserGroupModel(UserGroupModel userGroupModel) {
    
    
    
    this.userGroupModel = userGroupModel;
  }


  public TaskModel userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public TaskModel userModel(UserModel userModel) {
    
    
    
    
    this.userModel = userModel;
    return this;
  }

   /**
   * Get userModel
   * @return userModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getUserModel() {
    return userModel;
  }


  public void setUserModel(UserModel userModel) {
    
    
    
    this.userModel = userModel;
  }


  public TaskModel userWorkflowModel(UserWorkflowModel userWorkflowModel) {
    
    
    
    
    this.userWorkflowModel = userWorkflowModel;
    return this;
  }

   /**
   * Get userWorkflowModel
   * @return userWorkflowModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserWorkflowModel getUserWorkflowModel() {
    return userWorkflowModel;
  }


  public void setUserWorkflowModel(UserWorkflowModel userWorkflowModel) {
    
    
    
    this.userWorkflowModel = userWorkflowModel;
  }


  public TaskModel workflowParameterAssignmentModel(WorkflowParameterAssignmentModel workflowParameterAssignmentModel) {
    
    
    
    
    this.workflowParameterAssignmentModel = workflowParameterAssignmentModel;
    return this;
  }

   /**
   * Get workflowParameterAssignmentModel
   * @return workflowParameterAssignmentModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkflowParameterAssignmentModel getWorkflowParameterAssignmentModel() {
    return workflowParameterAssignmentModel;
  }


  public void setWorkflowParameterAssignmentModel(WorkflowParameterAssignmentModel workflowParameterAssignmentModel) {
    
    
    
    this.workflowParameterAssignmentModel = workflowParameterAssignmentModel;
  }


  public TaskModel workflowStepId(Long workflowStepId) {
    
    
    
    
    this.workflowStepId = workflowStepId;
    return this;
  }

   /**
   * Get workflowStepId
   * @return workflowStepId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getWorkflowStepId() {
    return workflowStepId;
  }


  public void setWorkflowStepId(Long workflowStepId) {
    
    
    
    this.workflowStepId = workflowStepId;
  }


  public TaskModel workflowStepModel(WorkflowStepModel workflowStepModel) {
    
    
    
    
    this.workflowStepModel = workflowStepModel;
    return this;
  }

   /**
   * Get workflowStepModel
   * @return workflowStepModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkflowStepModel getWorkflowStepModel() {
    return workflowStepModel;
  }


  public void setWorkflowStepModel(WorkflowStepModel workflowStepModel) {
    
    
    
    this.workflowStepModel = workflowStepModel;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TaskModel instance itself
   */
  public TaskModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskModel taskModel = (TaskModel) o;
    return Objects.equals(this.title, taskModel.title) &&
        Objects.equals(this.description, taskModel.description) &&
        Objects.equals(this.appraisalId, taskModel.appraisalId) &&
        Objects.equals(this.assgnCandModel, taskModel.assgnCandModel) &&
        Objects.equals(this.assgnUserModel, taskModel.assgnUserModel) &&
        Objects.equals(this.assignedUserId, taskModel.assignedUserId) &&
        Objects.equals(this.ci, taskModel.ci) &&
        Objects.equals(this.createUserId, taskModel.createUserId) &&
        Objects.equals(this.createts, taskModel.createts) &&
        Objects.equals(this.dueDate, taskModel.dueDate) &&
        Objects.equals(this.lastEdit, taskModel.lastEdit) &&
        Objects.equals(this.launchts, taskModel.launchts) &&
        Objects.equals(this.phasename, taskModel.phasename) &&
        Objects.equals(this.projectId, taskModel.projectId) &&
        Objects.equals(this.recruitId, taskModel.recruitId) &&
        Objects.equals(this.relatedDynamicFormAssignmentModel, taskModel.relatedDynamicFormAssignmentModel) &&
        Objects.equals(this.releventAppraisalModel, taskModel.releventAppraisalModel) &&
        Objects.equals(this.releventAttachmentModel, taskModel.releventAttachmentModel) &&
        Objects.equals(this.releventUserTrainingModel, taskModel.releventUserTrainingModel) &&
        Objects.equals(this.statusCode, taskModel.statusCode) &&
        Objects.equals(this.systemTask, taskModel.systemTask) &&
        Objects.equals(this.taskId, taskModel.taskId) &&
        Objects.equals(this.taskUID, taskModel.taskUID) &&
        Objects.equals(this.transitionName, taskModel.transitionName) &&
        Objects.equals(this.type, taskModel.type) &&
        Objects.equals(this.userGroupModel, taskModel.userGroupModel) &&
        Objects.equals(this.userId, taskModel.userId) &&
        Objects.equals(this.userModel, taskModel.userModel) &&
        Objects.equals(this.userWorkflowModel, taskModel.userWorkflowModel) &&
        Objects.equals(this.workflowParameterAssignmentModel, taskModel.workflowParameterAssignmentModel) &&
        Objects.equals(this.workflowStepId, taskModel.workflowStepId) &&
        Objects.equals(this.workflowStepModel, taskModel.workflowStepModel)&&
        Objects.equals(this.additionalProperties, taskModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, appraisalId, assgnCandModel, assgnUserModel, assignedUserId, ci, createUserId, createts, dueDate, lastEdit, launchts, phasename, projectId, recruitId, relatedDynamicFormAssignmentModel, releventAppraisalModel, releventAttachmentModel, releventUserTrainingModel, statusCode, systemTask, taskId, taskUID, transitionName, type, userGroupModel, userId, userModel, userWorkflowModel, workflowParameterAssignmentModel, workflowStepId, workflowStepModel, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskModel {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    appraisalId: ").append(toIndentedString(appraisalId)).append("\n");
    sb.append("    assgnCandModel: ").append(toIndentedString(assgnCandModel)).append("\n");
    sb.append("    assgnUserModel: ").append(toIndentedString(assgnUserModel)).append("\n");
    sb.append("    assignedUserId: ").append(toIndentedString(assignedUserId)).append("\n");
    sb.append("    ci: ").append(toIndentedString(ci)).append("\n");
    sb.append("    createUserId: ").append(toIndentedString(createUserId)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    lastEdit: ").append(toIndentedString(lastEdit)).append("\n");
    sb.append("    launchts: ").append(toIndentedString(launchts)).append("\n");
    sb.append("    phasename: ").append(toIndentedString(phasename)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    recruitId: ").append(toIndentedString(recruitId)).append("\n");
    sb.append("    relatedDynamicFormAssignmentModel: ").append(toIndentedString(relatedDynamicFormAssignmentModel)).append("\n");
    sb.append("    releventAppraisalModel: ").append(toIndentedString(releventAppraisalModel)).append("\n");
    sb.append("    releventAttachmentModel: ").append(toIndentedString(releventAttachmentModel)).append("\n");
    sb.append("    releventUserTrainingModel: ").append(toIndentedString(releventUserTrainingModel)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    systemTask: ").append(toIndentedString(systemTask)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskUID: ").append(toIndentedString(taskUID)).append("\n");
    sb.append("    transitionName: ").append(toIndentedString(transitionName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    userGroupModel: ").append(toIndentedString(userGroupModel)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userModel: ").append(toIndentedString(userModel)).append("\n");
    sb.append("    userWorkflowModel: ").append(toIndentedString(userWorkflowModel)).append("\n");
    sb.append("    workflowParameterAssignmentModel: ").append(toIndentedString(workflowParameterAssignmentModel)).append("\n");
    sb.append("    workflowStepId: ").append(toIndentedString(workflowStepId)).append("\n");
    sb.append("    workflowStepModel: ").append(toIndentedString(workflowStepModel)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("description");
    openapiFields.add("appraisalId");
    openapiFields.add("assgnCandModel");
    openapiFields.add("assgnUserModel");
    openapiFields.add("assignedUserId");
    openapiFields.add("ci");
    openapiFields.add("createUserId");
    openapiFields.add("createts");
    openapiFields.add("dueDate");
    openapiFields.add("lastEdit");
    openapiFields.add("launchts");
    openapiFields.add("phasename");
    openapiFields.add("projectId");
    openapiFields.add("recruitId");
    openapiFields.add("relatedDynamicFormAssignmentModel");
    openapiFields.add("releventAppraisalModel");
    openapiFields.add("releventAttachmentModel");
    openapiFields.add("releventUserTrainingModel");
    openapiFields.add("statusCode");
    openapiFields.add("systemTask");
    openapiFields.add("taskId");
    openapiFields.add("taskUID");
    openapiFields.add("transitionName");
    openapiFields.add("type");
    openapiFields.add("userGroupModel");
    openapiFields.add("userId");
    openapiFields.add("userModel");
    openapiFields.add("userWorkflowModel");
    openapiFields.add("workflowParameterAssignmentModel");
    openapiFields.add("workflowStepId");
    openapiFields.add("workflowStepModel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TaskModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TaskModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskModel is not found in the empty JSON string", TaskModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `assgnCandModel`
      if (jsonObj.get("assgnCandModel") != null && !jsonObj.get("assgnCandModel").isJsonNull()) {
        CandidateModel.validateJsonObject(jsonObj.getAsJsonObject("assgnCandModel"));
      }
      // validate the optional field `assgnUserModel`
      if (jsonObj.get("assgnUserModel") != null && !jsonObj.get("assgnUserModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("assgnUserModel"));
      }
      if ((jsonObj.get("lastEdit") != null && !jsonObj.get("lastEdit").isJsonNull()) && !jsonObj.get("lastEdit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastEdit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastEdit").toString()));
      }
      // validate the optional field `launchts`
      if (jsonObj.get("launchts") != null && !jsonObj.get("launchts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("launchts"));
      }
      if ((jsonObj.get("phasename") != null && !jsonObj.get("phasename").isJsonNull()) && !jsonObj.get("phasename").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phasename` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phasename").toString()));
      }
      // validate the optional field `relatedDynamicFormAssignmentModel`
      if (jsonObj.get("relatedDynamicFormAssignmentModel") != null && !jsonObj.get("relatedDynamicFormAssignmentModel").isJsonNull()) {
        DynamicFormAssignmentModel.validateJsonObject(jsonObj.getAsJsonObject("relatedDynamicFormAssignmentModel"));
      }
      // validate the optional field `releventAppraisalModel`
      if (jsonObj.get("releventAppraisalModel") != null && !jsonObj.get("releventAppraisalModel").isJsonNull()) {
        AppraisalModel.validateJsonObject(jsonObj.getAsJsonObject("releventAppraisalModel"));
      }
      // validate the optional field `releventAttachmentModel`
      if (jsonObj.get("releventAttachmentModel") != null && !jsonObj.get("releventAttachmentModel").isJsonNull()) {
        AttachmentModel.validateJsonObject(jsonObj.getAsJsonObject("releventAttachmentModel"));
      }
      // validate the optional field `releventUserTrainingModel`
      if (jsonObj.get("releventUserTrainingModel") != null && !jsonObj.get("releventUserTrainingModel").isJsonNull()) {
        UserTrainingModel.validateJsonObject(jsonObj.getAsJsonObject("releventUserTrainingModel"));
      }
      if ((jsonObj.get("statusCode") != null && !jsonObj.get("statusCode").isJsonNull()) && !jsonObj.get("statusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusCode").toString()));
      }
      if ((jsonObj.get("transitionName") != null && !jsonObj.get("transitionName").isJsonNull()) && !jsonObj.get("transitionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transitionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transitionName").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `userGroupModel`
      if (jsonObj.get("userGroupModel") != null && !jsonObj.get("userGroupModel").isJsonNull()) {
        UserGroupModel.validateJsonObject(jsonObj.getAsJsonObject("userGroupModel"));
      }
      // validate the optional field `userModel`
      if (jsonObj.get("userModel") != null && !jsonObj.get("userModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("userModel"));
      }
      // validate the optional field `userWorkflowModel`
      if (jsonObj.get("userWorkflowModel") != null && !jsonObj.get("userWorkflowModel").isJsonNull()) {
        UserWorkflowModel.validateJsonObject(jsonObj.getAsJsonObject("userWorkflowModel"));
      }
      // validate the optional field `workflowParameterAssignmentModel`
      if (jsonObj.get("workflowParameterAssignmentModel") != null && !jsonObj.get("workflowParameterAssignmentModel").isJsonNull()) {
        WorkflowParameterAssignmentModel.validateJsonObject(jsonObj.getAsJsonObject("workflowParameterAssignmentModel"));
      }
      // validate the optional field `workflowStepModel`
      if (jsonObj.get("workflowStepModel") != null && !jsonObj.get("workflowStepModel").isJsonNull()) {
        WorkflowStepModel.validateJsonObject(jsonObj.getAsJsonObject("workflowStepModel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskModel.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskModel>() {
           @Override
           public void write(JsonWriter out, TaskModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TaskModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TaskModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TaskModel
  * @throws IOException if the JSON string is invalid with respect to TaskModel
  */
  public static TaskModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskModel.class);
  }

 /**
  * Convert an instance of TaskModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

