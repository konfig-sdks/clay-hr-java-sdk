/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CurrencyModel;
import com.konfigthis.client.model.DepartmentModel;
import com.konfigthis.client.model.LocationModel;
import com.konfigthis.client.model.UserViewModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AwardTypeModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AwardTypeModel {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Double amount;

  public static final String SERIALIZED_NAME_AMOUNT_TYPE = "amountType";
  @SerializedName(SERIALIZED_NAME_AMOUNT_TYPE)
  private String amountType;

  public static final String SERIALIZED_NAME_AWARD_TYPE_ID = "awardTypeId";
  @SerializedName(SERIALIZED_NAME_AWARD_TYPE_ID)
  private Long awardTypeId;

  public static final String SERIALIZED_NAME_BUDGET = "budget";
  @SerializedName(SERIALIZED_NAME_BUDGET)
  private Double budget;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_CREATE_USER_ID = "createUserId";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_ID)
  private Integer createUserId;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_CURRENCY_MODEL = "currencyModel";
  @SerializedName(SERIALIZED_NAME_CURRENCY_MODEL)
  private CurrencyModel currencyModel;

  public static final String SERIALIZED_NAME_DEPARTMENT_MODEL = "departmentModel";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_MODEL)
  private DepartmentModel departmentModel;

  public static final String SERIALIZED_NAME_LOCATION_MODEL = "locationModel";
  @SerializedName(SERIALIZED_NAME_LOCATION_MODEL)
  private LocationModel locationModel;

  public static final String SERIALIZED_NAME_MANAGER_USER_VIEW_MODEL = "managerUserViewModel";
  @SerializedName(SERIALIZED_NAME_MANAGER_USER_VIEW_MODEL)
  private UserViewModel managerUserViewModel;

  public AwardTypeModel() {
  }

  public AwardTypeModel description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public AwardTypeModel amount(Double amount) {
    
    
    
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAmount() {
    return amount;
  }


  public void setAmount(Double amount) {
    
    
    
    this.amount = amount;
  }


  public AwardTypeModel amountType(String amountType) {
    
    
    
    
    this.amountType = amountType;
    return this;
  }

   /**
   * Get amountType
   * @return amountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAmountType() {
    return amountType;
  }


  public void setAmountType(String amountType) {
    
    
    
    this.amountType = amountType;
  }


  public AwardTypeModel awardTypeId(Long awardTypeId) {
    
    
    
    
    this.awardTypeId = awardTypeId;
    return this;
  }

   /**
   * Get awardTypeId
   * @return awardTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getAwardTypeId() {
    return awardTypeId;
  }


  public void setAwardTypeId(Long awardTypeId) {
    
    
    
    this.awardTypeId = awardTypeId;
  }


  public AwardTypeModel budget(Double budget) {
    
    
    
    
    this.budget = budget;
    return this;
  }

   /**
   * Get budget
   * @return budget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getBudget() {
    return budget;
  }


  public void setBudget(Double budget) {
    
    
    
    this.budget = budget;
  }


  public AwardTypeModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public AwardTypeModel code(String code) {
    
    
    
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    
    
    
    this.code = code;
  }


  public AwardTypeModel createUserId(Integer createUserId) {
    
    
    
    
    this.createUserId = createUserId;
    return this;
  }

   /**
   * Get createUserId
   * @return createUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateUserId() {
    return createUserId;
  }


  public void setCreateUserId(Integer createUserId) {
    
    
    
    this.createUserId = createUserId;
  }


  public AwardTypeModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public AwardTypeModel currencyCode(String currencyCode) {
    
    
    
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    
    
    
    this.currencyCode = currencyCode;
  }


  public AwardTypeModel currencyModel(CurrencyModel currencyModel) {
    
    
    
    
    this.currencyModel = currencyModel;
    return this;
  }

   /**
   * Get currencyModel
   * @return currencyModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CurrencyModel getCurrencyModel() {
    return currencyModel;
  }


  public void setCurrencyModel(CurrencyModel currencyModel) {
    
    
    
    this.currencyModel = currencyModel;
  }


  public AwardTypeModel departmentModel(DepartmentModel departmentModel) {
    
    
    
    
    this.departmentModel = departmentModel;
    return this;
  }

   /**
   * Get departmentModel
   * @return departmentModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DepartmentModel getDepartmentModel() {
    return departmentModel;
  }


  public void setDepartmentModel(DepartmentModel departmentModel) {
    
    
    
    this.departmentModel = departmentModel;
  }


  public AwardTypeModel locationModel(LocationModel locationModel) {
    
    
    
    
    this.locationModel = locationModel;
    return this;
  }

   /**
   * Get locationModel
   * @return locationModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocationModel getLocationModel() {
    return locationModel;
  }


  public void setLocationModel(LocationModel locationModel) {
    
    
    
    this.locationModel = locationModel;
  }


  public AwardTypeModel managerUserViewModel(UserViewModel managerUserViewModel) {
    
    
    
    
    this.managerUserViewModel = managerUserViewModel;
    return this;
  }

   /**
   * Get managerUserViewModel
   * @return managerUserViewModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserViewModel getManagerUserViewModel() {
    return managerUserViewModel;
  }


  public void setManagerUserViewModel(UserViewModel managerUserViewModel) {
    
    
    
    this.managerUserViewModel = managerUserViewModel;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AwardTypeModel instance itself
   */
  public AwardTypeModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwardTypeModel awardTypeModel = (AwardTypeModel) o;
    return Objects.equals(this.description, awardTypeModel.description) &&
        Objects.equals(this.amount, awardTypeModel.amount) &&
        Objects.equals(this.amountType, awardTypeModel.amountType) &&
        Objects.equals(this.awardTypeId, awardTypeModel.awardTypeId) &&
        Objects.equals(this.budget, awardTypeModel.budget) &&
        Objects.equals(this.cid, awardTypeModel.cid) &&
        Objects.equals(this.code, awardTypeModel.code) &&
        Objects.equals(this.createUserId, awardTypeModel.createUserId) &&
        Objects.equals(this.createts, awardTypeModel.createts) &&
        Objects.equals(this.currencyCode, awardTypeModel.currencyCode) &&
        Objects.equals(this.currencyModel, awardTypeModel.currencyModel) &&
        Objects.equals(this.departmentModel, awardTypeModel.departmentModel) &&
        Objects.equals(this.locationModel, awardTypeModel.locationModel) &&
        Objects.equals(this.managerUserViewModel, awardTypeModel.managerUserViewModel)&&
        Objects.equals(this.additionalProperties, awardTypeModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, amount, amountType, awardTypeId, budget, cid, code, createUserId, createts, currencyCode, currencyModel, departmentModel, locationModel, managerUserViewModel, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwardTypeModel {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    amountType: ").append(toIndentedString(amountType)).append("\n");
    sb.append("    awardTypeId: ").append(toIndentedString(awardTypeId)).append("\n");
    sb.append("    budget: ").append(toIndentedString(budget)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    createUserId: ").append(toIndentedString(createUserId)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    currencyModel: ").append(toIndentedString(currencyModel)).append("\n");
    sb.append("    departmentModel: ").append(toIndentedString(departmentModel)).append("\n");
    sb.append("    locationModel: ").append(toIndentedString(locationModel)).append("\n");
    sb.append("    managerUserViewModel: ").append(toIndentedString(managerUserViewModel)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("amount");
    openapiFields.add("amountType");
    openapiFields.add("awardTypeId");
    openapiFields.add("budget");
    openapiFields.add("cid");
    openapiFields.add("code");
    openapiFields.add("createUserId");
    openapiFields.add("createts");
    openapiFields.add("currencyCode");
    openapiFields.add("currencyModel");
    openapiFields.add("departmentModel");
    openapiFields.add("locationModel");
    openapiFields.add("managerUserViewModel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AwardTypeModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AwardTypeModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwardTypeModel is not found in the empty JSON string", AwardTypeModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("amountType") != null && !jsonObj.get("amountType").isJsonNull()) && !jsonObj.get("amountType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amountType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amountType").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      // validate the optional field `currencyModel`
      if (jsonObj.get("currencyModel") != null && !jsonObj.get("currencyModel").isJsonNull()) {
        CurrencyModel.validateJsonObject(jsonObj.getAsJsonObject("currencyModel"));
      }
      // validate the optional field `departmentModel`
      if (jsonObj.get("departmentModel") != null && !jsonObj.get("departmentModel").isJsonNull()) {
        DepartmentModel.validateJsonObject(jsonObj.getAsJsonObject("departmentModel"));
      }
      // validate the optional field `locationModel`
      if (jsonObj.get("locationModel") != null && !jsonObj.get("locationModel").isJsonNull()) {
        LocationModel.validateJsonObject(jsonObj.getAsJsonObject("locationModel"));
      }
      // validate the optional field `managerUserViewModel`
      if (jsonObj.get("managerUserViewModel") != null && !jsonObj.get("managerUserViewModel").isJsonNull()) {
        UserViewModel.validateJsonObject(jsonObj.getAsJsonObject("managerUserViewModel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwardTypeModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwardTypeModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwardTypeModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwardTypeModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AwardTypeModel>() {
           @Override
           public void write(JsonWriter out, AwardTypeModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AwardTypeModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AwardTypeModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AwardTypeModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AwardTypeModel
  * @throws IOException if the JSON string is invalid with respect to AwardTypeModel
  */
  public static AwardTypeModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwardTypeModel.class);
  }

 /**
  * Convert an instance of AwardTypeModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

