/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.GoalsGetGoalResponseProjectModelUserModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * GoalsGetGoalResponseProjectModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class GoalsGetGoalResponseProjectModel {
  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private String projectId;

  public static final String SERIALIZED_NAME_PROJECT_NAME = "projectName";
  @SerializedName(SERIALIZED_NAME_PROJECT_NAME)
  private String projectName;

  public static final String SERIALIZED_NAME_PROJECT_DESC = "projectDesc";
  @SerializedName(SERIALIZED_NAME_PROJECT_DESC)
  private String projectDesc;

  public static final String SERIALIZED_NAME_STARTDATE = "startdate";
  @SerializedName(SERIALIZED_NAME_STARTDATE)
  private String startdate;

  public static final String SERIALIZED_NAME_ENDDATE = "enddate";
  @SerializedName(SERIALIZED_NAME_ENDDATE)
  private String enddate;

  public static final String SERIALIZED_NAME_CONTACT_PERSON = "contactPerson";
  @SerializedName(SERIALIZED_NAME_CONTACT_PERSON)
  private String contactPerson;

  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private String account;

  public static final String SERIALIZED_NAME_ACCOUNT_MODEL = "accountModel";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_MODEL)
  private String accountModel;

  public static final String SERIALIZED_NAME_USER_MODEL_LIST = "userModelList";
  @SerializedName(SERIALIZED_NAME_USER_MODEL_LIST)
  private String userModelList;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Integer createts = 0;

  public static final String SERIALIZED_NAME_SHORT_CODE = "shortCode";
  @SerializedName(SERIALIZED_NAME_SHORT_CODE)
  private String shortCode;

  public static final String SERIALIZED_NAME_PROBABILITY = "probability";
  @SerializedName(SERIALIZED_NAME_PROBABILITY)
  private String probability;

  public static final String SERIALIZED_NAME_CONTACT_PERSON_NAME = "contactPersonName";
  @SerializedName(SERIALIZED_NAME_CONTACT_PERSON_NAME)
  private String contactPersonName;

  public static final String SERIALIZED_NAME_STATUS_VALUE = "statusValue";
  @SerializedName(SERIALIZED_NAME_STATUS_VALUE)
  private String statusValue;

  public static final String SERIALIZED_NAME_PGROUPID = "pgroupid";
  @SerializedName(SERIALIZED_NAME_PGROUPID)
  private String pgroupid;

  public static final String SERIALIZED_NAME_PUID = "puid";
  @SerializedName(SERIALIZED_NAME_PUID)
  private String puid;

  public static final String SERIALIZED_NAME_BILLING_TYPE = "billingType";
  @SerializedName(SERIALIZED_NAME_BILLING_TYPE)
  private String billingType;

  public static final String SERIALIZED_NAME_TIME_SHEET_OPEN_TO_ALL = "timeSheetOpenToAll";
  @SerializedName(SERIALIZED_NAME_TIME_SHEET_OPEN_TO_ALL)
  private String timeSheetOpenToAll;

  public static final String SERIALIZED_NAME_USER_MODEL = "userModel";
  @SerializedName(SERIALIZED_NAME_USER_MODEL)
  private GoalsGetGoalResponseProjectModelUserModel userModel;

  public static final String SERIALIZED_NAME_PROJECT_GROUP_MODEL = "projectGroupModel";
  @SerializedName(SERIALIZED_NAME_PROJECT_GROUP_MODEL)
  private String projectGroupModel;

  public static final String SERIALIZED_NAME_GROUP_NAME = "groupName";
  @SerializedName(SERIALIZED_NAME_GROUP_NAME)
  private String groupName;

  public static final String SERIALIZED_NAME_ACCOUNT_NAME = "accountName";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NAME)
  private String accountName;

  public static final String SERIALIZED_NAME_PM_MAIL = "pmMail";
  @SerializedName(SERIALIZED_NAME_PM_MAIL)
  private String pmMail;

  public static final String SERIALIZED_NAME_LOCATIONID = "locationid";
  @SerializedName(SERIALIZED_NAME_LOCATIONID)
  private String locationid;

  public static final String SERIALIZED_NAME_REPORT_METHOD = "reportMethod";
  @SerializedName(SERIALIZED_NAME_REPORT_METHOD)
  private String reportMethod;

  public static final String SERIALIZED_NAME_INDUSTRY = "industry";
  @SerializedName(SERIALIZED_NAME_INDUSTRY)
  private String industry;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private String cid;

  public static final String SERIALIZED_NAME_IS_ADMIN = "isAdmin";
  @SerializedName(SERIALIZED_NAME_IS_ADMIN)
  private String isAdmin;

  public static final String SERIALIZED_NAME_CREATEUSERID = "createuserid";
  @SerializedName(SERIALIZED_NAME_CREATEUSERID)
  private String createuserid;

  public static final String SERIALIZED_NAME_LASTUPDATEUSERID = "lastupdateuserid";
  @SerializedName(SERIALIZED_NAME_LASTUPDATEUSERID)
  private String lastupdateuserid;

  public static final String SERIALIZED_NAME_ADMIN = "admin";
  @SerializedName(SERIALIZED_NAME_ADMIN)
  private String admin;

  public static final String SERIALIZED_NAME_PROJ_STATUS = "projStatus";
  @SerializedName(SERIALIZED_NAME_PROJ_STATUS)
  private String projStatus;

  public static final String SERIALIZED_NAME_PROJ_PROBABILITY = "projProbability";
  @SerializedName(SERIALIZED_NAME_PROJ_PROBABILITY)
  private String projProbability;

  public GoalsGetGoalResponseProjectModel() {
  }

  public GoalsGetGoalResponseProjectModel projectId(String projectId) {
    
    
    
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getProjectId() {
    return projectId;
  }


  public void setProjectId(String projectId) {
    
    
    
    this.projectId = projectId;
  }


  public GoalsGetGoalResponseProjectModel projectName(String projectName) {
    
    
    
    
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getProjectName() {
    return projectName;
  }


  public void setProjectName(String projectName) {
    
    
    
    this.projectName = projectName;
  }


  public GoalsGetGoalResponseProjectModel projectDesc(String projectDesc) {
    
    
    
    
    this.projectDesc = projectDesc;
    return this;
  }

   /**
   * Get projectDesc
   * @return projectDesc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getProjectDesc() {
    return projectDesc;
  }


  public void setProjectDesc(String projectDesc) {
    
    
    
    this.projectDesc = projectDesc;
  }


  public GoalsGetGoalResponseProjectModel startdate(String startdate) {
    
    
    
    
    this.startdate = startdate;
    return this;
  }

   /**
   * Get startdate
   * @return startdate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "date", value = "")

  public String getStartdate() {
    return startdate;
  }


  public void setStartdate(String startdate) {
    
    
    
    this.startdate = startdate;
  }


  public GoalsGetGoalResponseProjectModel enddate(String enddate) {
    
    
    
    
    this.enddate = enddate;
    return this;
  }

   /**
   * Get enddate
   * @return enddate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "date", value = "")

  public String getEnddate() {
    return enddate;
  }


  public void setEnddate(String enddate) {
    
    
    
    this.enddate = enddate;
  }


  public GoalsGetGoalResponseProjectModel contactPerson(String contactPerson) {
    
    
    
    
    this.contactPerson = contactPerson;
    return this;
  }

   /**
   * Get contactPerson
   * @return contactPerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getContactPerson() {
    return contactPerson;
  }


  public void setContactPerson(String contactPerson) {
    
    
    
    this.contactPerson = contactPerson;
  }


  public GoalsGetGoalResponseProjectModel account(String account) {
    
    
    
    
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getAccount() {
    return account;
  }


  public void setAccount(String account) {
    
    
    
    this.account = account;
  }


  public GoalsGetGoalResponseProjectModel accountModel(String accountModel) {
    
    
    
    
    this.accountModel = accountModel;
    return this;
  }

   /**
   * Get accountModel
   * @return accountModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "object", value = "")

  public String getAccountModel() {
    return accountModel;
  }


  public void setAccountModel(String accountModel) {
    
    
    
    this.accountModel = accountModel;
  }


  public GoalsGetGoalResponseProjectModel userModelList(String userModelList) {
    
    
    
    
    this.userModelList = userModelList;
    return this;
  }

   /**
   * Get userModelList
   * @return userModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "object", value = "")

  public String getUserModelList() {
    return userModelList;
  }


  public void setUserModelList(String userModelList) {
    
    
    
    this.userModelList = userModelList;
  }


  public GoalsGetGoalResponseProjectModel status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public GoalsGetGoalResponseProjectModel createts(Integer createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1623395718000", value = "")

  public Integer getCreatets() {
    return createts;
  }


  public void setCreatets(Integer createts) {
    
    
    
    this.createts = createts;
  }


  public GoalsGetGoalResponseProjectModel shortCode(String shortCode) {
    
    
    
    
    this.shortCode = shortCode;
    return this;
  }

   /**
   * Get shortCode
   * @return shortCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getShortCode() {
    return shortCode;
  }


  public void setShortCode(String shortCode) {
    
    
    
    this.shortCode = shortCode;
  }


  public GoalsGetGoalResponseProjectModel probability(String probability) {
    
    
    
    
    this.probability = probability;
    return this;
  }

   /**
   * Get probability
   * @return probability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getProbability() {
    return probability;
  }


  public void setProbability(String probability) {
    
    
    
    this.probability = probability;
  }


  public GoalsGetGoalResponseProjectModel contactPersonName(String contactPersonName) {
    
    
    
    
    this.contactPersonName = contactPersonName;
    return this;
  }

   /**
   * Get contactPersonName
   * @return contactPersonName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getContactPersonName() {
    return contactPersonName;
  }


  public void setContactPersonName(String contactPersonName) {
    
    
    
    this.contactPersonName = contactPersonName;
  }


  public GoalsGetGoalResponseProjectModel statusValue(String statusValue) {
    
    
    
    
    this.statusValue = statusValue;
    return this;
  }

   /**
   * Get statusValue
   * @return statusValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getStatusValue() {
    return statusValue;
  }


  public void setStatusValue(String statusValue) {
    
    
    
    this.statusValue = statusValue;
  }


  public GoalsGetGoalResponseProjectModel pgroupid(String pgroupid) {
    
    
    
    
    this.pgroupid = pgroupid;
    return this;
  }

   /**
   * Get pgroupid
   * @return pgroupid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getPgroupid() {
    return pgroupid;
  }


  public void setPgroupid(String pgroupid) {
    
    
    
    this.pgroupid = pgroupid;
  }


  public GoalsGetGoalResponseProjectModel puid(String puid) {
    
    
    
    
    this.puid = puid;
    return this;
  }

   /**
   * Get puid
   * @return puid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getPuid() {
    return puid;
  }


  public void setPuid(String puid) {
    
    
    
    this.puid = puid;
  }


  public GoalsGetGoalResponseProjectModel billingType(String billingType) {
    
    
    
    
    this.billingType = billingType;
    return this;
  }

   /**
   * Get billingType
   * @return billingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getBillingType() {
    return billingType;
  }


  public void setBillingType(String billingType) {
    
    
    
    this.billingType = billingType;
  }


  public GoalsGetGoalResponseProjectModel timeSheetOpenToAll(String timeSheetOpenToAll) {
    
    
    
    
    this.timeSheetOpenToAll = timeSheetOpenToAll;
    return this;
  }

   /**
   * Get timeSheetOpenToAll
   * @return timeSheetOpenToAll
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getTimeSheetOpenToAll() {
    return timeSheetOpenToAll;
  }


  public void setTimeSheetOpenToAll(String timeSheetOpenToAll) {
    
    
    
    this.timeSheetOpenToAll = timeSheetOpenToAll;
  }


  public GoalsGetGoalResponseProjectModel userModel(GoalsGetGoalResponseProjectModelUserModel userModel) {
    
    
    
    
    this.userModel = userModel;
    return this;
  }

   /**
   * Get userModel
   * @return userModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GoalsGetGoalResponseProjectModelUserModel getUserModel() {
    return userModel;
  }


  public void setUserModel(GoalsGetGoalResponseProjectModelUserModel userModel) {
    
    
    
    this.userModel = userModel;
  }


  public GoalsGetGoalResponseProjectModel projectGroupModel(String projectGroupModel) {
    
    
    
    
    this.projectGroupModel = projectGroupModel;
    return this;
  }

   /**
   * Get projectGroupModel
   * @return projectGroupModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "object", value = "")

  public String getProjectGroupModel() {
    return projectGroupModel;
  }


  public void setProjectGroupModel(String projectGroupModel) {
    
    
    
    this.projectGroupModel = projectGroupModel;
  }


  public GoalsGetGoalResponseProjectModel groupName(String groupName) {
    
    
    
    
    this.groupName = groupName;
    return this;
  }

   /**
   * Get groupName
   * @return groupName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getGroupName() {
    return groupName;
  }


  public void setGroupName(String groupName) {
    
    
    
    this.groupName = groupName;
  }


  public GoalsGetGoalResponseProjectModel accountName(String accountName) {
    
    
    
    
    this.accountName = accountName;
    return this;
  }

   /**
   * Get accountName
   * @return accountName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getAccountName() {
    return accountName;
  }


  public void setAccountName(String accountName) {
    
    
    
    this.accountName = accountName;
  }


  public GoalsGetGoalResponseProjectModel pmMail(String pmMail) {
    
    
    
    
    this.pmMail = pmMail;
    return this;
  }

   /**
   * Get pmMail
   * @return pmMail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getPmMail() {
    return pmMail;
  }


  public void setPmMail(String pmMail) {
    
    
    
    this.pmMail = pmMail;
  }


  public GoalsGetGoalResponseProjectModel locationid(String locationid) {
    
    
    
    
    this.locationid = locationid;
    return this;
  }

   /**
   * Get locationid
   * @return locationid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getLocationid() {
    return locationid;
  }


  public void setLocationid(String locationid) {
    
    
    
    this.locationid = locationid;
  }


  public GoalsGetGoalResponseProjectModel reportMethod(String reportMethod) {
    
    
    
    
    this.reportMethod = reportMethod;
    return this;
  }

   /**
   * Get reportMethod
   * @return reportMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getReportMethod() {
    return reportMethod;
  }


  public void setReportMethod(String reportMethod) {
    
    
    
    this.reportMethod = reportMethod;
  }


  public GoalsGetGoalResponseProjectModel industry(String industry) {
    
    
    
    
    this.industry = industry;
    return this;
  }

   /**
   * Get industry
   * @return industry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getIndustry() {
    return industry;
  }


  public void setIndustry(String industry) {
    
    
    
    this.industry = industry;
  }


  public GoalsGetGoalResponseProjectModel cid(String cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getCid() {
    return cid;
  }


  public void setCid(String cid) {
    
    
    
    this.cid = cid;
  }


  public GoalsGetGoalResponseProjectModel isAdmin(String isAdmin) {
    
    
    
    
    this.isAdmin = isAdmin;
    return this;
  }

   /**
   * Get isAdmin
   * @return isAdmin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "boolean", value = "")

  public String getIsAdmin() {
    return isAdmin;
  }


  public void setIsAdmin(String isAdmin) {
    
    
    
    this.isAdmin = isAdmin;
  }


  public GoalsGetGoalResponseProjectModel createuserid(String createuserid) {
    
    
    
    
    this.createuserid = createuserid;
    return this;
  }

   /**
   * Get createuserid
   * @return createuserid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getCreateuserid() {
    return createuserid;
  }


  public void setCreateuserid(String createuserid) {
    
    
    
    this.createuserid = createuserid;
  }


  public GoalsGetGoalResponseProjectModel lastupdateuserid(String lastupdateuserid) {
    
    
    
    
    this.lastupdateuserid = lastupdateuserid;
    return this;
  }

   /**
   * Get lastupdateuserid
   * @return lastupdateuserid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getLastupdateuserid() {
    return lastupdateuserid;
  }


  public void setLastupdateuserid(String lastupdateuserid) {
    
    
    
    this.lastupdateuserid = lastupdateuserid;
  }


  public GoalsGetGoalResponseProjectModel admin(String admin) {
    
    
    
    
    this.admin = admin;
    return this;
  }

   /**
   * Get admin
   * @return admin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "boolean", value = "")

  public String getAdmin() {
    return admin;
  }


  public void setAdmin(String admin) {
    
    
    
    this.admin = admin;
  }


  public GoalsGetGoalResponseProjectModel projStatus(String projStatus) {
    
    
    
    
    this.projStatus = projStatus;
    return this;
  }

   /**
   * Get projStatus
   * @return projStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getProjStatus() {
    return projStatus;
  }


  public void setProjStatus(String projStatus) {
    
    
    
    this.projStatus = projStatus;
  }


  public GoalsGetGoalResponseProjectModel projProbability(String projProbability) {
    
    
    
    
    this.projProbability = projProbability;
    return this;
  }

   /**
   * Get projProbability
   * @return projProbability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getProjProbability() {
    return projProbability;
  }


  public void setProjProbability(String projProbability) {
    
    
    
    this.projProbability = projProbability;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GoalsGetGoalResponseProjectModel instance itself
   */
  public GoalsGetGoalResponseProjectModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoalsGetGoalResponseProjectModel goalsGetGoalResponseProjectModel = (GoalsGetGoalResponseProjectModel) o;
    return Objects.equals(this.projectId, goalsGetGoalResponseProjectModel.projectId) &&
        Objects.equals(this.projectName, goalsGetGoalResponseProjectModel.projectName) &&
        Objects.equals(this.projectDesc, goalsGetGoalResponseProjectModel.projectDesc) &&
        Objects.equals(this.startdate, goalsGetGoalResponseProjectModel.startdate) &&
        Objects.equals(this.enddate, goalsGetGoalResponseProjectModel.enddate) &&
        Objects.equals(this.contactPerson, goalsGetGoalResponseProjectModel.contactPerson) &&
        Objects.equals(this.account, goalsGetGoalResponseProjectModel.account) &&
        Objects.equals(this.accountModel, goalsGetGoalResponseProjectModel.accountModel) &&
        Objects.equals(this.userModelList, goalsGetGoalResponseProjectModel.userModelList) &&
        Objects.equals(this.status, goalsGetGoalResponseProjectModel.status) &&
        Objects.equals(this.createts, goalsGetGoalResponseProjectModel.createts) &&
        Objects.equals(this.shortCode, goalsGetGoalResponseProjectModel.shortCode) &&
        Objects.equals(this.probability, goalsGetGoalResponseProjectModel.probability) &&
        Objects.equals(this.contactPersonName, goalsGetGoalResponseProjectModel.contactPersonName) &&
        Objects.equals(this.statusValue, goalsGetGoalResponseProjectModel.statusValue) &&
        Objects.equals(this.pgroupid, goalsGetGoalResponseProjectModel.pgroupid) &&
        Objects.equals(this.puid, goalsGetGoalResponseProjectModel.puid) &&
        Objects.equals(this.billingType, goalsGetGoalResponseProjectModel.billingType) &&
        Objects.equals(this.timeSheetOpenToAll, goalsGetGoalResponseProjectModel.timeSheetOpenToAll) &&
        Objects.equals(this.userModel, goalsGetGoalResponseProjectModel.userModel) &&
        Objects.equals(this.projectGroupModel, goalsGetGoalResponseProjectModel.projectGroupModel) &&
        Objects.equals(this.groupName, goalsGetGoalResponseProjectModel.groupName) &&
        Objects.equals(this.accountName, goalsGetGoalResponseProjectModel.accountName) &&
        Objects.equals(this.pmMail, goalsGetGoalResponseProjectModel.pmMail) &&
        Objects.equals(this.locationid, goalsGetGoalResponseProjectModel.locationid) &&
        Objects.equals(this.reportMethod, goalsGetGoalResponseProjectModel.reportMethod) &&
        Objects.equals(this.industry, goalsGetGoalResponseProjectModel.industry) &&
        Objects.equals(this.cid, goalsGetGoalResponseProjectModel.cid) &&
        Objects.equals(this.isAdmin, goalsGetGoalResponseProjectModel.isAdmin) &&
        Objects.equals(this.createuserid, goalsGetGoalResponseProjectModel.createuserid) &&
        Objects.equals(this.lastupdateuserid, goalsGetGoalResponseProjectModel.lastupdateuserid) &&
        Objects.equals(this.admin, goalsGetGoalResponseProjectModel.admin) &&
        Objects.equals(this.projStatus, goalsGetGoalResponseProjectModel.projStatus) &&
        Objects.equals(this.projProbability, goalsGetGoalResponseProjectModel.projProbability)&&
        Objects.equals(this.additionalProperties, goalsGetGoalResponseProjectModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectId, projectName, projectDesc, startdate, enddate, contactPerson, account, accountModel, userModelList, status, createts, shortCode, probability, contactPersonName, statusValue, pgroupid, puid, billingType, timeSheetOpenToAll, userModel, projectGroupModel, groupName, accountName, pmMail, locationid, reportMethod, industry, cid, isAdmin, createuserid, lastupdateuserid, admin, projStatus, projProbability, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoalsGetGoalResponseProjectModel {\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    projectDesc: ").append(toIndentedString(projectDesc)).append("\n");
    sb.append("    startdate: ").append(toIndentedString(startdate)).append("\n");
    sb.append("    enddate: ").append(toIndentedString(enddate)).append("\n");
    sb.append("    contactPerson: ").append(toIndentedString(contactPerson)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    accountModel: ").append(toIndentedString(accountModel)).append("\n");
    sb.append("    userModelList: ").append(toIndentedString(userModelList)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    shortCode: ").append(toIndentedString(shortCode)).append("\n");
    sb.append("    probability: ").append(toIndentedString(probability)).append("\n");
    sb.append("    contactPersonName: ").append(toIndentedString(contactPersonName)).append("\n");
    sb.append("    statusValue: ").append(toIndentedString(statusValue)).append("\n");
    sb.append("    pgroupid: ").append(toIndentedString(pgroupid)).append("\n");
    sb.append("    puid: ").append(toIndentedString(puid)).append("\n");
    sb.append("    billingType: ").append(toIndentedString(billingType)).append("\n");
    sb.append("    timeSheetOpenToAll: ").append(toIndentedString(timeSheetOpenToAll)).append("\n");
    sb.append("    userModel: ").append(toIndentedString(userModel)).append("\n");
    sb.append("    projectGroupModel: ").append(toIndentedString(projectGroupModel)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    pmMail: ").append(toIndentedString(pmMail)).append("\n");
    sb.append("    locationid: ").append(toIndentedString(locationid)).append("\n");
    sb.append("    reportMethod: ").append(toIndentedString(reportMethod)).append("\n");
    sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    isAdmin: ").append(toIndentedString(isAdmin)).append("\n");
    sb.append("    createuserid: ").append(toIndentedString(createuserid)).append("\n");
    sb.append("    lastupdateuserid: ").append(toIndentedString(lastupdateuserid)).append("\n");
    sb.append("    admin: ").append(toIndentedString(admin)).append("\n");
    sb.append("    projStatus: ").append(toIndentedString(projStatus)).append("\n");
    sb.append("    projProbability: ").append(toIndentedString(projProbability)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("projectId");
    openapiFields.add("projectName");
    openapiFields.add("projectDesc");
    openapiFields.add("startdate");
    openapiFields.add("enddate");
    openapiFields.add("contactPerson");
    openapiFields.add("account");
    openapiFields.add("accountModel");
    openapiFields.add("userModelList");
    openapiFields.add("status");
    openapiFields.add("createts");
    openapiFields.add("shortCode");
    openapiFields.add("probability");
    openapiFields.add("contactPersonName");
    openapiFields.add("statusValue");
    openapiFields.add("pgroupid");
    openapiFields.add("puid");
    openapiFields.add("billingType");
    openapiFields.add("timeSheetOpenToAll");
    openapiFields.add("userModel");
    openapiFields.add("projectGroupModel");
    openapiFields.add("groupName");
    openapiFields.add("accountName");
    openapiFields.add("pmMail");
    openapiFields.add("locationid");
    openapiFields.add("reportMethod");
    openapiFields.add("industry");
    openapiFields.add("cid");
    openapiFields.add("isAdmin");
    openapiFields.add("createuserid");
    openapiFields.add("lastupdateuserid");
    openapiFields.add("admin");
    openapiFields.add("projStatus");
    openapiFields.add("projProbability");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GoalsGetGoalResponseProjectModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GoalsGetGoalResponseProjectModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoalsGetGoalResponseProjectModel is not found in the empty JSON string", GoalsGetGoalResponseProjectModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("projectId") != null && !jsonObj.get("projectId").isJsonNull()) && !jsonObj.get("projectId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectId").toString()));
      }
      if ((jsonObj.get("projectName") != null && !jsonObj.get("projectName").isJsonNull()) && !jsonObj.get("projectName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectName").toString()));
      }
      if ((jsonObj.get("projectDesc") != null && !jsonObj.get("projectDesc").isJsonNull()) && !jsonObj.get("projectDesc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectDesc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectDesc").toString()));
      }
      if ((jsonObj.get("startdate") != null && !jsonObj.get("startdate").isJsonNull()) && !jsonObj.get("startdate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startdate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startdate").toString()));
      }
      if ((jsonObj.get("enddate") != null && !jsonObj.get("enddate").isJsonNull()) && !jsonObj.get("enddate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enddate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enddate").toString()));
      }
      if ((jsonObj.get("contactPerson") != null && !jsonObj.get("contactPerson").isJsonNull()) && !jsonObj.get("contactPerson").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactPerson` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactPerson").toString()));
      }
      if ((jsonObj.get("account") != null && !jsonObj.get("account").isJsonNull()) && !jsonObj.get("account").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account").toString()));
      }
      if ((jsonObj.get("accountModel") != null && !jsonObj.get("accountModel").isJsonNull()) && !jsonObj.get("accountModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountModel").toString()));
      }
      if ((jsonObj.get("userModelList") != null && !jsonObj.get("userModelList").isJsonNull()) && !jsonObj.get("userModelList").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userModelList` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userModelList").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("shortCode") != null && !jsonObj.get("shortCode").isJsonNull()) && !jsonObj.get("shortCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shortCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shortCode").toString()));
      }
      if ((jsonObj.get("probability") != null && !jsonObj.get("probability").isJsonNull()) && !jsonObj.get("probability").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `probability` to be a primitive type in the JSON string but got `%s`", jsonObj.get("probability").toString()));
      }
      if ((jsonObj.get("contactPersonName") != null && !jsonObj.get("contactPersonName").isJsonNull()) && !jsonObj.get("contactPersonName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactPersonName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactPersonName").toString()));
      }
      if ((jsonObj.get("statusValue") != null && !jsonObj.get("statusValue").isJsonNull()) && !jsonObj.get("statusValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusValue").toString()));
      }
      if ((jsonObj.get("pgroupid") != null && !jsonObj.get("pgroupid").isJsonNull()) && !jsonObj.get("pgroupid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pgroupid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pgroupid").toString()));
      }
      if ((jsonObj.get("puid") != null && !jsonObj.get("puid").isJsonNull()) && !jsonObj.get("puid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `puid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("puid").toString()));
      }
      if ((jsonObj.get("billingType") != null && !jsonObj.get("billingType").isJsonNull()) && !jsonObj.get("billingType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingType").toString()));
      }
      if ((jsonObj.get("timeSheetOpenToAll") != null && !jsonObj.get("timeSheetOpenToAll").isJsonNull()) && !jsonObj.get("timeSheetOpenToAll").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeSheetOpenToAll` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeSheetOpenToAll").toString()));
      }
      // validate the optional field `userModel`
      if (jsonObj.get("userModel") != null && !jsonObj.get("userModel").isJsonNull()) {
        GoalsGetGoalResponseProjectModelUserModel.validateJsonObject(jsonObj.getAsJsonObject("userModel"));
      }
      if ((jsonObj.get("projectGroupModel") != null && !jsonObj.get("projectGroupModel").isJsonNull()) && !jsonObj.get("projectGroupModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectGroupModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectGroupModel").toString()));
      }
      if ((jsonObj.get("groupName") != null && !jsonObj.get("groupName").isJsonNull()) && !jsonObj.get("groupName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `groupName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("groupName").toString()));
      }
      if ((jsonObj.get("accountName") != null && !jsonObj.get("accountName").isJsonNull()) && !jsonObj.get("accountName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountName").toString()));
      }
      if ((jsonObj.get("pmMail") != null && !jsonObj.get("pmMail").isJsonNull()) && !jsonObj.get("pmMail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pmMail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pmMail").toString()));
      }
      if ((jsonObj.get("locationid") != null && !jsonObj.get("locationid").isJsonNull()) && !jsonObj.get("locationid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationid").toString()));
      }
      if ((jsonObj.get("reportMethod") != null && !jsonObj.get("reportMethod").isJsonNull()) && !jsonObj.get("reportMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportMethod").toString()));
      }
      if ((jsonObj.get("industry") != null && !jsonObj.get("industry").isJsonNull()) && !jsonObj.get("industry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `industry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("industry").toString()));
      }
      if ((jsonObj.get("cid") != null && !jsonObj.get("cid").isJsonNull()) && !jsonObj.get("cid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cid").toString()));
      }
      if ((jsonObj.get("isAdmin") != null && !jsonObj.get("isAdmin").isJsonNull()) && !jsonObj.get("isAdmin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isAdmin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isAdmin").toString()));
      }
      if ((jsonObj.get("createuserid") != null && !jsonObj.get("createuserid").isJsonNull()) && !jsonObj.get("createuserid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createuserid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createuserid").toString()));
      }
      if ((jsonObj.get("lastupdateuserid") != null && !jsonObj.get("lastupdateuserid").isJsonNull()) && !jsonObj.get("lastupdateuserid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastupdateuserid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastupdateuserid").toString()));
      }
      if ((jsonObj.get("admin") != null && !jsonObj.get("admin").isJsonNull()) && !jsonObj.get("admin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `admin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("admin").toString()));
      }
      if ((jsonObj.get("projStatus") != null && !jsonObj.get("projStatus").isJsonNull()) && !jsonObj.get("projStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projStatus").toString()));
      }
      if ((jsonObj.get("projProbability") != null && !jsonObj.get("projProbability").isJsonNull()) && !jsonObj.get("projProbability").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projProbability` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projProbability").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoalsGetGoalResponseProjectModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoalsGetGoalResponseProjectModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoalsGetGoalResponseProjectModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoalsGetGoalResponseProjectModel.class));

       return (TypeAdapter<T>) new TypeAdapter<GoalsGetGoalResponseProjectModel>() {
           @Override
           public void write(JsonWriter out, GoalsGetGoalResponseProjectModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GoalsGetGoalResponseProjectModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             GoalsGetGoalResponseProjectModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GoalsGetGoalResponseProjectModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GoalsGetGoalResponseProjectModel
  * @throws IOException if the JSON string is invalid with respect to GoalsGetGoalResponseProjectModel
  */
  public static GoalsGetGoalResponseProjectModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoalsGetGoalResponseProjectModel.class);
  }

 /**
  * Convert an instance of GoalsGetGoalResponseProjectModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

