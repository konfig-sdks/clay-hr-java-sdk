/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AccountModel;
import com.konfigthis.client.model.ProjectGroupModel;
import com.konfigthis.client.model.UserModel;
import com.konfigthis.client.model.UserViewModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ProjectModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ProjectModel {
  public static final String SERIALIZED_NAME_PROBABILITY = "Probability";
  @SerializedName(SERIALIZED_NAME_PROBABILITY)
  private Integer probability;

  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private Integer account;

  public static final String SERIALIZED_NAME_ACCOUNT_MODEL = "accountModel";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_MODEL)
  private AccountModel accountModel;

  public static final String SERIALIZED_NAME_ACCOUNT_NAME = "accountName";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NAME)
  private String accountName;

  public static final String SERIALIZED_NAME_BILLING_TYPE = "billing_type";
  @SerializedName(SERIALIZED_NAME_BILLING_TYPE)
  private String billingType;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CONTACT_PERSON = "contactPerson";
  @SerializedName(SERIALIZED_NAME_CONTACT_PERSON)
  private Integer contactPerson;

  public static final String SERIALIZED_NAME_CONTACT_PERSON_NAME = "contactPersonName";
  @SerializedName(SERIALIZED_NAME_CONTACT_PERSON_NAME)
  private String contactPersonName;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_CREATEUSERID = "createuserid";
  @SerializedName(SERIALIZED_NAME_CREATEUSERID)
  private Integer createuserid;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private LocalDate endDate;

  public static final String SERIALIZED_NAME_GROUP_NAME = "groupName";
  @SerializedName(SERIALIZED_NAME_GROUP_NAME)
  private String groupName;

  public static final String SERIALIZED_NAME_INDUSTRY = "industry";
  @SerializedName(SERIALIZED_NAME_INDUSTRY)
  private String industry;

  public static final String SERIALIZED_NAME_LASTUPDATEUSERID = "lastupdateuserid";
  @SerializedName(SERIALIZED_NAME_LASTUPDATEUSERID)
  private Integer lastupdateuserid;

  public static final String SERIALIZED_NAME_LOCATIONID = "locationid";
  @SerializedName(SERIALIZED_NAME_LOCATIONID)
  private Integer locationid;

  public static final String SERIALIZED_NAME_PGROUPID = "pgroupid";
  @SerializedName(SERIALIZED_NAME_PGROUPID)
  private Integer pgroupid;

  public static final String SERIALIZED_NAME_PM_MAIL = "pmMail";
  @SerializedName(SERIALIZED_NAME_PM_MAIL)
  private String pmMail;

  public static final String SERIALIZED_NAME_PROBABILITY = "probability";
  @SerializedName(SERIALIZED_NAME_PROBABILITY)
  private Integer probability;

  public static final String SERIALIZED_NAME_PROJ_PROBABILITY = "projProbability";
  @SerializedName(SERIALIZED_NAME_PROJ_PROBABILITY)
  private Integer projProbability;

  public static final String SERIALIZED_NAME_PROJ_STATUS = "projStatus";
  @SerializedName(SERIALIZED_NAME_PROJ_STATUS)
  private String projStatus;

  public static final String SERIALIZED_NAME_PROJECT_DESC = "projectDesc";
  @SerializedName(SERIALIZED_NAME_PROJECT_DESC)
  private String projectDesc;

  public static final String SERIALIZED_NAME_PROJECT_GROUP_MODEL = "projectGroupModel";
  @SerializedName(SERIALIZED_NAME_PROJECT_GROUP_MODEL)
  private ProjectGroupModel projectGroupModel;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private Integer projectId;

  public static final String SERIALIZED_NAME_PROJECT_NAME = "projectName";
  @SerializedName(SERIALIZED_NAME_PROJECT_NAME)
  private String projectName;

  public static final String SERIALIZED_NAME_PUID = "puid";
  @SerializedName(SERIALIZED_NAME_PUID)
  private String puid;

  public static final String SERIALIZED_NAME_REPORT_METHOD = "reportMethod";
  @SerializedName(SERIALIZED_NAME_REPORT_METHOD)
  private String reportMethod;

  public static final String SERIALIZED_NAME_SHORT_CODE = "shortCode";
  @SerializedName(SERIALIZED_NAME_SHORT_CODE)
  private String shortCode;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private LocalDate startDate;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_VALUE = "statusValue";
  @SerializedName(SERIALIZED_NAME_STATUS_VALUE)
  private String statusValue;

  public static final String SERIALIZED_NAME_USER_MODEL = "userModel";
  @SerializedName(SERIALIZED_NAME_USER_MODEL)
  private UserViewModel userModel;

  public static final String SERIALIZED_NAME_USER_MODEL_LIST = "userModelList";
  @SerializedName(SERIALIZED_NAME_USER_MODEL_LIST)
  private List<UserModel> userModelList = null;

  public ProjectModel() {
  }

  public ProjectModel probability(Integer probability) {
    
    
    
    
    this.probability = probability;
    return this;
  }

   /**
   * Get probability
   * @return probability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProbability() {
    return probability;
  }


  public void setProbability(Integer probability) {
    
    
    
    this.probability = probability;
  }


  public ProjectModel account(Integer account) {
    
    
    
    
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAccount() {
    return account;
  }


  public void setAccount(Integer account) {
    
    
    
    this.account = account;
  }


  public ProjectModel accountModel(AccountModel accountModel) {
    
    
    
    
    this.accountModel = accountModel;
    return this;
  }

   /**
   * Get accountModel
   * @return accountModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AccountModel getAccountModel() {
    return accountModel;
  }


  public void setAccountModel(AccountModel accountModel) {
    
    
    
    this.accountModel = accountModel;
  }


  public ProjectModel accountName(String accountName) {
    
    
    
    
    this.accountName = accountName;
    return this;
  }

   /**
   * Get accountName
   * @return accountName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountName() {
    return accountName;
  }


  public void setAccountName(String accountName) {
    
    
    
    this.accountName = accountName;
  }


  public ProjectModel billingType(String billingType) {
    
    
    
    
    this.billingType = billingType;
    return this;
  }

   /**
   * Get billingType
   * @return billingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBillingType() {
    return billingType;
  }


  public void setBillingType(String billingType) {
    
    
    
    this.billingType = billingType;
  }


  public ProjectModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public ProjectModel contactPerson(Integer contactPerson) {
    
    
    
    
    this.contactPerson = contactPerson;
    return this;
  }

   /**
   * Get contactPerson
   * @return contactPerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getContactPerson() {
    return contactPerson;
  }


  public void setContactPerson(Integer contactPerson) {
    
    
    
    this.contactPerson = contactPerson;
  }


  public ProjectModel contactPersonName(String contactPersonName) {
    
    
    
    
    this.contactPersonName = contactPersonName;
    return this;
  }

   /**
   * Get contactPersonName
   * @return contactPersonName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContactPersonName() {
    return contactPersonName;
  }


  public void setContactPersonName(String contactPersonName) {
    
    
    
    this.contactPersonName = contactPersonName;
  }


  public ProjectModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public ProjectModel createuserid(Integer createuserid) {
    
    
    
    
    this.createuserid = createuserid;
    return this;
  }

   /**
   * Get createuserid
   * @return createuserid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateuserid() {
    return createuserid;
  }


  public void setCreateuserid(Integer createuserid) {
    
    
    
    this.createuserid = createuserid;
  }


  public ProjectModel endDate(LocalDate endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getEndDate() {
    return endDate;
  }


  public void setEndDate(LocalDate endDate) {
    
    
    
    this.endDate = endDate;
  }


  public ProjectModel groupName(String groupName) {
    
    
    
    
    this.groupName = groupName;
    return this;
  }

   /**
   * Get groupName
   * @return groupName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGroupName() {
    return groupName;
  }


  public void setGroupName(String groupName) {
    
    
    
    this.groupName = groupName;
  }


  public ProjectModel industry(String industry) {
    
    
    
    
    this.industry = industry;
    return this;
  }

   /**
   * Get industry
   * @return industry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIndustry() {
    return industry;
  }


  public void setIndustry(String industry) {
    
    
    
    this.industry = industry;
  }


  public ProjectModel lastupdateuserid(Integer lastupdateuserid) {
    
    
    
    
    this.lastupdateuserid = lastupdateuserid;
    return this;
  }

   /**
   * Get lastupdateuserid
   * @return lastupdateuserid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLastupdateuserid() {
    return lastupdateuserid;
  }


  public void setLastupdateuserid(Integer lastupdateuserid) {
    
    
    
    this.lastupdateuserid = lastupdateuserid;
  }


  public ProjectModel locationid(Integer locationid) {
    
    
    
    
    this.locationid = locationid;
    return this;
  }

   /**
   * Get locationid
   * @return locationid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLocationid() {
    return locationid;
  }


  public void setLocationid(Integer locationid) {
    
    
    
    this.locationid = locationid;
  }


  public ProjectModel pgroupid(Integer pgroupid) {
    
    
    
    
    this.pgroupid = pgroupid;
    return this;
  }

   /**
   * Get pgroupid
   * @return pgroupid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPgroupid() {
    return pgroupid;
  }


  public void setPgroupid(Integer pgroupid) {
    
    
    
    this.pgroupid = pgroupid;
  }


  public ProjectModel pmMail(String pmMail) {
    
    
    
    
    this.pmMail = pmMail;
    return this;
  }

   /**
   * Get pmMail
   * @return pmMail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPmMail() {
    return pmMail;
  }


  public void setPmMail(String pmMail) {
    
    
    
    this.pmMail = pmMail;
  }


  public ProjectModel probability(Integer probability) {
    
    
    
    
    this.probability = probability;
    return this;
  }

   /**
   * Get probability
   * @return probability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProbability() {
    return probability;
  }


  public void setProbability(Integer probability) {
    
    
    
    this.probability = probability;
  }


  public ProjectModel projProbability(Integer projProbability) {
    
    
    
    
    this.projProbability = projProbability;
    return this;
  }

   /**
   * Get projProbability
   * @return projProbability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProjProbability() {
    return projProbability;
  }


  public void setProjProbability(Integer projProbability) {
    
    
    
    this.projProbability = projProbability;
  }


  public ProjectModel projStatus(String projStatus) {
    
    
    
    
    this.projStatus = projStatus;
    return this;
  }

   /**
   * Get projStatus
   * @return projStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProjStatus() {
    return projStatus;
  }


  public void setProjStatus(String projStatus) {
    
    
    
    this.projStatus = projStatus;
  }


  public ProjectModel projectDesc(String projectDesc) {
    
    
    
    
    this.projectDesc = projectDesc;
    return this;
  }

   /**
   * Get projectDesc
   * @return projectDesc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProjectDesc() {
    return projectDesc;
  }


  public void setProjectDesc(String projectDesc) {
    
    
    
    this.projectDesc = projectDesc;
  }


  public ProjectModel projectGroupModel(ProjectGroupModel projectGroupModel) {
    
    
    
    
    this.projectGroupModel = projectGroupModel;
    return this;
  }

   /**
   * Get projectGroupModel
   * @return projectGroupModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProjectGroupModel getProjectGroupModel() {
    return projectGroupModel;
  }


  public void setProjectGroupModel(ProjectGroupModel projectGroupModel) {
    
    
    
    this.projectGroupModel = projectGroupModel;
  }


  public ProjectModel projectId(Integer projectId) {
    
    
    
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProjectId() {
    return projectId;
  }


  public void setProjectId(Integer projectId) {
    
    
    
    this.projectId = projectId;
  }


  public ProjectModel projectName(String projectName) {
    
    
    
    
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProjectName() {
    return projectName;
  }


  public void setProjectName(String projectName) {
    
    
    
    this.projectName = projectName;
  }


  public ProjectModel puid(String puid) {
    
    
    
    
    this.puid = puid;
    return this;
  }

   /**
   * Get puid
   * @return puid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPuid() {
    return puid;
  }


  public void setPuid(String puid) {
    
    
    
    this.puid = puid;
  }


  public ProjectModel reportMethod(String reportMethod) {
    
    
    
    
    this.reportMethod = reportMethod;
    return this;
  }

   /**
   * Get reportMethod
   * @return reportMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReportMethod() {
    return reportMethod;
  }


  public void setReportMethod(String reportMethod) {
    
    
    
    this.reportMethod = reportMethod;
  }


  public ProjectModel shortCode(String shortCode) {
    
    
    
    
    this.shortCode = shortCode;
    return this;
  }

   /**
   * Get shortCode
   * @return shortCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShortCode() {
    return shortCode;
  }


  public void setShortCode(String shortCode) {
    
    
    
    this.shortCode = shortCode;
  }


  public ProjectModel startDate(LocalDate startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getStartDate() {
    return startDate;
  }


  public void setStartDate(LocalDate startDate) {
    
    
    
    this.startDate = startDate;
  }


  public ProjectModel status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public ProjectModel statusValue(String statusValue) {
    
    
    
    
    this.statusValue = statusValue;
    return this;
  }

   /**
   * Get statusValue
   * @return statusValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatusValue() {
    return statusValue;
  }


  public void setStatusValue(String statusValue) {
    
    
    
    this.statusValue = statusValue;
  }


  public ProjectModel userModel(UserViewModel userModel) {
    
    
    
    
    this.userModel = userModel;
    return this;
  }

   /**
   * Get userModel
   * @return userModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserViewModel getUserModel() {
    return userModel;
  }


  public void setUserModel(UserViewModel userModel) {
    
    
    
    this.userModel = userModel;
  }


  public ProjectModel userModelList(List<UserModel> userModelList) {
    
    
    
    
    this.userModelList = userModelList;
    return this;
  }

  public ProjectModel addUserModelListItem(UserModel userModelListItem) {
    if (this.userModelList == null) {
      this.userModelList = new ArrayList<>();
    }
    this.userModelList.add(userModelListItem);
    return this;
  }

   /**
   * Get userModelList
   * @return userModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<UserModel> getUserModelList() {
    return userModelList;
  }


  public void setUserModelList(List<UserModel> userModelList) {
    
    
    
    this.userModelList = userModelList;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ProjectModel instance itself
   */
  public ProjectModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectModel projectModel = (ProjectModel) o;
    return Objects.equals(this.probability, projectModel.probability) &&
        Objects.equals(this.account, projectModel.account) &&
        Objects.equals(this.accountModel, projectModel.accountModel) &&
        Objects.equals(this.accountName, projectModel.accountName) &&
        Objects.equals(this.billingType, projectModel.billingType) &&
        Objects.equals(this.cid, projectModel.cid) &&
        Objects.equals(this.contactPerson, projectModel.contactPerson) &&
        Objects.equals(this.contactPersonName, projectModel.contactPersonName) &&
        Objects.equals(this.createts, projectModel.createts) &&
        Objects.equals(this.createuserid, projectModel.createuserid) &&
        Objects.equals(this.endDate, projectModel.endDate) &&
        Objects.equals(this.groupName, projectModel.groupName) &&
        Objects.equals(this.industry, projectModel.industry) &&
        Objects.equals(this.lastupdateuserid, projectModel.lastupdateuserid) &&
        Objects.equals(this.locationid, projectModel.locationid) &&
        Objects.equals(this.pgroupid, projectModel.pgroupid) &&
        Objects.equals(this.pmMail, projectModel.pmMail) &&
        Objects.equals(this.probability, projectModel.probability) &&
        Objects.equals(this.projProbability, projectModel.projProbability) &&
        Objects.equals(this.projStatus, projectModel.projStatus) &&
        Objects.equals(this.projectDesc, projectModel.projectDesc) &&
        Objects.equals(this.projectGroupModel, projectModel.projectGroupModel) &&
        Objects.equals(this.projectId, projectModel.projectId) &&
        Objects.equals(this.projectName, projectModel.projectName) &&
        Objects.equals(this.puid, projectModel.puid) &&
        Objects.equals(this.reportMethod, projectModel.reportMethod) &&
        Objects.equals(this.shortCode, projectModel.shortCode) &&
        Objects.equals(this.startDate, projectModel.startDate) &&
        Objects.equals(this.status, projectModel.status) &&
        Objects.equals(this.statusValue, projectModel.statusValue) &&
        Objects.equals(this.userModel, projectModel.userModel) &&
        Objects.equals(this.userModelList, projectModel.userModelList)&&
        Objects.equals(this.additionalProperties, projectModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(probability, account, accountModel, accountName, billingType, cid, contactPerson, contactPersonName, createts, createuserid, endDate, groupName, industry, lastupdateuserid, locationid, pgroupid, pmMail, probability, projProbability, projStatus, projectDesc, projectGroupModel, projectId, projectName, puid, reportMethod, shortCode, startDate, status, statusValue, userModel, userModelList, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectModel {\n");
    sb.append("    probability: ").append(toIndentedString(probability)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    accountModel: ").append(toIndentedString(accountModel)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    billingType: ").append(toIndentedString(billingType)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    contactPerson: ").append(toIndentedString(contactPerson)).append("\n");
    sb.append("    contactPersonName: ").append(toIndentedString(contactPersonName)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    createuserid: ").append(toIndentedString(createuserid)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
    sb.append("    lastupdateuserid: ").append(toIndentedString(lastupdateuserid)).append("\n");
    sb.append("    locationid: ").append(toIndentedString(locationid)).append("\n");
    sb.append("    pgroupid: ").append(toIndentedString(pgroupid)).append("\n");
    sb.append("    pmMail: ").append(toIndentedString(pmMail)).append("\n");
    sb.append("    probability: ").append(toIndentedString(probability)).append("\n");
    sb.append("    projProbability: ").append(toIndentedString(projProbability)).append("\n");
    sb.append("    projStatus: ").append(toIndentedString(projStatus)).append("\n");
    sb.append("    projectDesc: ").append(toIndentedString(projectDesc)).append("\n");
    sb.append("    projectGroupModel: ").append(toIndentedString(projectGroupModel)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    puid: ").append(toIndentedString(puid)).append("\n");
    sb.append("    reportMethod: ").append(toIndentedString(reportMethod)).append("\n");
    sb.append("    shortCode: ").append(toIndentedString(shortCode)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusValue: ").append(toIndentedString(statusValue)).append("\n");
    sb.append("    userModel: ").append(toIndentedString(userModel)).append("\n");
    sb.append("    userModelList: ").append(toIndentedString(userModelList)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Probability");
    openapiFields.add("account");
    openapiFields.add("accountModel");
    openapiFields.add("accountName");
    openapiFields.add("billing_type");
    openapiFields.add("cid");
    openapiFields.add("contactPerson");
    openapiFields.add("contactPersonName");
    openapiFields.add("createts");
    openapiFields.add("createuserid");
    openapiFields.add("endDate");
    openapiFields.add("groupName");
    openapiFields.add("industry");
    openapiFields.add("lastupdateuserid");
    openapiFields.add("locationid");
    openapiFields.add("pgroupid");
    openapiFields.add("pmMail");
    openapiFields.add("probability");
    openapiFields.add("projProbability");
    openapiFields.add("projStatus");
    openapiFields.add("projectDesc");
    openapiFields.add("projectGroupModel");
    openapiFields.add("projectId");
    openapiFields.add("projectName");
    openapiFields.add("puid");
    openapiFields.add("reportMethod");
    openapiFields.add("shortCode");
    openapiFields.add("startDate");
    openapiFields.add("status");
    openapiFields.add("statusValue");
    openapiFields.add("userModel");
    openapiFields.add("userModelList");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ProjectModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ProjectModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProjectModel is not found in the empty JSON string", ProjectModel.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `accountModel`
      if (jsonObj.get("accountModel") != null && !jsonObj.get("accountModel").isJsonNull()) {
        AccountModel.validateJsonObject(jsonObj.getAsJsonObject("accountModel"));
      }
      if ((jsonObj.get("accountName") != null && !jsonObj.get("accountName").isJsonNull()) && !jsonObj.get("accountName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountName").toString()));
      }
      if ((jsonObj.get("billing_type") != null && !jsonObj.get("billing_type").isJsonNull()) && !jsonObj.get("billing_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_type").toString()));
      }
      if ((jsonObj.get("contactPersonName") != null && !jsonObj.get("contactPersonName").isJsonNull()) && !jsonObj.get("contactPersonName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactPersonName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactPersonName").toString()));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      if ((jsonObj.get("groupName") != null && !jsonObj.get("groupName").isJsonNull()) && !jsonObj.get("groupName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `groupName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("groupName").toString()));
      }
      if ((jsonObj.get("industry") != null && !jsonObj.get("industry").isJsonNull()) && !jsonObj.get("industry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `industry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("industry").toString()));
      }
      if ((jsonObj.get("pmMail") != null && !jsonObj.get("pmMail").isJsonNull()) && !jsonObj.get("pmMail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pmMail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pmMail").toString()));
      }
      if ((jsonObj.get("projStatus") != null && !jsonObj.get("projStatus").isJsonNull()) && !jsonObj.get("projStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projStatus").toString()));
      }
      if ((jsonObj.get("projectDesc") != null && !jsonObj.get("projectDesc").isJsonNull()) && !jsonObj.get("projectDesc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectDesc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectDesc").toString()));
      }
      // validate the optional field `projectGroupModel`
      if (jsonObj.get("projectGroupModel") != null && !jsonObj.get("projectGroupModel").isJsonNull()) {
        ProjectGroupModel.validateJsonObject(jsonObj.getAsJsonObject("projectGroupModel"));
      }
      if ((jsonObj.get("projectName") != null && !jsonObj.get("projectName").isJsonNull()) && !jsonObj.get("projectName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectName").toString()));
      }
      if ((jsonObj.get("puid") != null && !jsonObj.get("puid").isJsonNull()) && !jsonObj.get("puid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `puid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("puid").toString()));
      }
      if ((jsonObj.get("reportMethod") != null && !jsonObj.get("reportMethod").isJsonNull()) && !jsonObj.get("reportMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportMethod").toString()));
      }
      if ((jsonObj.get("shortCode") != null && !jsonObj.get("shortCode").isJsonNull()) && !jsonObj.get("shortCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shortCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shortCode").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("statusValue") != null && !jsonObj.get("statusValue").isJsonNull()) && !jsonObj.get("statusValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusValue").toString()));
      }
      // validate the optional field `userModel`
      if (jsonObj.get("userModel") != null && !jsonObj.get("userModel").isJsonNull()) {
        UserViewModel.validateJsonObject(jsonObj.getAsJsonObject("userModel"));
      }
      if (jsonObj.get("userModelList") != null && !jsonObj.get("userModelList").isJsonNull()) {
        JsonArray jsonArrayuserModelList = jsonObj.getAsJsonArray("userModelList");
        if (jsonArrayuserModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("userModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `userModelList` to be an array in the JSON string but got `%s`", jsonObj.get("userModelList").toString()));
          }

          // validate the optional field `userModelList` (array)
          for (int i = 0; i < jsonArrayuserModelList.size(); i++) {
            UserModel.validateJsonObject(jsonArrayuserModelList.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProjectModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProjectModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProjectModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProjectModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ProjectModel>() {
           @Override
           public void write(JsonWriter out, ProjectModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ProjectModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ProjectModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProjectModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProjectModel
  * @throws IOException if the JSON string is invalid with respect to ProjectModel
  */
  public static ProjectModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProjectModel.class);
  }

 /**
  * Convert an instance of ProjectModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

