/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CandidateModel;
import com.konfigthis.client.model.DynaFormSectionAssignmentModel;
import com.konfigthis.client.model.DynaFormSlimModel;
import com.konfigthis.client.model.UserModel;
import com.konfigthis.client.model.UserViewModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * DynamicFormAssignmentModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class DynamicFormAssignmentModel {
  public static final String SERIALIZED_NAME_ALLOW_GRADER = "allowGrader";
  @SerializedName(SERIALIZED_NAME_ALLOW_GRADER)
  private Boolean allowGrader;

  public static final String SERIALIZED_NAME_ASSESSMENT_SCORE = "assessmentScore";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_SCORE)
  private Double assessmentScore;

  public static final String SERIALIZED_NAME_ASSIGN_CANDIDATE_MODEL = "assignCandidateModel";
  @SerializedName(SERIALIZED_NAME_ASSIGN_CANDIDATE_MODEL)
  private CandidateModel assignCandidateModel;

  public static final String SERIALIZED_NAME_ASSIGN_USER_MODEL = "assignUserModel";
  @SerializedName(SERIALIZED_NAME_ASSIGN_USER_MODEL)
  private UserModel assignUserModel;

  public static final String SERIALIZED_NAME_ASSIGN_USER_VIEW_MODEL = "assignUserViewModel";
  @SerializedName(SERIALIZED_NAME_ASSIGN_USER_VIEW_MODEL)
  private UserViewModel assignUserViewModel;

  public static final String SERIALIZED_NAME_ASSIGNMENT_ID = "assignmentId";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_ID)
  private Integer assignmentId;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CREATE_USER_MODEL = "createUserModel";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_MODEL)
  private UserModel createUserModel;

  public static final String SERIALIZED_NAME_CREATE_USER_VIEW_MODEL = "createUserViewModel";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_VIEW_MODEL)
  private UserViewModel createUserViewModel;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_DUE_DATE = "dueDate";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private LocalDate dueDate;

  public static final String SERIALIZED_NAME_DYNA_FORM_MODEL = "dynaFormModel";
  @SerializedName(SERIALIZED_NAME_DYNA_FORM_MODEL)
  private DynaFormSlimModel dynaFormModel;

  public static final String SERIALIZED_NAME_DYNA_FORM_SECTION_ASSIGNMENT_MODEL = "dynaFormSectionAssignmentModel";
  @SerializedName(SERIALIZED_NAME_DYNA_FORM_SECTION_ASSIGNMENT_MODEL)
  private List<DynaFormSectionAssignmentModel> dynaFormSectionAssignmentModel = null;

  public static final String SERIALIZED_NAME_FORM_SUMMARY = "formSummary";
  @SerializedName(SERIALIZED_NAME_FORM_SUMMARY)
  private String formSummary;

  public static final String SERIALIZED_NAME_GRADER_USER_MODEL = "graderUserModel";
  @SerializedName(SERIALIZED_NAME_GRADER_USER_MODEL)
  private UserModel graderUserModel;

  public static final String SERIALIZED_NAME_LASTUPDATETS = "lastupdatets";
  @SerializedName(SERIALIZED_NAME_LASTUPDATETS)
  private Timestamp lastupdatets;

  public static final String SERIALIZED_NAME_OPTED_OUT_FOR_EMAIL = "optedOutForEmail";
  @SerializedName(SERIALIZED_NAME_OPTED_OUT_FOR_EMAIL)
  private Boolean optedOutForEmail;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TEST_ENDTS = "testEndts";
  @SerializedName(SERIALIZED_NAME_TEST_ENDTS)
  private Timestamp testEndts;

  public static final String SERIALIZED_NAME_TEST_RESULT = "testResult";
  @SerializedName(SERIALIZED_NAME_TEST_RESULT)
  private String testResult;

  public static final String SERIALIZED_NAME_TEST_STARTTS = "testStartts";
  @SerializedName(SERIALIZED_NAME_TEST_STARTTS)
  private Timestamp testStartts;

  public static final String SERIALIZED_NAME_TEST_TIME_STATUS = "testTimeStatus";
  @SerializedName(SERIALIZED_NAME_TEST_TIME_STATUS)
  private String testTimeStatus;

  public DynamicFormAssignmentModel() {
  }

  public DynamicFormAssignmentModel allowGrader(Boolean allowGrader) {
    
    
    
    
    this.allowGrader = allowGrader;
    return this;
  }

   /**
   * Get allowGrader
   * @return allowGrader
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowGrader() {
    return allowGrader;
  }


  public void setAllowGrader(Boolean allowGrader) {
    
    
    
    this.allowGrader = allowGrader;
  }


  public DynamicFormAssignmentModel assessmentScore(Double assessmentScore) {
    
    
    
    
    this.assessmentScore = assessmentScore;
    return this;
  }

   /**
   * Get assessmentScore
   * @return assessmentScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAssessmentScore() {
    return assessmentScore;
  }


  public void setAssessmentScore(Double assessmentScore) {
    
    
    
    this.assessmentScore = assessmentScore;
  }


  public DynamicFormAssignmentModel assignCandidateModel(CandidateModel assignCandidateModel) {
    
    
    
    
    this.assignCandidateModel = assignCandidateModel;
    return this;
  }

   /**
   * Get assignCandidateModel
   * @return assignCandidateModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CandidateModel getAssignCandidateModel() {
    return assignCandidateModel;
  }


  public void setAssignCandidateModel(CandidateModel assignCandidateModel) {
    
    
    
    this.assignCandidateModel = assignCandidateModel;
  }


  public DynamicFormAssignmentModel assignUserModel(UserModel assignUserModel) {
    
    
    
    
    this.assignUserModel = assignUserModel;
    return this;
  }

   /**
   * Get assignUserModel
   * @return assignUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getAssignUserModel() {
    return assignUserModel;
  }


  public void setAssignUserModel(UserModel assignUserModel) {
    
    
    
    this.assignUserModel = assignUserModel;
  }


  public DynamicFormAssignmentModel assignUserViewModel(UserViewModel assignUserViewModel) {
    
    
    
    
    this.assignUserViewModel = assignUserViewModel;
    return this;
  }

   /**
   * Get assignUserViewModel
   * @return assignUserViewModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserViewModel getAssignUserViewModel() {
    return assignUserViewModel;
  }


  public void setAssignUserViewModel(UserViewModel assignUserViewModel) {
    
    
    
    this.assignUserViewModel = assignUserViewModel;
  }


  public DynamicFormAssignmentModel assignmentId(Integer assignmentId) {
    
    
    
    
    this.assignmentId = assignmentId;
    return this;
  }

   /**
   * Get assignmentId
   * @return assignmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAssignmentId() {
    return assignmentId;
  }


  public void setAssignmentId(Integer assignmentId) {
    
    
    
    this.assignmentId = assignmentId;
  }


  public DynamicFormAssignmentModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public DynamicFormAssignmentModel createUserModel(UserModel createUserModel) {
    
    
    
    
    this.createUserModel = createUserModel;
    return this;
  }

   /**
   * Get createUserModel
   * @return createUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getCreateUserModel() {
    return createUserModel;
  }


  public void setCreateUserModel(UserModel createUserModel) {
    
    
    
    this.createUserModel = createUserModel;
  }


  public DynamicFormAssignmentModel createUserViewModel(UserViewModel createUserViewModel) {
    
    
    
    
    this.createUserViewModel = createUserViewModel;
    return this;
  }

   /**
   * Get createUserViewModel
   * @return createUserViewModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserViewModel getCreateUserViewModel() {
    return createUserViewModel;
  }


  public void setCreateUserViewModel(UserViewModel createUserViewModel) {
    
    
    
    this.createUserViewModel = createUserViewModel;
  }


  public DynamicFormAssignmentModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public DynamicFormAssignmentModel dueDate(LocalDate dueDate) {
    
    
    
    
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getDueDate() {
    return dueDate;
  }


  public void setDueDate(LocalDate dueDate) {
    
    
    
    this.dueDate = dueDate;
  }


  public DynamicFormAssignmentModel dynaFormModel(DynaFormSlimModel dynaFormModel) {
    
    
    
    
    this.dynaFormModel = dynaFormModel;
    return this;
  }

   /**
   * Get dynaFormModel
   * @return dynaFormModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DynaFormSlimModel getDynaFormModel() {
    return dynaFormModel;
  }


  public void setDynaFormModel(DynaFormSlimModel dynaFormModel) {
    
    
    
    this.dynaFormModel = dynaFormModel;
  }


  public DynamicFormAssignmentModel dynaFormSectionAssignmentModel(List<DynaFormSectionAssignmentModel> dynaFormSectionAssignmentModel) {
    
    
    
    
    this.dynaFormSectionAssignmentModel = dynaFormSectionAssignmentModel;
    return this;
  }

  public DynamicFormAssignmentModel addDynaFormSectionAssignmentModelItem(DynaFormSectionAssignmentModel dynaFormSectionAssignmentModelItem) {
    if (this.dynaFormSectionAssignmentModel == null) {
      this.dynaFormSectionAssignmentModel = new ArrayList<>();
    }
    this.dynaFormSectionAssignmentModel.add(dynaFormSectionAssignmentModelItem);
    return this;
  }

   /**
   * Get dynaFormSectionAssignmentModel
   * @return dynaFormSectionAssignmentModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DynaFormSectionAssignmentModel> getDynaFormSectionAssignmentModel() {
    return dynaFormSectionAssignmentModel;
  }


  public void setDynaFormSectionAssignmentModel(List<DynaFormSectionAssignmentModel> dynaFormSectionAssignmentModel) {
    
    
    
    this.dynaFormSectionAssignmentModel = dynaFormSectionAssignmentModel;
  }


  public DynamicFormAssignmentModel formSummary(String formSummary) {
    
    
    
    
    this.formSummary = formSummary;
    return this;
  }

   /**
   * Get formSummary
   * @return formSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFormSummary() {
    return formSummary;
  }


  public void setFormSummary(String formSummary) {
    
    
    
    this.formSummary = formSummary;
  }


  public DynamicFormAssignmentModel graderUserModel(UserModel graderUserModel) {
    
    
    
    
    this.graderUserModel = graderUserModel;
    return this;
  }

   /**
   * Get graderUserModel
   * @return graderUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getGraderUserModel() {
    return graderUserModel;
  }


  public void setGraderUserModel(UserModel graderUserModel) {
    
    
    
    this.graderUserModel = graderUserModel;
  }


  public DynamicFormAssignmentModel lastupdatets(Timestamp lastupdatets) {
    
    
    
    
    this.lastupdatets = lastupdatets;
    return this;
  }

   /**
   * Get lastupdatets
   * @return lastupdatets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getLastupdatets() {
    return lastupdatets;
  }


  public void setLastupdatets(Timestamp lastupdatets) {
    
    
    
    this.lastupdatets = lastupdatets;
  }


  public DynamicFormAssignmentModel optedOutForEmail(Boolean optedOutForEmail) {
    
    
    
    
    this.optedOutForEmail = optedOutForEmail;
    return this;
  }

   /**
   * Get optedOutForEmail
   * @return optedOutForEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getOptedOutForEmail() {
    return optedOutForEmail;
  }


  public void setOptedOutForEmail(Boolean optedOutForEmail) {
    
    
    
    this.optedOutForEmail = optedOutForEmail;
  }


  public DynamicFormAssignmentModel status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public DynamicFormAssignmentModel testEndts(Timestamp testEndts) {
    
    
    
    
    this.testEndts = testEndts;
    return this;
  }

   /**
   * Get testEndts
   * @return testEndts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getTestEndts() {
    return testEndts;
  }


  public void setTestEndts(Timestamp testEndts) {
    
    
    
    this.testEndts = testEndts;
  }


  public DynamicFormAssignmentModel testResult(String testResult) {
    
    
    
    
    this.testResult = testResult;
    return this;
  }

   /**
   * Get testResult
   * @return testResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTestResult() {
    return testResult;
  }


  public void setTestResult(String testResult) {
    
    
    
    this.testResult = testResult;
  }


  public DynamicFormAssignmentModel testStartts(Timestamp testStartts) {
    
    
    
    
    this.testStartts = testStartts;
    return this;
  }

   /**
   * Get testStartts
   * @return testStartts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getTestStartts() {
    return testStartts;
  }


  public void setTestStartts(Timestamp testStartts) {
    
    
    
    this.testStartts = testStartts;
  }


  public DynamicFormAssignmentModel testTimeStatus(String testTimeStatus) {
    
    
    
    
    this.testTimeStatus = testTimeStatus;
    return this;
  }

   /**
   * Get testTimeStatus
   * @return testTimeStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTestTimeStatus() {
    return testTimeStatus;
  }


  public void setTestTimeStatus(String testTimeStatus) {
    
    
    
    this.testTimeStatus = testTimeStatus;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the DynamicFormAssignmentModel instance itself
   */
  public DynamicFormAssignmentModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DynamicFormAssignmentModel dynamicFormAssignmentModel = (DynamicFormAssignmentModel) o;
    return Objects.equals(this.allowGrader, dynamicFormAssignmentModel.allowGrader) &&
        Objects.equals(this.assessmentScore, dynamicFormAssignmentModel.assessmentScore) &&
        Objects.equals(this.assignCandidateModel, dynamicFormAssignmentModel.assignCandidateModel) &&
        Objects.equals(this.assignUserModel, dynamicFormAssignmentModel.assignUserModel) &&
        Objects.equals(this.assignUserViewModel, dynamicFormAssignmentModel.assignUserViewModel) &&
        Objects.equals(this.assignmentId, dynamicFormAssignmentModel.assignmentId) &&
        Objects.equals(this.cid, dynamicFormAssignmentModel.cid) &&
        Objects.equals(this.createUserModel, dynamicFormAssignmentModel.createUserModel) &&
        Objects.equals(this.createUserViewModel, dynamicFormAssignmentModel.createUserViewModel) &&
        Objects.equals(this.createts, dynamicFormAssignmentModel.createts) &&
        Objects.equals(this.dueDate, dynamicFormAssignmentModel.dueDate) &&
        Objects.equals(this.dynaFormModel, dynamicFormAssignmentModel.dynaFormModel) &&
        Objects.equals(this.dynaFormSectionAssignmentModel, dynamicFormAssignmentModel.dynaFormSectionAssignmentModel) &&
        Objects.equals(this.formSummary, dynamicFormAssignmentModel.formSummary) &&
        Objects.equals(this.graderUserModel, dynamicFormAssignmentModel.graderUserModel) &&
        Objects.equals(this.lastupdatets, dynamicFormAssignmentModel.lastupdatets) &&
        Objects.equals(this.optedOutForEmail, dynamicFormAssignmentModel.optedOutForEmail) &&
        Objects.equals(this.status, dynamicFormAssignmentModel.status) &&
        Objects.equals(this.testEndts, dynamicFormAssignmentModel.testEndts) &&
        Objects.equals(this.testResult, dynamicFormAssignmentModel.testResult) &&
        Objects.equals(this.testStartts, dynamicFormAssignmentModel.testStartts) &&
        Objects.equals(this.testTimeStatus, dynamicFormAssignmentModel.testTimeStatus)&&
        Objects.equals(this.additionalProperties, dynamicFormAssignmentModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowGrader, assessmentScore, assignCandidateModel, assignUserModel, assignUserViewModel, assignmentId, cid, createUserModel, createUserViewModel, createts, dueDate, dynaFormModel, dynaFormSectionAssignmentModel, formSummary, graderUserModel, lastupdatets, optedOutForEmail, status, testEndts, testResult, testStartts, testTimeStatus, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DynamicFormAssignmentModel {\n");
    sb.append("    allowGrader: ").append(toIndentedString(allowGrader)).append("\n");
    sb.append("    assessmentScore: ").append(toIndentedString(assessmentScore)).append("\n");
    sb.append("    assignCandidateModel: ").append(toIndentedString(assignCandidateModel)).append("\n");
    sb.append("    assignUserModel: ").append(toIndentedString(assignUserModel)).append("\n");
    sb.append("    assignUserViewModel: ").append(toIndentedString(assignUserViewModel)).append("\n");
    sb.append("    assignmentId: ").append(toIndentedString(assignmentId)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    createUserModel: ").append(toIndentedString(createUserModel)).append("\n");
    sb.append("    createUserViewModel: ").append(toIndentedString(createUserViewModel)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    dynaFormModel: ").append(toIndentedString(dynaFormModel)).append("\n");
    sb.append("    dynaFormSectionAssignmentModel: ").append(toIndentedString(dynaFormSectionAssignmentModel)).append("\n");
    sb.append("    formSummary: ").append(toIndentedString(formSummary)).append("\n");
    sb.append("    graderUserModel: ").append(toIndentedString(graderUserModel)).append("\n");
    sb.append("    lastupdatets: ").append(toIndentedString(lastupdatets)).append("\n");
    sb.append("    optedOutForEmail: ").append(toIndentedString(optedOutForEmail)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    testEndts: ").append(toIndentedString(testEndts)).append("\n");
    sb.append("    testResult: ").append(toIndentedString(testResult)).append("\n");
    sb.append("    testStartts: ").append(toIndentedString(testStartts)).append("\n");
    sb.append("    testTimeStatus: ").append(toIndentedString(testTimeStatus)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowGrader");
    openapiFields.add("assessmentScore");
    openapiFields.add("assignCandidateModel");
    openapiFields.add("assignUserModel");
    openapiFields.add("assignUserViewModel");
    openapiFields.add("assignmentId");
    openapiFields.add("cid");
    openapiFields.add("createUserModel");
    openapiFields.add("createUserViewModel");
    openapiFields.add("createts");
    openapiFields.add("dueDate");
    openapiFields.add("dynaFormModel");
    openapiFields.add("dynaFormSectionAssignmentModel");
    openapiFields.add("formSummary");
    openapiFields.add("graderUserModel");
    openapiFields.add("lastupdatets");
    openapiFields.add("optedOutForEmail");
    openapiFields.add("status");
    openapiFields.add("testEndts");
    openapiFields.add("testResult");
    openapiFields.add("testStartts");
    openapiFields.add("testTimeStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DynamicFormAssignmentModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DynamicFormAssignmentModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DynamicFormAssignmentModel is not found in the empty JSON string", DynamicFormAssignmentModel.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `assignCandidateModel`
      if (jsonObj.get("assignCandidateModel") != null && !jsonObj.get("assignCandidateModel").isJsonNull()) {
        CandidateModel.validateJsonObject(jsonObj.getAsJsonObject("assignCandidateModel"));
      }
      // validate the optional field `assignUserModel`
      if (jsonObj.get("assignUserModel") != null && !jsonObj.get("assignUserModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("assignUserModel"));
      }
      // validate the optional field `assignUserViewModel`
      if (jsonObj.get("assignUserViewModel") != null && !jsonObj.get("assignUserViewModel").isJsonNull()) {
        UserViewModel.validateJsonObject(jsonObj.getAsJsonObject("assignUserViewModel"));
      }
      // validate the optional field `createUserModel`
      if (jsonObj.get("createUserModel") != null && !jsonObj.get("createUserModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("createUserModel"));
      }
      // validate the optional field `createUserViewModel`
      if (jsonObj.get("createUserViewModel") != null && !jsonObj.get("createUserViewModel").isJsonNull()) {
        UserViewModel.validateJsonObject(jsonObj.getAsJsonObject("createUserViewModel"));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      // validate the optional field `dynaFormModel`
      if (jsonObj.get("dynaFormModel") != null && !jsonObj.get("dynaFormModel").isJsonNull()) {
        DynaFormSlimModel.validateJsonObject(jsonObj.getAsJsonObject("dynaFormModel"));
      }
      if (jsonObj.get("dynaFormSectionAssignmentModel") != null && !jsonObj.get("dynaFormSectionAssignmentModel").isJsonNull()) {
        JsonArray jsonArraydynaFormSectionAssignmentModel = jsonObj.getAsJsonArray("dynaFormSectionAssignmentModel");
        if (jsonArraydynaFormSectionAssignmentModel != null) {
          // ensure the json data is an array
          if (!jsonObj.get("dynaFormSectionAssignmentModel").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `dynaFormSectionAssignmentModel` to be an array in the JSON string but got `%s`", jsonObj.get("dynaFormSectionAssignmentModel").toString()));
          }

          // validate the optional field `dynaFormSectionAssignmentModel` (array)
          for (int i = 0; i < jsonArraydynaFormSectionAssignmentModel.size(); i++) {
            DynaFormSectionAssignmentModel.validateJsonObject(jsonArraydynaFormSectionAssignmentModel.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("formSummary") != null && !jsonObj.get("formSummary").isJsonNull()) && !jsonObj.get("formSummary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `formSummary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("formSummary").toString()));
      }
      // validate the optional field `graderUserModel`
      if (jsonObj.get("graderUserModel") != null && !jsonObj.get("graderUserModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("graderUserModel"));
      }
      // validate the optional field `lastupdatets`
      if (jsonObj.get("lastupdatets") != null && !jsonObj.get("lastupdatets").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("lastupdatets"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `testEndts`
      if (jsonObj.get("testEndts") != null && !jsonObj.get("testEndts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("testEndts"));
      }
      if ((jsonObj.get("testResult") != null && !jsonObj.get("testResult").isJsonNull()) && !jsonObj.get("testResult").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `testResult` to be a primitive type in the JSON string but got `%s`", jsonObj.get("testResult").toString()));
      }
      // validate the optional field `testStartts`
      if (jsonObj.get("testStartts") != null && !jsonObj.get("testStartts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("testStartts"));
      }
      if ((jsonObj.get("testTimeStatus") != null && !jsonObj.get("testTimeStatus").isJsonNull()) && !jsonObj.get("testTimeStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `testTimeStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("testTimeStatus").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DynamicFormAssignmentModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DynamicFormAssignmentModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DynamicFormAssignmentModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DynamicFormAssignmentModel.class));

       return (TypeAdapter<T>) new TypeAdapter<DynamicFormAssignmentModel>() {
           @Override
           public void write(JsonWriter out, DynamicFormAssignmentModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public DynamicFormAssignmentModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             DynamicFormAssignmentModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DynamicFormAssignmentModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DynamicFormAssignmentModel
  * @throws IOException if the JSON string is invalid with respect to DynamicFormAssignmentModel
  */
  public static DynamicFormAssignmentModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DynamicFormAssignmentModel.class);
  }

 /**
  * Convert an instance of DynamicFormAssignmentModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

