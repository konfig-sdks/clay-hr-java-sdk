/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CustomFieldModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * FinancialModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class FinancialModel {
  public static final String SERIALIZED_NAME_AMOUNT_TYPE = "AmountType";
  @SerializedName(SERIALIZED_NAME_AMOUNT_TYPE)
  private String amountType;

  public static final String SERIALIZED_NAME_AMOUNT_CHANGE = "amountChange";
  @SerializedName(SERIALIZED_NAME_AMOUNT_CHANGE)
  private Double amountChange;

  public static final String SERIALIZED_NAME_AMOUNT_TYPE = "amountType";
  @SerializedName(SERIALIZED_NAME_AMOUNT_TYPE)
  private String amountType;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_COMPENSATION_TYPE = "compensationType";
  @SerializedName(SERIALIZED_NAME_COMPENSATION_TYPE)
  private String compensationType;

  public static final String SERIALIZED_NAME_CREATE_USER_ID = "createUserId";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_ID)
  private Integer createUserId;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD_MODEL_LIST = "customFieldModelList";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD_MODEL_LIST)
  private List<CustomFieldModel> customFieldModelList = null;

  public static final String SERIALIZED_NAME_EFFECTIVEDATE = "effectivedate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVEDATE)
  private LocalDate effectivedate;

  public static final String SERIALIZED_NAME_ENDDATE = "enddate";
  @SerializedName(SERIALIZED_NAME_ENDDATE)
  private LocalDate enddate;

  public static final String SERIALIZED_NAME_FINANCIAL_ID = "financialId";
  @SerializedName(SERIALIZED_NAME_FINANCIAL_ID)
  private Integer financialId;

  public static final String SERIALIZED_NAME_FINANCIAL_TYPE = "financialType";
  @SerializedName(SERIALIZED_NAME_FINANCIAL_TYPE)
  private String financialType;

  public static final String SERIALIZED_NAME_FINCODE = "fincode";
  @SerializedName(SERIALIZED_NAME_FINCODE)
  private String fincode;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_PERIOD = "period";
  @SerializedName(SERIALIZED_NAME_PERIOD)
  private String period;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private Integer projectId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Double value;

  public FinancialModel() {
  }

  public FinancialModel amountType(String amountType) {
    
    
    
    
    this.amountType = amountType;
    return this;
  }

   /**
   * Get amountType
   * @return amountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAmountType() {
    return amountType;
  }


  public void setAmountType(String amountType) {
    
    
    
    this.amountType = amountType;
  }


  public FinancialModel amountChange(Double amountChange) {
    
    
    
    
    this.amountChange = amountChange;
    return this;
  }

   /**
   * Get amountChange
   * @return amountChange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAmountChange() {
    return amountChange;
  }


  public void setAmountChange(Double amountChange) {
    
    
    
    this.amountChange = amountChange;
  }


  public FinancialModel amountType(String amountType) {
    
    
    
    
    this.amountType = amountType;
    return this;
  }

   /**
   * Get amountType
   * @return amountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAmountType() {
    return amountType;
  }


  public void setAmountType(String amountType) {
    
    
    
    this.amountType = amountType;
  }


  public FinancialModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public FinancialModel compensationType(String compensationType) {
    
    
    
    
    this.compensationType = compensationType;
    return this;
  }

   /**
   * Get compensationType
   * @return compensationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompensationType() {
    return compensationType;
  }


  public void setCompensationType(String compensationType) {
    
    
    
    this.compensationType = compensationType;
  }


  public FinancialModel createUserId(Integer createUserId) {
    
    
    
    
    this.createUserId = createUserId;
    return this;
  }

   /**
   * Get createUserId
   * @return createUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateUserId() {
    return createUserId;
  }


  public void setCreateUserId(Integer createUserId) {
    
    
    
    this.createUserId = createUserId;
  }


  public FinancialModel currencyCode(String currencyCode) {
    
    
    
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    
    
    
    this.currencyCode = currencyCode;
  }


  public FinancialModel customFieldModelList(List<CustomFieldModel> customFieldModelList) {
    
    
    
    
    this.customFieldModelList = customFieldModelList;
    return this;
  }

  public FinancialModel addCustomFieldModelListItem(CustomFieldModel customFieldModelListItem) {
    if (this.customFieldModelList == null) {
      this.customFieldModelList = new ArrayList<>();
    }
    this.customFieldModelList.add(customFieldModelListItem);
    return this;
  }

   /**
   * Get customFieldModelList
   * @return customFieldModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomFieldModel> getCustomFieldModelList() {
    return customFieldModelList;
  }


  public void setCustomFieldModelList(List<CustomFieldModel> customFieldModelList) {
    
    
    
    this.customFieldModelList = customFieldModelList;
  }


  public FinancialModel effectivedate(LocalDate effectivedate) {
    
    
    
    
    this.effectivedate = effectivedate;
    return this;
  }

   /**
   * Get effectivedate
   * @return effectivedate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getEffectivedate() {
    return effectivedate;
  }


  public void setEffectivedate(LocalDate effectivedate) {
    
    
    
    this.effectivedate = effectivedate;
  }


  public FinancialModel enddate(LocalDate enddate) {
    
    
    
    
    this.enddate = enddate;
    return this;
  }

   /**
   * Get enddate
   * @return enddate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getEnddate() {
    return enddate;
  }


  public void setEnddate(LocalDate enddate) {
    
    
    
    this.enddate = enddate;
  }


  public FinancialModel financialId(Integer financialId) {
    
    
    
    
    this.financialId = financialId;
    return this;
  }

   /**
   * Get financialId
   * @return financialId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getFinancialId() {
    return financialId;
  }


  public void setFinancialId(Integer financialId) {
    
    
    
    this.financialId = financialId;
  }


  public FinancialModel financialType(String financialType) {
    
    
    
    
    this.financialType = financialType;
    return this;
  }

   /**
   * Get financialType
   * @return financialType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFinancialType() {
    return financialType;
  }


  public void setFinancialType(String financialType) {
    
    
    
    this.financialType = financialType;
  }


  public FinancialModel fincode(String fincode) {
    
    
    
    
    this.fincode = fincode;
    return this;
  }

   /**
   * Get fincode
   * @return fincode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFincode() {
    return fincode;
  }


  public void setFincode(String fincode) {
    
    
    
    this.fincode = fincode;
  }


  public FinancialModel guid(String guid) {
    
    
    
    
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    
    
    
    this.guid = guid;
  }


  public FinancialModel notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public FinancialModel period(String period) {
    
    
    
    
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPeriod() {
    return period;
  }


  public void setPeriod(String period) {
    
    
    
    this.period = period;
  }


  public FinancialModel projectId(Integer projectId) {
    
    
    
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProjectId() {
    return projectId;
  }


  public void setProjectId(Integer projectId) {
    
    
    
    this.projectId = projectId;
  }


  public FinancialModel status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public FinancialModel userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public FinancialModel value(Double value) {
    
    
    
    
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getValue() {
    return value;
  }


  public void setValue(Double value) {
    
    
    
    this.value = value;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the FinancialModel instance itself
   */
  public FinancialModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FinancialModel financialModel = (FinancialModel) o;
    return Objects.equals(this.amountType, financialModel.amountType) &&
        Objects.equals(this.amountChange, financialModel.amountChange) &&
        Objects.equals(this.amountType, financialModel.amountType) &&
        Objects.equals(this.cid, financialModel.cid) &&
        Objects.equals(this.compensationType, financialModel.compensationType) &&
        Objects.equals(this.createUserId, financialModel.createUserId) &&
        Objects.equals(this.currencyCode, financialModel.currencyCode) &&
        Objects.equals(this.customFieldModelList, financialModel.customFieldModelList) &&
        Objects.equals(this.effectivedate, financialModel.effectivedate) &&
        Objects.equals(this.enddate, financialModel.enddate) &&
        Objects.equals(this.financialId, financialModel.financialId) &&
        Objects.equals(this.financialType, financialModel.financialType) &&
        Objects.equals(this.fincode, financialModel.fincode) &&
        Objects.equals(this.guid, financialModel.guid) &&
        Objects.equals(this.notes, financialModel.notes) &&
        Objects.equals(this.period, financialModel.period) &&
        Objects.equals(this.projectId, financialModel.projectId) &&
        Objects.equals(this.status, financialModel.status) &&
        Objects.equals(this.userId, financialModel.userId) &&
        Objects.equals(this.value, financialModel.value)&&
        Objects.equals(this.additionalProperties, financialModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountType, amountChange, amountType, cid, compensationType, createUserId, currencyCode, customFieldModelList, effectivedate, enddate, financialId, financialType, fincode, guid, notes, period, projectId, status, userId, value, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FinancialModel {\n");
    sb.append("    amountType: ").append(toIndentedString(amountType)).append("\n");
    sb.append("    amountChange: ").append(toIndentedString(amountChange)).append("\n");
    sb.append("    amountType: ").append(toIndentedString(amountType)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    compensationType: ").append(toIndentedString(compensationType)).append("\n");
    sb.append("    createUserId: ").append(toIndentedString(createUserId)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    customFieldModelList: ").append(toIndentedString(customFieldModelList)).append("\n");
    sb.append("    effectivedate: ").append(toIndentedString(effectivedate)).append("\n");
    sb.append("    enddate: ").append(toIndentedString(enddate)).append("\n");
    sb.append("    financialId: ").append(toIndentedString(financialId)).append("\n");
    sb.append("    financialType: ").append(toIndentedString(financialType)).append("\n");
    sb.append("    fincode: ").append(toIndentedString(fincode)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AmountType");
    openapiFields.add("amountChange");
    openapiFields.add("amountType");
    openapiFields.add("cid");
    openapiFields.add("compensationType");
    openapiFields.add("createUserId");
    openapiFields.add("currencyCode");
    openapiFields.add("customFieldModelList");
    openapiFields.add("effectivedate");
    openapiFields.add("enddate");
    openapiFields.add("financialId");
    openapiFields.add("financialType");
    openapiFields.add("fincode");
    openapiFields.add("guid");
    openapiFields.add("notes");
    openapiFields.add("period");
    openapiFields.add("projectId");
    openapiFields.add("status");
    openapiFields.add("userId");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FinancialModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FinancialModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FinancialModel is not found in the empty JSON string", FinancialModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("AmountType") != null && !jsonObj.get("AmountType").isJsonNull()) && !jsonObj.get("AmountType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AmountType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AmountType").toString()));
      }
      if ((jsonObj.get("amountType") != null && !jsonObj.get("amountType").isJsonNull()) && !jsonObj.get("amountType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amountType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amountType").toString()));
      }
      if ((jsonObj.get("compensationType") != null && !jsonObj.get("compensationType").isJsonNull()) && !jsonObj.get("compensationType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `compensationType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("compensationType").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if (jsonObj.get("customFieldModelList") != null && !jsonObj.get("customFieldModelList").isJsonNull()) {
        JsonArray jsonArraycustomFieldModelList = jsonObj.getAsJsonArray("customFieldModelList");
        if (jsonArraycustomFieldModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customFieldModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customFieldModelList` to be an array in the JSON string but got `%s`", jsonObj.get("customFieldModelList").toString()));
          }

          // validate the optional field `customFieldModelList` (array)
          for (int i = 0; i < jsonArraycustomFieldModelList.size(); i++) {
            CustomFieldModel.validateJsonObject(jsonArraycustomFieldModelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("financialType") != null && !jsonObj.get("financialType").isJsonNull()) && !jsonObj.get("financialType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `financialType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("financialType").toString()));
      }
      if ((jsonObj.get("fincode") != null && !jsonObj.get("fincode").isJsonNull()) && !jsonObj.get("fincode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fincode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fincode").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("period") != null && !jsonObj.get("period").isJsonNull()) && !jsonObj.get("period").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `period` to be a primitive type in the JSON string but got `%s`", jsonObj.get("period").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FinancialModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FinancialModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FinancialModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FinancialModel.class));

       return (TypeAdapter<T>) new TypeAdapter<FinancialModel>() {
           @Override
           public void write(JsonWriter out, FinancialModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public FinancialModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             FinancialModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FinancialModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FinancialModel
  * @throws IOException if the JSON string is invalid with respect to FinancialModel
  */
  public static FinancialModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FinancialModel.class);
  }

 /**
  * Convert an instance of FinancialModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

