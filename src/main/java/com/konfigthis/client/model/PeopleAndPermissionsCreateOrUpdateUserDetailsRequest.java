/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressListInner;
import com.konfigthis.client.model.PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactListInner;
import com.konfigthis.client.model.PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner;
import com.konfigthis.client.model.PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialListInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PeopleAndPermissionsCreateOrUpdateUserDetailsRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PeopleAndPermissionsCreateOrUpdateUserDetailsRequest {
  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_EMP_ID = "empId";
  @SerializedName(SERIALIZED_NAME_EMP_ID)
  private String empId;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  /**
   * Status of the user. A - Active, I - Inactive, F - Future Joiner
   */
  @JsonAdapter(StatusEnum.Adapter.class)
 public enum StatusEnum {
    A("A"),
    
    I("I"),
    
    F("F");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_DISPLAY_FULL_NAME = "displayFullName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_FULL_NAME)
  private String displayFullName;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private String middleName;

  public static final String SERIALIZED_NAME_SECOND_LAST_NAME = "secondLastName";
  @SerializedName(SERIALIZED_NAME_SECOND_LAST_NAME)
  private String secondLastName;

  public static final String SERIALIZED_NAME_SHORT_NAME = "shortName";
  @SerializedName(SERIALIZED_NAME_SHORT_NAME)
  private String shortName;

  public static final String SERIALIZED_NAME_NAME_PRONUNCIATION = "namePronunciation";
  @SerializedName(SERIALIZED_NAME_NAME_PRONUNCIATION)
  private String namePronunciation;

  public static final String SERIALIZED_NAME_FAMILY_SUFFIX = "familySuffix";
  @SerializedName(SERIALIZED_NAME_FAMILY_SUFFIX)
  private String familySuffix;

  public static final String SERIALIZED_NAME_WORKER_TYPE = "workerType";
  @SerializedName(SERIALIZED_NAME_WORKER_TYPE)
  private String workerType;

  public static final String SERIALIZED_NAME_USER_DATE_OF_BIRTH = "userDateOfBirth";
  @SerializedName(SERIALIZED_NAME_USER_DATE_OF_BIRTH)
  private String userDateOfBirth;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_CELL_PHONE = "cellPhone";
  @SerializedName(SERIALIZED_NAME_CELL_PHONE)
  private String cellPhone;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private Integer position;

  public static final String SERIALIZED_NAME_DEPARTMENT_I_D = "departmentID";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_I_D)
  private Integer departmentID;

  public static final String SERIALIZED_NAME_LOCATION_ID = "locationId";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private Integer locationId;

  public static final String SERIALIZED_NAME_LOCATION_NAME = "locationName";
  @SerializedName(SERIALIZED_NAME_LOCATION_NAME)
  private String locationName;

  public static final String SERIALIZED_NAME_USER_START_DATE = "userStartDate";
  @SerializedName(SERIALIZED_NAME_USER_START_DATE)
  private String userStartDate;

  public static final String SERIALIZED_NAME_REPORTS_TO_EMAIL = "reportsToEmail";
  @SerializedName(SERIALIZED_NAME_REPORTS_TO_EMAIL)
  private List<String> reportsToEmail = null;

  public static final String SERIALIZED_NAME_ADDRESS_LIST = "addressList";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LIST)
  private List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressListInner> addressList = null;

  public static final String SERIALIZED_NAME_EDUCATION_LIST = "educationList";
  @SerializedName(SERIALIZED_NAME_EDUCATION_LIST)
  private List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner> educationList = null;

  public static final String SERIALIZED_NAME_CONTACT_LIST = "contactList";
  @SerializedName(SERIALIZED_NAME_CONTACT_LIST)
  private List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactListInner> contactList = null;

  public static final String SERIALIZED_NAME_FINANCIAL_LIST = "financialList";
  @SerializedName(SERIALIZED_NAME_FINANCIAL_LIST)
  private List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialListInner> financialList = null;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD_VALUES = "customFieldValues";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD_VALUES)
  private String customFieldValues;

  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest() {
  }

  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * First name of user.
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "First name of user.")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Mail ID of user.
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Mail ID of user.")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name of user.
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last name of user.")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest empId(String empId) {
    
    
    
    
    this.empId = empId;
    return this;
  }

   /**
   * Employee ID of the user.
   * @return empId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee ID of the user.")

  public String getEmpId() {
    return empId;
  }


  public void setEmpId(String empId) {
    
    
    
    this.empId = empId;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Gender of the user.
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gender of the user.")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest guid(String guid) {
    
    
    
    
    this.guid = guid;
    return this;
  }

   /**
   * The unique system generated ID of the user.
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique system generated ID of the user.")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    
    
    
    this.guid = guid;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest status(StatusEnum status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Status of the user. A - Active, I - Inactive, F - Future Joiner
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status of the user. A - Active, I - Inactive, F - Future Joiner")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    
    
    
    this.status = status;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest displayFullName(String displayFullName) {
    
    
    
    
    this.displayFullName = displayFullName;
    return this;
  }

   /**
   * Display name of the user.
   * @return displayFullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Display name of the user.")

  public String getDisplayFullName() {
    return displayFullName;
  }


  public void setDisplayFullName(String displayFullName) {
    
    
    
    this.displayFullName = displayFullName;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest middleName(String middleName) {
    
    
    
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Middle name of user.
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Middle name of user.")

  public String getMiddleName() {
    return middleName;
  }


  public void setMiddleName(String middleName) {
    
    
    
    this.middleName = middleName;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest secondLastName(String secondLastName) {
    
    
    
    
    this.secondLastName = secondLastName;
    return this;
  }

   /**
   * Second Last name of user.
   * @return secondLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Second Last name of user.")

  public String getSecondLastName() {
    return secondLastName;
  }


  public void setSecondLastName(String secondLastName) {
    
    
    
    this.secondLastName = secondLastName;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest shortName(String shortName) {
    
    
    
    
    this.shortName = shortName;
    return this;
  }

   /**
   * Short name of user.
   * @return shortName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Short name of user.")

  public String getShortName() {
    return shortName;
  }


  public void setShortName(String shortName) {
    
    
    
    this.shortName = shortName;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest namePronunciation(String namePronunciation) {
    
    
    
    
    this.namePronunciation = namePronunciation;
    return this;
  }

   /**
   * Name Pronunciation
   * @return namePronunciation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name Pronunciation")

  public String getNamePronunciation() {
    return namePronunciation;
  }


  public void setNamePronunciation(String namePronunciation) {
    
    
    
    this.namePronunciation = namePronunciation;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest familySuffix(String familySuffix) {
    
    
    
    
    this.familySuffix = familySuffix;
    return this;
  }

   /**
   * Family Suffix
   * @return familySuffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Family Suffix")

  public String getFamilySuffix() {
    return familySuffix;
  }


  public void setFamilySuffix(String familySuffix) {
    
    
    
    this.familySuffix = familySuffix;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest workerType(String workerType) {
    
    
    
    
    this.workerType = workerType;
    return this;
  }

   /**
   * Worker type of the user.
   * @return workerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Worker type of the user.")

  public String getWorkerType() {
    return workerType;
  }


  public void setWorkerType(String workerType) {
    
    
    
    this.workerType = workerType;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest userDateOfBirth(String userDateOfBirth) {
    
    
    
    
    this.userDateOfBirth = userDateOfBirth;
    return this;
  }

   /**
   * Birth date of user.
   * @return userDateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Birth date of user.")

  public String getUserDateOfBirth() {
    return userDateOfBirth;
  }


  public void setUserDateOfBirth(String userDateOfBirth) {
    
    
    
    this.userDateOfBirth = userDateOfBirth;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest phone(String phone) {
    
    
    
    
    this.phone = phone;
    return this;
  }

   /**
   * Phone number of the user.
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Phone number of the user.")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    
    
    
    this.phone = phone;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest cellPhone(String cellPhone) {
    
    
    
    
    this.cellPhone = cellPhone;
    return this;
  }

   /**
   * Cell phone of the user.
   * @return cellPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cell phone of the user.")

  public String getCellPhone() {
    return cellPhone;
  }


  public void setCellPhone(String cellPhone) {
    
    
    
    this.cellPhone = cellPhone;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest position(Integer position) {
    
    
    
    
    this.position = position;
    return this;
  }

   /**
   * Profile ID of the user.
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Profile ID of the user.")

  public Integer getPosition() {
    return position;
  }


  public void setPosition(Integer position) {
    
    
    
    this.position = position;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest departmentID(Integer departmentID) {
    
    
    
    
    this.departmentID = departmentID;
    return this;
  }

   /**
   * Org Unit ID of the user.
   * @return departmentID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Org Unit ID of the user.")

  public Integer getDepartmentID() {
    return departmentID;
  }


  public void setDepartmentID(Integer departmentID) {
    
    
    
    this.departmentID = departmentID;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest locationId(Integer locationId) {
    
    
    
    
    this.locationId = locationId;
    return this;
  }

   /**
   * Location ID of the user.
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Location ID of the user.")

  public Integer getLocationId() {
    return locationId;
  }


  public void setLocationId(Integer locationId) {
    
    
    
    this.locationId = locationId;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest locationName(String locationName) {
    
    
    
    
    this.locationName = locationName;
    return this;
  }

   /**
   * Location of user.
   * @return locationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Location of user.")

  public String getLocationName() {
    return locationName;
  }


  public void setLocationName(String locationName) {
    
    
    
    this.locationName = locationName;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest userStartDate(String userStartDate) {
    
    
    
    
    this.userStartDate = userStartDate;
    return this;
  }

   /**
   * Start Date of user.
   * @return userStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Start Date of user.")

  public String getUserStartDate() {
    return userStartDate;
  }


  public void setUserStartDate(String userStartDate) {
    
    
    
    this.userStartDate = userStartDate;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest reportsToEmail(List<String> reportsToEmail) {
    
    
    
    
    this.reportsToEmail = reportsToEmail;
    return this;
  }

  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest addReportsToEmailItem(String reportsToEmailItem) {
    if (this.reportsToEmail == null) {
      this.reportsToEmail = new ArrayList<>();
    }
    this.reportsToEmail.add(reportsToEmailItem);
    return this;
  }

   /**
   * Managers detail of user.
   * @return reportsToEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Managers detail of user.")

  public List<String> getReportsToEmail() {
    return reportsToEmail;
  }


  public void setReportsToEmail(List<String> reportsToEmail) {
    
    
    
    this.reportsToEmail = reportsToEmail;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest addressList(List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressListInner> addressList) {
    
    
    
    
    this.addressList = addressList;
    return this;
  }

  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest addAddressListItem(PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressListInner addressListItem) {
    if (this.addressList == null) {
      this.addressList = new ArrayList<>();
    }
    this.addressList.add(addressListItem);
    return this;
  }

   /**
   * Address detail of user.
   * @return addressList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address detail of user.")

  public List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressListInner> getAddressList() {
    return addressList;
  }


  public void setAddressList(List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressListInner> addressList) {
    
    
    
    this.addressList = addressList;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest educationList(List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner> educationList) {
    
    
    
    
    this.educationList = educationList;
    return this;
  }

  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest addEducationListItem(PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner educationListItem) {
    if (this.educationList == null) {
      this.educationList = new ArrayList<>();
    }
    this.educationList.add(educationListItem);
    return this;
  }

   /**
   * Education detail of user.
   * @return educationList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Education detail of user.")

  public List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner> getEducationList() {
    return educationList;
  }


  public void setEducationList(List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner> educationList) {
    
    
    
    this.educationList = educationList;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest contactList(List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactListInner> contactList) {
    
    
    
    
    this.contactList = contactList;
    return this;
  }

  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest addContactListItem(PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactListInner contactListItem) {
    if (this.contactList == null) {
      this.contactList = new ArrayList<>();
    }
    this.contactList.add(contactListItem);
    return this;
  }

   /**
   * Contact detail of user
   * @return contactList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contact detail of user")

  public List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactListInner> getContactList() {
    return contactList;
  }


  public void setContactList(List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactListInner> contactList) {
    
    
    
    this.contactList = contactList;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest financialList(List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialListInner> financialList) {
    
    
    
    
    this.financialList = financialList;
    return this;
  }

  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest addFinancialListItem(PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialListInner financialListItem) {
    if (this.financialList == null) {
      this.financialList = new ArrayList<>();
    }
    this.financialList.add(financialListItem);
    return this;
  }

   /**
   * Financial detail of user.
   * @return financialList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Financial detail of user.")

  public List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialListInner> getFinancialList() {
    return financialList;
  }


  public void setFinancialList(List<PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialListInner> financialList) {
    
    
    
    this.financialList = financialList;
  }


  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest customFieldValues(String customFieldValues) {
    
    
    
    
    this.customFieldValues = customFieldValues;
    return this;
  }

   /**
   * key - cfcode , value - cfvalue
   * @return customFieldValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "key - cfcode , value - cfvalue")

  public String getCustomFieldValues() {
    return customFieldValues;
  }


  public void setCustomFieldValues(String customFieldValues) {
    
    
    
    this.customFieldValues = customFieldValues;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PeopleAndPermissionsCreateOrUpdateUserDetailsRequest instance itself
   */
  public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeopleAndPermissionsCreateOrUpdateUserDetailsRequest peopleAndPermissionsCreateOrUpdateUserDetailsRequest = (PeopleAndPermissionsCreateOrUpdateUserDetailsRequest) o;
    return Objects.equals(this.firstName, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.firstName) &&
        Objects.equals(this.email, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.email) &&
        Objects.equals(this.lastName, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.lastName) &&
        Objects.equals(this.empId, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.empId) &&
        Objects.equals(this.gender, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.gender) &&
        Objects.equals(this.guid, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.guid) &&
        Objects.equals(this.status, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.status) &&
        Objects.equals(this.displayFullName, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.displayFullName) &&
        Objects.equals(this.middleName, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.middleName) &&
        Objects.equals(this.secondLastName, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.secondLastName) &&
        Objects.equals(this.shortName, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.shortName) &&
        Objects.equals(this.namePronunciation, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.namePronunciation) &&
        Objects.equals(this.familySuffix, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.familySuffix) &&
        Objects.equals(this.workerType, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.workerType) &&
        Objects.equals(this.userDateOfBirth, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.userDateOfBirth) &&
        Objects.equals(this.phone, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.phone) &&
        Objects.equals(this.cellPhone, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.cellPhone) &&
        Objects.equals(this.position, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.position) &&
        Objects.equals(this.departmentID, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.departmentID) &&
        Objects.equals(this.locationId, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.locationId) &&
        Objects.equals(this.locationName, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.locationName) &&
        Objects.equals(this.userStartDate, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.userStartDate) &&
        Objects.equals(this.reportsToEmail, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.reportsToEmail) &&
        Objects.equals(this.addressList, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.addressList) &&
        Objects.equals(this.educationList, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.educationList) &&
        Objects.equals(this.contactList, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.contactList) &&
        Objects.equals(this.financialList, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.financialList) &&
        Objects.equals(this.customFieldValues, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.customFieldValues)&&
        Objects.equals(this.additionalProperties, peopleAndPermissionsCreateOrUpdateUserDetailsRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, email, lastName, empId, gender, guid, status, displayFullName, middleName, secondLastName, shortName, namePronunciation, familySuffix, workerType, userDateOfBirth, phone, cellPhone, position, departmentID, locationId, locationName, userStartDate, reportsToEmail, addressList, educationList, contactList, financialList, customFieldValues, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeopleAndPermissionsCreateOrUpdateUserDetailsRequest {\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    empId: ").append(toIndentedString(empId)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    displayFullName: ").append(toIndentedString(displayFullName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    secondLastName: ").append(toIndentedString(secondLastName)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    namePronunciation: ").append(toIndentedString(namePronunciation)).append("\n");
    sb.append("    familySuffix: ").append(toIndentedString(familySuffix)).append("\n");
    sb.append("    workerType: ").append(toIndentedString(workerType)).append("\n");
    sb.append("    userDateOfBirth: ").append(toIndentedString(userDateOfBirth)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    cellPhone: ").append(toIndentedString(cellPhone)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    departmentID: ").append(toIndentedString(departmentID)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    locationName: ").append(toIndentedString(locationName)).append("\n");
    sb.append("    userStartDate: ").append(toIndentedString(userStartDate)).append("\n");
    sb.append("    reportsToEmail: ").append(toIndentedString(reportsToEmail)).append("\n");
    sb.append("    addressList: ").append(toIndentedString(addressList)).append("\n");
    sb.append("    educationList: ").append(toIndentedString(educationList)).append("\n");
    sb.append("    contactList: ").append(toIndentedString(contactList)).append("\n");
    sb.append("    financialList: ").append(toIndentedString(financialList)).append("\n");
    sb.append("    customFieldValues: ").append(toIndentedString(customFieldValues)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("firstName");
    openapiFields.add("email");
    openapiFields.add("lastName");
    openapiFields.add("empId");
    openapiFields.add("gender");
    openapiFields.add("guid");
    openapiFields.add("status");
    openapiFields.add("displayFullName");
    openapiFields.add("middleName");
    openapiFields.add("secondLastName");
    openapiFields.add("shortName");
    openapiFields.add("namePronunciation");
    openapiFields.add("familySuffix");
    openapiFields.add("workerType");
    openapiFields.add("userDateOfBirth");
    openapiFields.add("phone");
    openapiFields.add("cellPhone");
    openapiFields.add("position");
    openapiFields.add("departmentID");
    openapiFields.add("locationId");
    openapiFields.add("locationName");
    openapiFields.add("userStartDate");
    openapiFields.add("reportsToEmail");
    openapiFields.add("addressList");
    openapiFields.add("educationList");
    openapiFields.add("contactList");
    openapiFields.add("financialList");
    openapiFields.add("customFieldValues");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PeopleAndPermissionsCreateOrUpdateUserDetailsRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PeopleAndPermissionsCreateOrUpdateUserDetailsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PeopleAndPermissionsCreateOrUpdateUserDetailsRequest is not found in the empty JSON string", PeopleAndPermissionsCreateOrUpdateUserDetailsRequest.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("empId") != null && !jsonObj.get("empId").isJsonNull()) && !jsonObj.get("empId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `empId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("empId").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("displayFullName") != null && !jsonObj.get("displayFullName").isJsonNull()) && !jsonObj.get("displayFullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayFullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayFullName").toString()));
      }
      if ((jsonObj.get("middleName") != null && !jsonObj.get("middleName").isJsonNull()) && !jsonObj.get("middleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleName").toString()));
      }
      if ((jsonObj.get("secondLastName") != null && !jsonObj.get("secondLastName").isJsonNull()) && !jsonObj.get("secondLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondLastName").toString()));
      }
      if ((jsonObj.get("shortName") != null && !jsonObj.get("shortName").isJsonNull()) && !jsonObj.get("shortName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shortName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shortName").toString()));
      }
      if ((jsonObj.get("namePronunciation") != null && !jsonObj.get("namePronunciation").isJsonNull()) && !jsonObj.get("namePronunciation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `namePronunciation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("namePronunciation").toString()));
      }
      if ((jsonObj.get("familySuffix") != null && !jsonObj.get("familySuffix").isJsonNull()) && !jsonObj.get("familySuffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `familySuffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("familySuffix").toString()));
      }
      if ((jsonObj.get("workerType") != null && !jsonObj.get("workerType").isJsonNull()) && !jsonObj.get("workerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workerType").toString()));
      }
      if ((jsonObj.get("userDateOfBirth") != null && !jsonObj.get("userDateOfBirth").isJsonNull()) && !jsonObj.get("userDateOfBirth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDateOfBirth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDateOfBirth").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("cellPhone") != null && !jsonObj.get("cellPhone").isJsonNull()) && !jsonObj.get("cellPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cellPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cellPhone").toString()));
      }
      if ((jsonObj.get("locationName") != null && !jsonObj.get("locationName").isJsonNull()) && !jsonObj.get("locationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationName").toString()));
      }
      if ((jsonObj.get("userStartDate") != null && !jsonObj.get("userStartDate").isJsonNull()) && !jsonObj.get("userStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userStartDate").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("reportsToEmail") != null && !jsonObj.get("reportsToEmail").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportsToEmail` to be an array in the JSON string but got `%s`", jsonObj.get("reportsToEmail").toString()));
      }
      if (jsonObj.get("addressList") != null && !jsonObj.get("addressList").isJsonNull()) {
        JsonArray jsonArrayaddressList = jsonObj.getAsJsonArray("addressList");
        if (jsonArrayaddressList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addressList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addressList` to be an array in the JSON string but got `%s`", jsonObj.get("addressList").toString()));
          }

          // validate the optional field `addressList` (array)
          for (int i = 0; i < jsonArrayaddressList.size(); i++) {
            PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressListInner.validateJsonObject(jsonArrayaddressList.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("educationList") != null && !jsonObj.get("educationList").isJsonNull()) {
        JsonArray jsonArrayeducationList = jsonObj.getAsJsonArray("educationList");
        if (jsonArrayeducationList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("educationList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `educationList` to be an array in the JSON string but got `%s`", jsonObj.get("educationList").toString()));
          }

          // validate the optional field `educationList` (array)
          for (int i = 0; i < jsonArrayeducationList.size(); i++) {
            PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationListInner.validateJsonObject(jsonArrayeducationList.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("contactList") != null && !jsonObj.get("contactList").isJsonNull()) {
        JsonArray jsonArraycontactList = jsonObj.getAsJsonArray("contactList");
        if (jsonArraycontactList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("contactList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `contactList` to be an array in the JSON string but got `%s`", jsonObj.get("contactList").toString()));
          }

          // validate the optional field `contactList` (array)
          for (int i = 0; i < jsonArraycontactList.size(); i++) {
            PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactListInner.validateJsonObject(jsonArraycontactList.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("financialList") != null && !jsonObj.get("financialList").isJsonNull()) {
        JsonArray jsonArrayfinancialList = jsonObj.getAsJsonArray("financialList");
        if (jsonArrayfinancialList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("financialList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `financialList` to be an array in the JSON string but got `%s`", jsonObj.get("financialList").toString()));
          }

          // validate the optional field `financialList` (array)
          for (int i = 0; i < jsonArrayfinancialList.size(); i++) {
            PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialListInner.validateJsonObject(jsonArrayfinancialList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("customFieldValues") != null && !jsonObj.get("customFieldValues").isJsonNull()) && !jsonObj.get("customFieldValues").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customFieldValues` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customFieldValues").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PeopleAndPermissionsCreateOrUpdateUserDetailsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PeopleAndPermissionsCreateOrUpdateUserDetailsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PeopleAndPermissionsCreateOrUpdateUserDetailsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PeopleAndPermissionsCreateOrUpdateUserDetailsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PeopleAndPermissionsCreateOrUpdateUserDetailsRequest>() {
           @Override
           public void write(JsonWriter out, PeopleAndPermissionsCreateOrUpdateUserDetailsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PeopleAndPermissionsCreateOrUpdateUserDetailsRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PeopleAndPermissionsCreateOrUpdateUserDetailsRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PeopleAndPermissionsCreateOrUpdateUserDetailsRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PeopleAndPermissionsCreateOrUpdateUserDetailsRequest
  * @throws IOException if the JSON string is invalid with respect to PeopleAndPermissionsCreateOrUpdateUserDetailsRequest
  */
  public static PeopleAndPermissionsCreateOrUpdateUserDetailsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PeopleAndPermissionsCreateOrUpdateUserDetailsRequest.class);
  }

 /**
  * Convert an instance of PeopleAndPermissionsCreateOrUpdateUserDetailsRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

