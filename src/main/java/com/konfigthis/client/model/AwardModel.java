/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AwardTypeModel;
import com.konfigthis.client.model.CurrencyModel;
import com.konfigthis.client.model.UserViewModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AwardModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AwardModel {
  public static final String SERIALIZED_NAME_APPRAISAL_ID = "appraisalId";
  @SerializedName(SERIALIZED_NAME_APPRAISAL_ID)
  private Integer appraisalId;

  public static final String SERIALIZED_NAME_ATTRIBUTION = "attribution";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTION)
  private String attribution;

  public static final String SERIALIZED_NAME_AWARD_DATE = "awardDate";
  @SerializedName(SERIALIZED_NAME_AWARD_DATE)
  private LocalDate awardDate;

  public static final String SERIALIZED_NAME_AWARD_ID = "awardId";
  @SerializedName(SERIALIZED_NAME_AWARD_ID)
  private Long awardId;

  public static final String SERIALIZED_NAME_AWARD_TYPE_MODEL = "awardTypeModel";
  @SerializedName(SERIALIZED_NAME_AWARD_TYPE_MODEL)
  private AwardTypeModel awardTypeModel;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_CURRENCY_MODEL = "currencyModel";
  @SerializedName(SERIALIZED_NAME_CURRENCY_MODEL)
  private CurrencyModel currencyModel;

  public static final String SERIALIZED_NAME_FEEDBACK_ID = "feedbackId";
  @SerializedName(SERIALIZED_NAME_FEEDBACK_ID)
  private Integer feedbackId;

  public static final String SERIALIZED_NAME_FIN_ACCOUNT_CODE = "finAccountCode";
  @SerializedName(SERIALIZED_NAME_FIN_ACCOUNT_CODE)
  private String finAccountCode;

  public static final String SERIALIZED_NAME_FIN_AMOUNT = "finAmount";
  @SerializedName(SERIALIZED_NAME_FIN_AMOUNT)
  private Double finAmount;

  public static final String SERIALIZED_NAME_FIN_CURRENCY_CODE = "finCurrencyCode";
  @SerializedName(SERIALIZED_NAME_FIN_CURRENCY_CODE)
  private String finCurrencyCode;

  public static final String SERIALIZED_NAME_FIN_PAYMENT_DATE = "finPaymentDate";
  @SerializedName(SERIALIZED_NAME_FIN_PAYMENT_DATE)
  private LocalDate finPaymentDate;

  public static final String SERIALIZED_NAME_FIN_PAYMENT_STATUS = "finPaymentStatus";
  @SerializedName(SERIALIZED_NAME_FIN_PAYMENT_STATUS)
  private String finPaymentStatus;

  public static final String SERIALIZED_NAME_NON_MONETARY_COMPENSATION = "nonMonetaryCompensation";
  @SerializedName(SERIALIZED_NAME_NON_MONETARY_COMPENSATION)
  private String nonMonetaryCompensation;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_USER_VIEW_MODEL = "userViewModel";
  @SerializedName(SERIALIZED_NAME_USER_VIEW_MODEL)
  private UserViewModel userViewModel;

  public AwardModel() {
  }

  public AwardModel appraisalId(Integer appraisalId) {
    
    
    
    
    this.appraisalId = appraisalId;
    return this;
  }

   /**
   * Get appraisalId
   * @return appraisalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAppraisalId() {
    return appraisalId;
  }


  public void setAppraisalId(Integer appraisalId) {
    
    
    
    this.appraisalId = appraisalId;
  }


  public AwardModel attribution(String attribution) {
    
    
    
    
    this.attribution = attribution;
    return this;
  }

   /**
   * Get attribution
   * @return attribution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAttribution() {
    return attribution;
  }


  public void setAttribution(String attribution) {
    
    
    
    this.attribution = attribution;
  }


  public AwardModel awardDate(LocalDate awardDate) {
    
    
    
    
    this.awardDate = awardDate;
    return this;
  }

   /**
   * Get awardDate
   * @return awardDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getAwardDate() {
    return awardDate;
  }


  public void setAwardDate(LocalDate awardDate) {
    
    
    
    this.awardDate = awardDate;
  }


  public AwardModel awardId(Long awardId) {
    
    
    
    
    this.awardId = awardId;
    return this;
  }

   /**
   * Get awardId
   * @return awardId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getAwardId() {
    return awardId;
  }


  public void setAwardId(Long awardId) {
    
    
    
    this.awardId = awardId;
  }


  public AwardModel awardTypeModel(AwardTypeModel awardTypeModel) {
    
    
    
    
    this.awardTypeModel = awardTypeModel;
    return this;
  }

   /**
   * Get awardTypeModel
   * @return awardTypeModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AwardTypeModel getAwardTypeModel() {
    return awardTypeModel;
  }


  public void setAwardTypeModel(AwardTypeModel awardTypeModel) {
    
    
    
    this.awardTypeModel = awardTypeModel;
  }


  public AwardModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public AwardModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public AwardModel currencyModel(CurrencyModel currencyModel) {
    
    
    
    
    this.currencyModel = currencyModel;
    return this;
  }

   /**
   * Get currencyModel
   * @return currencyModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CurrencyModel getCurrencyModel() {
    return currencyModel;
  }


  public void setCurrencyModel(CurrencyModel currencyModel) {
    
    
    
    this.currencyModel = currencyModel;
  }


  public AwardModel feedbackId(Integer feedbackId) {
    
    
    
    
    this.feedbackId = feedbackId;
    return this;
  }

   /**
   * Get feedbackId
   * @return feedbackId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getFeedbackId() {
    return feedbackId;
  }


  public void setFeedbackId(Integer feedbackId) {
    
    
    
    this.feedbackId = feedbackId;
  }


  public AwardModel finAccountCode(String finAccountCode) {
    
    
    
    
    this.finAccountCode = finAccountCode;
    return this;
  }

   /**
   * Get finAccountCode
   * @return finAccountCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFinAccountCode() {
    return finAccountCode;
  }


  public void setFinAccountCode(String finAccountCode) {
    
    
    
    this.finAccountCode = finAccountCode;
  }


  public AwardModel finAmount(Double finAmount) {
    
    
    
    
    this.finAmount = finAmount;
    return this;
  }

   /**
   * Get finAmount
   * @return finAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getFinAmount() {
    return finAmount;
  }


  public void setFinAmount(Double finAmount) {
    
    
    
    this.finAmount = finAmount;
  }


  public AwardModel finCurrencyCode(String finCurrencyCode) {
    
    
    
    
    this.finCurrencyCode = finCurrencyCode;
    return this;
  }

   /**
   * Get finCurrencyCode
   * @return finCurrencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFinCurrencyCode() {
    return finCurrencyCode;
  }


  public void setFinCurrencyCode(String finCurrencyCode) {
    
    
    
    this.finCurrencyCode = finCurrencyCode;
  }


  public AwardModel finPaymentDate(LocalDate finPaymentDate) {
    
    
    
    
    this.finPaymentDate = finPaymentDate;
    return this;
  }

   /**
   * Get finPaymentDate
   * @return finPaymentDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getFinPaymentDate() {
    return finPaymentDate;
  }


  public void setFinPaymentDate(LocalDate finPaymentDate) {
    
    
    
    this.finPaymentDate = finPaymentDate;
  }


  public AwardModel finPaymentStatus(String finPaymentStatus) {
    
    
    
    
    this.finPaymentStatus = finPaymentStatus;
    return this;
  }

   /**
   * Get finPaymentStatus
   * @return finPaymentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFinPaymentStatus() {
    return finPaymentStatus;
  }


  public void setFinPaymentStatus(String finPaymentStatus) {
    
    
    
    this.finPaymentStatus = finPaymentStatus;
  }


  public AwardModel nonMonetaryCompensation(String nonMonetaryCompensation) {
    
    
    
    
    this.nonMonetaryCompensation = nonMonetaryCompensation;
    return this;
  }

   /**
   * Get nonMonetaryCompensation
   * @return nonMonetaryCompensation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNonMonetaryCompensation() {
    return nonMonetaryCompensation;
  }


  public void setNonMonetaryCompensation(String nonMonetaryCompensation) {
    
    
    
    this.nonMonetaryCompensation = nonMonetaryCompensation;
  }


  public AwardModel notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public AwardModel userViewModel(UserViewModel userViewModel) {
    
    
    
    
    this.userViewModel = userViewModel;
    return this;
  }

   /**
   * Get userViewModel
   * @return userViewModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserViewModel getUserViewModel() {
    return userViewModel;
  }


  public void setUserViewModel(UserViewModel userViewModel) {
    
    
    
    this.userViewModel = userViewModel;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AwardModel instance itself
   */
  public AwardModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwardModel awardModel = (AwardModel) o;
    return Objects.equals(this.appraisalId, awardModel.appraisalId) &&
        Objects.equals(this.attribution, awardModel.attribution) &&
        Objects.equals(this.awardDate, awardModel.awardDate) &&
        Objects.equals(this.awardId, awardModel.awardId) &&
        Objects.equals(this.awardTypeModel, awardModel.awardTypeModel) &&
        Objects.equals(this.cid, awardModel.cid) &&
        Objects.equals(this.createts, awardModel.createts) &&
        Objects.equals(this.currencyModel, awardModel.currencyModel) &&
        Objects.equals(this.feedbackId, awardModel.feedbackId) &&
        Objects.equals(this.finAccountCode, awardModel.finAccountCode) &&
        Objects.equals(this.finAmount, awardModel.finAmount) &&
        Objects.equals(this.finCurrencyCode, awardModel.finCurrencyCode) &&
        Objects.equals(this.finPaymentDate, awardModel.finPaymentDate) &&
        Objects.equals(this.finPaymentStatus, awardModel.finPaymentStatus) &&
        Objects.equals(this.nonMonetaryCompensation, awardModel.nonMonetaryCompensation) &&
        Objects.equals(this.notes, awardModel.notes) &&
        Objects.equals(this.userViewModel, awardModel.userViewModel)&&
        Objects.equals(this.additionalProperties, awardModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appraisalId, attribution, awardDate, awardId, awardTypeModel, cid, createts, currencyModel, feedbackId, finAccountCode, finAmount, finCurrencyCode, finPaymentDate, finPaymentStatus, nonMonetaryCompensation, notes, userViewModel, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwardModel {\n");
    sb.append("    appraisalId: ").append(toIndentedString(appraisalId)).append("\n");
    sb.append("    attribution: ").append(toIndentedString(attribution)).append("\n");
    sb.append("    awardDate: ").append(toIndentedString(awardDate)).append("\n");
    sb.append("    awardId: ").append(toIndentedString(awardId)).append("\n");
    sb.append("    awardTypeModel: ").append(toIndentedString(awardTypeModel)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    currencyModel: ").append(toIndentedString(currencyModel)).append("\n");
    sb.append("    feedbackId: ").append(toIndentedString(feedbackId)).append("\n");
    sb.append("    finAccountCode: ").append(toIndentedString(finAccountCode)).append("\n");
    sb.append("    finAmount: ").append(toIndentedString(finAmount)).append("\n");
    sb.append("    finCurrencyCode: ").append(toIndentedString(finCurrencyCode)).append("\n");
    sb.append("    finPaymentDate: ").append(toIndentedString(finPaymentDate)).append("\n");
    sb.append("    finPaymentStatus: ").append(toIndentedString(finPaymentStatus)).append("\n");
    sb.append("    nonMonetaryCompensation: ").append(toIndentedString(nonMonetaryCompensation)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    userViewModel: ").append(toIndentedString(userViewModel)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appraisalId");
    openapiFields.add("attribution");
    openapiFields.add("awardDate");
    openapiFields.add("awardId");
    openapiFields.add("awardTypeModel");
    openapiFields.add("cid");
    openapiFields.add("createts");
    openapiFields.add("currencyModel");
    openapiFields.add("feedbackId");
    openapiFields.add("finAccountCode");
    openapiFields.add("finAmount");
    openapiFields.add("finCurrencyCode");
    openapiFields.add("finPaymentDate");
    openapiFields.add("finPaymentStatus");
    openapiFields.add("nonMonetaryCompensation");
    openapiFields.add("notes");
    openapiFields.add("userViewModel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AwardModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AwardModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwardModel is not found in the empty JSON string", AwardModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("attribution") != null && !jsonObj.get("attribution").isJsonNull()) && !jsonObj.get("attribution").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attribution` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attribution").toString()));
      }
      // validate the optional field `awardTypeModel`
      if (jsonObj.get("awardTypeModel") != null && !jsonObj.get("awardTypeModel").isJsonNull()) {
        AwardTypeModel.validateJsonObject(jsonObj.getAsJsonObject("awardTypeModel"));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      // validate the optional field `currencyModel`
      if (jsonObj.get("currencyModel") != null && !jsonObj.get("currencyModel").isJsonNull()) {
        CurrencyModel.validateJsonObject(jsonObj.getAsJsonObject("currencyModel"));
      }
      if ((jsonObj.get("finAccountCode") != null && !jsonObj.get("finAccountCode").isJsonNull()) && !jsonObj.get("finAccountCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `finAccountCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("finAccountCode").toString()));
      }
      if ((jsonObj.get("finCurrencyCode") != null && !jsonObj.get("finCurrencyCode").isJsonNull()) && !jsonObj.get("finCurrencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `finCurrencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("finCurrencyCode").toString()));
      }
      if ((jsonObj.get("finPaymentStatus") != null && !jsonObj.get("finPaymentStatus").isJsonNull()) && !jsonObj.get("finPaymentStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `finPaymentStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("finPaymentStatus").toString()));
      }
      if ((jsonObj.get("nonMonetaryCompensation") != null && !jsonObj.get("nonMonetaryCompensation").isJsonNull()) && !jsonObj.get("nonMonetaryCompensation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nonMonetaryCompensation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nonMonetaryCompensation").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      // validate the optional field `userViewModel`
      if (jsonObj.get("userViewModel") != null && !jsonObj.get("userViewModel").isJsonNull()) {
        UserViewModel.validateJsonObject(jsonObj.getAsJsonObject("userViewModel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwardModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwardModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwardModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwardModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AwardModel>() {
           @Override
           public void write(JsonWriter out, AwardModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AwardModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AwardModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AwardModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AwardModel
  * @throws IOException if the JSON string is invalid with respect to AwardModel
  */
  public static AwardModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwardModel.class);
  }

 /**
  * Convert an instance of AwardModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

