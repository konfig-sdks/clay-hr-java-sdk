/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AttachmentModel;
import com.konfigthis.client.model.CustomListModel;
import com.konfigthis.client.model.DynaFormItemOptionModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * DynamicFormItemModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class DynamicFormItemModel {
  public static final String SERIALIZED_NAME_ATTACHMENT_MODEL = "attachmentModel";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_MODEL)
  private AttachmentModel attachmentModel;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CORRECT_FEEDBACK = "correctFeedback";
  @SerializedName(SERIALIZED_NAME_CORRECT_FEEDBACK)
  private String correctFeedback;

  public static final String SERIALIZED_NAME_CREATE_USER_ID = "createUserId";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_ID)
  private Integer createUserId;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_CUSTOM_LIST_MODEL = "customListModel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LIST_MODEL)
  private CustomListModel customListModel;

  public static final String SERIALIZED_NAME_DYNA_FORM_ITEM_OPTION_MODEL_LIST = "dynaFormItemOptionModelList";
  @SerializedName(SERIALIZED_NAME_DYNA_FORM_ITEM_OPTION_MODEL_LIST)
  private List<DynaFormItemOptionModel> dynaFormItemOptionModelList = null;

  public static final String SERIALIZED_NAME_DYNAMIC_FORM_ID = "dynamicFormId";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_FORM_ID)
  private Integer dynamicFormId;

  public static final String SERIALIZED_NAME_DYNAMIC_FORM_ITEM_ID = "dynamicFormItemId";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_FORM_ITEM_ID)
  private Integer dynamicFormItemId;

  public static final String SERIALIZED_NAME_EXPECTED_VALUE = "expectedValue";
  @SerializedName(SERIALIZED_NAME_EXPECTED_VALUE)
  private String expectedValue;

  public static final String SERIALIZED_NAME_FIELD_TYPE = "fieldType";
  @SerializedName(SERIALIZED_NAME_FIELD_TYPE)
  private String fieldType;

  public static final String SERIALIZED_NAME_FIELD_TYPE_ITEM = "fieldTypeItem";
  @SerializedName(SERIALIZED_NAME_FIELD_TYPE_ITEM)
  private String fieldTypeItem;

  public static final String SERIALIZED_NAME_HELP_TEXT = "helpText";
  @SerializedName(SERIALIZED_NAME_HELP_TEXT)
  private String helpText;

  public static final String SERIALIZED_NAME_INCORRECT_FEEDBACK = "incorrectFeedback";
  @SerializedName(SERIALIZED_NAME_INCORRECT_FEEDBACK)
  private String incorrectFeedback;

  public static final String SERIALIZED_NAME_MANDATORY = "mandatory";
  @SerializedName(SERIALIZED_NAME_MANDATORY)
  private Integer mandatory;

  public static final String SERIALIZED_NAME_MAPPED_ENTITY_ITEM = "mappedEntityItem";
  @SerializedName(SERIALIZED_NAME_MAPPED_ENTITY_ITEM)
  private String mappedEntityItem;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NUMBERING_STYLE = "numberingStyle";
  @SerializedName(SERIALIZED_NAME_NUMBERING_STYLE)
  private String numberingStyle;

  public static final String SERIALIZED_NAME_OPTION_RANDOM = "optionRandom";
  @SerializedName(SERIALIZED_NAME_OPTION_RANDOM)
  private Boolean optionRandom;

  public static final String SERIALIZED_NAME_OPTION_VALUES = "optionValues";
  @SerializedName(SERIALIZED_NAME_OPTION_VALUES)
  private String optionValues;

  public static final String SERIALIZED_NAME_SECTION_ID = "sectionId";
  @SerializedName(SERIALIZED_NAME_SECTION_ID)
  private Integer sectionId;

  public static final String SERIALIZED_NAME_SEQUENCE = "sequence";
  @SerializedName(SERIALIZED_NAME_SEQUENCE)
  private Integer sequence;

  public static final String SERIALIZED_NAME_WEIGHTAGE = "weightage";
  @SerializedName(SERIALIZED_NAME_WEIGHTAGE)
  private Double weightage;

  public DynamicFormItemModel() {
  }

  public DynamicFormItemModel attachmentModel(AttachmentModel attachmentModel) {
    
    
    
    
    this.attachmentModel = attachmentModel;
    return this;
  }

   /**
   * Get attachmentModel
   * @return attachmentModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AttachmentModel getAttachmentModel() {
    return attachmentModel;
  }


  public void setAttachmentModel(AttachmentModel attachmentModel) {
    
    
    
    this.attachmentModel = attachmentModel;
  }


  public DynamicFormItemModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public DynamicFormItemModel correctFeedback(String correctFeedback) {
    
    
    
    
    this.correctFeedback = correctFeedback;
    return this;
  }

   /**
   * Get correctFeedback
   * @return correctFeedback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCorrectFeedback() {
    return correctFeedback;
  }


  public void setCorrectFeedback(String correctFeedback) {
    
    
    
    this.correctFeedback = correctFeedback;
  }


  public DynamicFormItemModel createUserId(Integer createUserId) {
    
    
    
    
    this.createUserId = createUserId;
    return this;
  }

   /**
   * Get createUserId
   * @return createUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateUserId() {
    return createUserId;
  }


  public void setCreateUserId(Integer createUserId) {
    
    
    
    this.createUserId = createUserId;
  }


  public DynamicFormItemModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public DynamicFormItemModel customListModel(CustomListModel customListModel) {
    
    
    
    
    this.customListModel = customListModel;
    return this;
  }

   /**
   * Get customListModel
   * @return customListModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomListModel getCustomListModel() {
    return customListModel;
  }


  public void setCustomListModel(CustomListModel customListModel) {
    
    
    
    this.customListModel = customListModel;
  }


  public DynamicFormItemModel dynaFormItemOptionModelList(List<DynaFormItemOptionModel> dynaFormItemOptionModelList) {
    
    
    
    
    this.dynaFormItemOptionModelList = dynaFormItemOptionModelList;
    return this;
  }

  public DynamicFormItemModel addDynaFormItemOptionModelListItem(DynaFormItemOptionModel dynaFormItemOptionModelListItem) {
    if (this.dynaFormItemOptionModelList == null) {
      this.dynaFormItemOptionModelList = new ArrayList<>();
    }
    this.dynaFormItemOptionModelList.add(dynaFormItemOptionModelListItem);
    return this;
  }

   /**
   * Get dynaFormItemOptionModelList
   * @return dynaFormItemOptionModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DynaFormItemOptionModel> getDynaFormItemOptionModelList() {
    return dynaFormItemOptionModelList;
  }


  public void setDynaFormItemOptionModelList(List<DynaFormItemOptionModel> dynaFormItemOptionModelList) {
    
    
    
    this.dynaFormItemOptionModelList = dynaFormItemOptionModelList;
  }


  public DynamicFormItemModel dynamicFormId(Integer dynamicFormId) {
    
    
    
    
    this.dynamicFormId = dynamicFormId;
    return this;
  }

   /**
   * Get dynamicFormId
   * @return dynamicFormId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDynamicFormId() {
    return dynamicFormId;
  }


  public void setDynamicFormId(Integer dynamicFormId) {
    
    
    
    this.dynamicFormId = dynamicFormId;
  }


  public DynamicFormItemModel dynamicFormItemId(Integer dynamicFormItemId) {
    
    
    
    
    this.dynamicFormItemId = dynamicFormItemId;
    return this;
  }

   /**
   * Get dynamicFormItemId
   * @return dynamicFormItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDynamicFormItemId() {
    return dynamicFormItemId;
  }


  public void setDynamicFormItemId(Integer dynamicFormItemId) {
    
    
    
    this.dynamicFormItemId = dynamicFormItemId;
  }


  public DynamicFormItemModel expectedValue(String expectedValue) {
    
    
    
    
    this.expectedValue = expectedValue;
    return this;
  }

   /**
   * Get expectedValue
   * @return expectedValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExpectedValue() {
    return expectedValue;
  }


  public void setExpectedValue(String expectedValue) {
    
    
    
    this.expectedValue = expectedValue;
  }


  public DynamicFormItemModel fieldType(String fieldType) {
    
    
    
    
    this.fieldType = fieldType;
    return this;
  }

   /**
   * Get fieldType
   * @return fieldType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFieldType() {
    return fieldType;
  }


  public void setFieldType(String fieldType) {
    
    
    
    this.fieldType = fieldType;
  }


  public DynamicFormItemModel fieldTypeItem(String fieldTypeItem) {
    
    
    
    
    this.fieldTypeItem = fieldTypeItem;
    return this;
  }

   /**
   * Get fieldTypeItem
   * @return fieldTypeItem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFieldTypeItem() {
    return fieldTypeItem;
  }


  public void setFieldTypeItem(String fieldTypeItem) {
    
    
    
    this.fieldTypeItem = fieldTypeItem;
  }


  public DynamicFormItemModel helpText(String helpText) {
    
    
    
    
    this.helpText = helpText;
    return this;
  }

   /**
   * Get helpText
   * @return helpText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHelpText() {
    return helpText;
  }


  public void setHelpText(String helpText) {
    
    
    
    this.helpText = helpText;
  }


  public DynamicFormItemModel incorrectFeedback(String incorrectFeedback) {
    
    
    
    
    this.incorrectFeedback = incorrectFeedback;
    return this;
  }

   /**
   * Get incorrectFeedback
   * @return incorrectFeedback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIncorrectFeedback() {
    return incorrectFeedback;
  }


  public void setIncorrectFeedback(String incorrectFeedback) {
    
    
    
    this.incorrectFeedback = incorrectFeedback;
  }


  public DynamicFormItemModel mandatory(Integer mandatory) {
    
    
    
    
    this.mandatory = mandatory;
    return this;
  }

   /**
   * Get mandatory
   * @return mandatory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMandatory() {
    return mandatory;
  }


  public void setMandatory(Integer mandatory) {
    
    
    
    this.mandatory = mandatory;
  }


  public DynamicFormItemModel mappedEntityItem(String mappedEntityItem) {
    
    
    
    
    this.mappedEntityItem = mappedEntityItem;
    return this;
  }

   /**
   * Get mappedEntityItem
   * @return mappedEntityItem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMappedEntityItem() {
    return mappedEntityItem;
  }


  public void setMappedEntityItem(String mappedEntityItem) {
    
    
    
    this.mappedEntityItem = mappedEntityItem;
  }


  public DynamicFormItemModel name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public DynamicFormItemModel numberingStyle(String numberingStyle) {
    
    
    
    
    this.numberingStyle = numberingStyle;
    return this;
  }

   /**
   * Get numberingStyle
   * @return numberingStyle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNumberingStyle() {
    return numberingStyle;
  }


  public void setNumberingStyle(String numberingStyle) {
    
    
    
    this.numberingStyle = numberingStyle;
  }


  public DynamicFormItemModel optionRandom(Boolean optionRandom) {
    
    
    
    
    this.optionRandom = optionRandom;
    return this;
  }

   /**
   * Get optionRandom
   * @return optionRandom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getOptionRandom() {
    return optionRandom;
  }


  public void setOptionRandom(Boolean optionRandom) {
    
    
    
    this.optionRandom = optionRandom;
  }


  public DynamicFormItemModel optionValues(String optionValues) {
    
    
    
    
    this.optionValues = optionValues;
    return this;
  }

   /**
   * Get optionValues
   * @return optionValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOptionValues() {
    return optionValues;
  }


  public void setOptionValues(String optionValues) {
    
    
    
    this.optionValues = optionValues;
  }


  public DynamicFormItemModel sectionId(Integer sectionId) {
    
    
    
    
    this.sectionId = sectionId;
    return this;
  }

   /**
   * Get sectionId
   * @return sectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSectionId() {
    return sectionId;
  }


  public void setSectionId(Integer sectionId) {
    
    
    
    this.sectionId = sectionId;
  }


  public DynamicFormItemModel sequence(Integer sequence) {
    
    
    
    
    this.sequence = sequence;
    return this;
  }

   /**
   * Get sequence
   * @return sequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSequence() {
    return sequence;
  }


  public void setSequence(Integer sequence) {
    
    
    
    this.sequence = sequence;
  }


  public DynamicFormItemModel weightage(Double weightage) {
    
    
    
    
    this.weightage = weightage;
    return this;
  }

   /**
   * Get weightage
   * @return weightage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeightage() {
    return weightage;
  }


  public void setWeightage(Double weightage) {
    
    
    
    this.weightage = weightage;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the DynamicFormItemModel instance itself
   */
  public DynamicFormItemModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DynamicFormItemModel dynamicFormItemModel = (DynamicFormItemModel) o;
    return Objects.equals(this.attachmentModel, dynamicFormItemModel.attachmentModel) &&
        Objects.equals(this.cid, dynamicFormItemModel.cid) &&
        Objects.equals(this.correctFeedback, dynamicFormItemModel.correctFeedback) &&
        Objects.equals(this.createUserId, dynamicFormItemModel.createUserId) &&
        Objects.equals(this.createts, dynamicFormItemModel.createts) &&
        Objects.equals(this.customListModel, dynamicFormItemModel.customListModel) &&
        Objects.equals(this.dynaFormItemOptionModelList, dynamicFormItemModel.dynaFormItemOptionModelList) &&
        Objects.equals(this.dynamicFormId, dynamicFormItemModel.dynamicFormId) &&
        Objects.equals(this.dynamicFormItemId, dynamicFormItemModel.dynamicFormItemId) &&
        Objects.equals(this.expectedValue, dynamicFormItemModel.expectedValue) &&
        Objects.equals(this.fieldType, dynamicFormItemModel.fieldType) &&
        Objects.equals(this.fieldTypeItem, dynamicFormItemModel.fieldTypeItem) &&
        Objects.equals(this.helpText, dynamicFormItemModel.helpText) &&
        Objects.equals(this.incorrectFeedback, dynamicFormItemModel.incorrectFeedback) &&
        Objects.equals(this.mandatory, dynamicFormItemModel.mandatory) &&
        Objects.equals(this.mappedEntityItem, dynamicFormItemModel.mappedEntityItem) &&
        Objects.equals(this.name, dynamicFormItemModel.name) &&
        Objects.equals(this.numberingStyle, dynamicFormItemModel.numberingStyle) &&
        Objects.equals(this.optionRandom, dynamicFormItemModel.optionRandom) &&
        Objects.equals(this.optionValues, dynamicFormItemModel.optionValues) &&
        Objects.equals(this.sectionId, dynamicFormItemModel.sectionId) &&
        Objects.equals(this.sequence, dynamicFormItemModel.sequence) &&
        Objects.equals(this.weightage, dynamicFormItemModel.weightage)&&
        Objects.equals(this.additionalProperties, dynamicFormItemModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachmentModel, cid, correctFeedback, createUserId, createts, customListModel, dynaFormItemOptionModelList, dynamicFormId, dynamicFormItemId, expectedValue, fieldType, fieldTypeItem, helpText, incorrectFeedback, mandatory, mappedEntityItem, name, numberingStyle, optionRandom, optionValues, sectionId, sequence, weightage, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DynamicFormItemModel {\n");
    sb.append("    attachmentModel: ").append(toIndentedString(attachmentModel)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    correctFeedback: ").append(toIndentedString(correctFeedback)).append("\n");
    sb.append("    createUserId: ").append(toIndentedString(createUserId)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    customListModel: ").append(toIndentedString(customListModel)).append("\n");
    sb.append("    dynaFormItemOptionModelList: ").append(toIndentedString(dynaFormItemOptionModelList)).append("\n");
    sb.append("    dynamicFormId: ").append(toIndentedString(dynamicFormId)).append("\n");
    sb.append("    dynamicFormItemId: ").append(toIndentedString(dynamicFormItemId)).append("\n");
    sb.append("    expectedValue: ").append(toIndentedString(expectedValue)).append("\n");
    sb.append("    fieldType: ").append(toIndentedString(fieldType)).append("\n");
    sb.append("    fieldTypeItem: ").append(toIndentedString(fieldTypeItem)).append("\n");
    sb.append("    helpText: ").append(toIndentedString(helpText)).append("\n");
    sb.append("    incorrectFeedback: ").append(toIndentedString(incorrectFeedback)).append("\n");
    sb.append("    mandatory: ").append(toIndentedString(mandatory)).append("\n");
    sb.append("    mappedEntityItem: ").append(toIndentedString(mappedEntityItem)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    numberingStyle: ").append(toIndentedString(numberingStyle)).append("\n");
    sb.append("    optionRandom: ").append(toIndentedString(optionRandom)).append("\n");
    sb.append("    optionValues: ").append(toIndentedString(optionValues)).append("\n");
    sb.append("    sectionId: ").append(toIndentedString(sectionId)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    weightage: ").append(toIndentedString(weightage)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attachmentModel");
    openapiFields.add("cid");
    openapiFields.add("correctFeedback");
    openapiFields.add("createUserId");
    openapiFields.add("createts");
    openapiFields.add("customListModel");
    openapiFields.add("dynaFormItemOptionModelList");
    openapiFields.add("dynamicFormId");
    openapiFields.add("dynamicFormItemId");
    openapiFields.add("expectedValue");
    openapiFields.add("fieldType");
    openapiFields.add("fieldTypeItem");
    openapiFields.add("helpText");
    openapiFields.add("incorrectFeedback");
    openapiFields.add("mandatory");
    openapiFields.add("mappedEntityItem");
    openapiFields.add("name");
    openapiFields.add("numberingStyle");
    openapiFields.add("optionRandom");
    openapiFields.add("optionValues");
    openapiFields.add("sectionId");
    openapiFields.add("sequence");
    openapiFields.add("weightage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DynamicFormItemModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DynamicFormItemModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DynamicFormItemModel is not found in the empty JSON string", DynamicFormItemModel.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `attachmentModel`
      if (jsonObj.get("attachmentModel") != null && !jsonObj.get("attachmentModel").isJsonNull()) {
        AttachmentModel.validateJsonObject(jsonObj.getAsJsonObject("attachmentModel"));
      }
      if ((jsonObj.get("correctFeedback") != null && !jsonObj.get("correctFeedback").isJsonNull()) && !jsonObj.get("correctFeedback").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `correctFeedback` to be a primitive type in the JSON string but got `%s`", jsonObj.get("correctFeedback").toString()));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      // validate the optional field `customListModel`
      if (jsonObj.get("customListModel") != null && !jsonObj.get("customListModel").isJsonNull()) {
        CustomListModel.validateJsonObject(jsonObj.getAsJsonObject("customListModel"));
      }
      if (jsonObj.get("dynaFormItemOptionModelList") != null && !jsonObj.get("dynaFormItemOptionModelList").isJsonNull()) {
        JsonArray jsonArraydynaFormItemOptionModelList = jsonObj.getAsJsonArray("dynaFormItemOptionModelList");
        if (jsonArraydynaFormItemOptionModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("dynaFormItemOptionModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `dynaFormItemOptionModelList` to be an array in the JSON string but got `%s`", jsonObj.get("dynaFormItemOptionModelList").toString()));
          }

          // validate the optional field `dynaFormItemOptionModelList` (array)
          for (int i = 0; i < jsonArraydynaFormItemOptionModelList.size(); i++) {
            DynaFormItemOptionModel.validateJsonObject(jsonArraydynaFormItemOptionModelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("expectedValue") != null && !jsonObj.get("expectedValue").isJsonNull()) && !jsonObj.get("expectedValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expectedValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expectedValue").toString()));
      }
      if ((jsonObj.get("fieldType") != null && !jsonObj.get("fieldType").isJsonNull()) && !jsonObj.get("fieldType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fieldType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fieldType").toString()));
      }
      if ((jsonObj.get("fieldTypeItem") != null && !jsonObj.get("fieldTypeItem").isJsonNull()) && !jsonObj.get("fieldTypeItem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fieldTypeItem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fieldTypeItem").toString()));
      }
      if ((jsonObj.get("helpText") != null && !jsonObj.get("helpText").isJsonNull()) && !jsonObj.get("helpText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `helpText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("helpText").toString()));
      }
      if ((jsonObj.get("incorrectFeedback") != null && !jsonObj.get("incorrectFeedback").isJsonNull()) && !jsonObj.get("incorrectFeedback").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `incorrectFeedback` to be a primitive type in the JSON string but got `%s`", jsonObj.get("incorrectFeedback").toString()));
      }
      if ((jsonObj.get("mappedEntityItem") != null && !jsonObj.get("mappedEntityItem").isJsonNull()) && !jsonObj.get("mappedEntityItem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mappedEntityItem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mappedEntityItem").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("numberingStyle") != null && !jsonObj.get("numberingStyle").isJsonNull()) && !jsonObj.get("numberingStyle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numberingStyle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numberingStyle").toString()));
      }
      if ((jsonObj.get("optionValues") != null && !jsonObj.get("optionValues").isJsonNull()) && !jsonObj.get("optionValues").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `optionValues` to be a primitive type in the JSON string but got `%s`", jsonObj.get("optionValues").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DynamicFormItemModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DynamicFormItemModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DynamicFormItemModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DynamicFormItemModel.class));

       return (TypeAdapter<T>) new TypeAdapter<DynamicFormItemModel>() {
           @Override
           public void write(JsonWriter out, DynamicFormItemModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public DynamicFormItemModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             DynamicFormItemModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DynamicFormItemModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DynamicFormItemModel
  * @throws IOException if the JSON string is invalid with respect to DynamicFormItemModel
  */
  public static DynamicFormItemModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DynamicFormItemModel.class);
  }

 /**
  * Convert an instance of DynamicFormItemModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

