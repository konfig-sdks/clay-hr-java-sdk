/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * UserViewModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UserViewModel {
  public static final String SERIALIZED_NAME_ADP_ASSOCIATE_O_I_D = "adpAssociateOID";
  @SerializedName(SERIALIZED_NAME_ADP_ASSOCIATE_O_I_D)
  private String adpAssociateOID;

  public static final String SERIALIZED_NAME_ALLOCATION = "allocation";
  @SerializedName(SERIALIZED_NAME_ALLOCATION)
  private Double allocation;

  public static final String SERIALIZED_NAME_CAREER_PATHWAY_ID = "careerPathwayId";
  @SerializedName(SERIALIZED_NAME_CAREER_PATHWAY_ID)
  private Integer careerPathwayId;

  public static final String SERIALIZED_NAME_CELL_PHONE = "cellPhone";
  @SerializedName(SERIALIZED_NAME_CELL_PHONE)
  private String cellPhone;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private Integer countryId;

  public static final String SERIALIZED_NAME_CREATEUSERID = "createuserid";
  @SerializedName(SERIALIZED_NAME_CREATEUSERID)
  private Integer createuserid;

  public static final String SERIALIZED_NAME_DEPARTMENT = "department";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT)
  private String department;

  public static final String SERIALIZED_NAME_DEPARTMENT_ID = "departmentId";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_ID)
  private Integer departmentId;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EMP_ID = "empId";
  @SerializedName(SERIALIZED_NAME_EMP_ID)
  private String empId;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_HAS_ACCESS = "hasAccess";
  @SerializedName(SERIALIZED_NAME_HAS_ACCESS)
  private Integer hasAccess;

  public static final String SERIALIZED_NAME_IM = "im";
  @SerializedName(SERIALIZED_NAME_IM)
  private String im;

  public static final String SERIALIZED_NAME_IMAGE_NAME = "imageName";
  @SerializedName(SERIALIZED_NAME_IMAGE_NAME)
  private String imageName;

  public static final String SERIALIZED_NAME_JOB_TITLE = "jobTitle";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_LOCATION_ID = "locationId";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private Integer locationId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_PROFILE_ID = "profileId";
  @SerializedName(SERIALIZED_NAME_PROFILE_ID)
  private Integer profileId;

  public static final String SERIALIZED_NAME_PROFILE_NAME = "profileName";
  @SerializedName(SERIALIZED_NAME_PROFILE_NAME)
  private String profileName;

  public static final String SERIALIZED_NAME_SHORT_NAME = "shortName";
  @SerializedName(SERIALIZED_NAME_SHORT_NAME)
  private String shortName;

  public static final String SERIALIZED_NAME_STAR = "star";
  @SerializedName(SERIALIZED_NAME_STAR)
  private Integer star;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_THUMBNAIL = "thumbnail";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL)
  private String thumbnail;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_USER_DATE_FORMAT = "userDateFormat";
  @SerializedName(SERIALIZED_NAME_USER_DATE_FORMAT)
  private String userDateFormat;

  public static final String SERIALIZED_NAME_USER_DATE_OF_BIRTH = "userDateOfBirth";
  @SerializedName(SERIALIZED_NAME_USER_DATE_OF_BIRTH)
  private LocalDate userDateOfBirth;

  public static final String SERIALIZED_NAME_USER_END_DATE = "userEndDate";
  @SerializedName(SERIALIZED_NAME_USER_END_DATE)
  private LocalDate userEndDate;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_USER_START_DATE = "userStartDate";
  @SerializedName(SERIALIZED_NAME_USER_START_DATE)
  private LocalDate userStartDate;

  public static final String SERIALIZED_NAME_USER_TYPE = "userType";
  @SerializedName(SERIALIZED_NAME_USER_TYPE)
  private String userType;

  public static final String SERIALIZED_NAME_WORKER_TYPE = "workerType";
  @SerializedName(SERIALIZED_NAME_WORKER_TYPE)
  private String workerType;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public UserViewModel() {
  }

  public UserViewModel adpAssociateOID(String adpAssociateOID) {
    
    
    
    
    this.adpAssociateOID = adpAssociateOID;
    return this;
  }

   /**
   * Get adpAssociateOID
   * @return adpAssociateOID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAdpAssociateOID() {
    return adpAssociateOID;
  }


  public void setAdpAssociateOID(String adpAssociateOID) {
    
    
    
    this.adpAssociateOID = adpAssociateOID;
  }


  public UserViewModel allocation(Double allocation) {
    
    
    
    
    this.allocation = allocation;
    return this;
  }

   /**
   * Get allocation
   * @return allocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAllocation() {
    return allocation;
  }


  public void setAllocation(Double allocation) {
    
    
    
    this.allocation = allocation;
  }


  public UserViewModel careerPathwayId(Integer careerPathwayId) {
    
    
    
    
    this.careerPathwayId = careerPathwayId;
    return this;
  }

   /**
   * Get careerPathwayId
   * @return careerPathwayId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCareerPathwayId() {
    return careerPathwayId;
  }


  public void setCareerPathwayId(Integer careerPathwayId) {
    
    
    
    this.careerPathwayId = careerPathwayId;
  }


  public UserViewModel cellPhone(String cellPhone) {
    
    
    
    
    this.cellPhone = cellPhone;
    return this;
  }

   /**
   * Get cellPhone
   * @return cellPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCellPhone() {
    return cellPhone;
  }


  public void setCellPhone(String cellPhone) {
    
    
    
    this.cellPhone = cellPhone;
  }


  public UserViewModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public UserViewModel countryId(Integer countryId) {
    
    
    
    
    this.countryId = countryId;
    return this;
  }

   /**
   * Get countryId
   * @return countryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCountryId() {
    return countryId;
  }


  public void setCountryId(Integer countryId) {
    
    
    
    this.countryId = countryId;
  }


  public UserViewModel createuserid(Integer createuserid) {
    
    
    
    
    this.createuserid = createuserid;
    return this;
  }

   /**
   * Get createuserid
   * @return createuserid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateuserid() {
    return createuserid;
  }


  public void setCreateuserid(Integer createuserid) {
    
    
    
    this.createuserid = createuserid;
  }


  public UserViewModel department(String department) {
    
    
    
    
    this.department = department;
    return this;
  }

   /**
   * Get department
   * @return department
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDepartment() {
    return department;
  }


  public void setDepartment(String department) {
    
    
    
    this.department = department;
  }


  public UserViewModel departmentId(Integer departmentId) {
    
    
    
    
    this.departmentId = departmentId;
    return this;
  }

   /**
   * Get departmentId
   * @return departmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDepartmentId() {
    return departmentId;
  }


  public void setDepartmentId(Integer departmentId) {
    
    
    
    this.departmentId = departmentId;
  }


  public UserViewModel email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public UserViewModel empId(String empId) {
    
    
    
    
    this.empId = empId;
    return this;
  }

   /**
   * Get empId
   * @return empId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmpId() {
    return empId;
  }


  public void setEmpId(String empId) {
    
    
    
    this.empId = empId;
  }


  public UserViewModel firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public UserViewModel gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public UserViewModel guid(String guid) {
    
    
    
    
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    
    
    
    this.guid = guid;
  }


  public UserViewModel hasAccess(Integer hasAccess) {
    
    
    
    
    this.hasAccess = hasAccess;
    return this;
  }

   /**
   * Get hasAccess
   * @return hasAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getHasAccess() {
    return hasAccess;
  }


  public void setHasAccess(Integer hasAccess) {
    
    
    
    this.hasAccess = hasAccess;
  }


  public UserViewModel im(String im) {
    
    
    
    
    this.im = im;
    return this;
  }

   /**
   * Get im
   * @return im
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIm() {
    return im;
  }


  public void setIm(String im) {
    
    
    
    this.im = im;
  }


  public UserViewModel imageName(String imageName) {
    
    
    
    
    this.imageName = imageName;
    return this;
  }

   /**
   * Get imageName
   * @return imageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImageName() {
    return imageName;
  }


  public void setImageName(String imageName) {
    
    
    
    this.imageName = imageName;
  }


  public UserViewModel jobTitle(String jobTitle) {
    
    
    
    
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * Get jobTitle
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobTitle() {
    return jobTitle;
  }


  public void setJobTitle(String jobTitle) {
    
    
    
    this.jobTitle = jobTitle;
  }


  public UserViewModel lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public UserViewModel location(String location) {
    
    
    
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    
    
    
    this.location = location;
  }


  public UserViewModel locationId(Integer locationId) {
    
    
    
    
    this.locationId = locationId;
    return this;
  }

   /**
   * Get locationId
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLocationId() {
    return locationId;
  }


  public void setLocationId(Integer locationId) {
    
    
    
    this.locationId = locationId;
  }


  public UserViewModel name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public UserViewModel notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public UserViewModel phone(String phone) {
    
    
    
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    
    
    
    this.phone = phone;
  }


  public UserViewModel profileId(Integer profileId) {
    
    
    
    
    this.profileId = profileId;
    return this;
  }

   /**
   * Get profileId
   * @return profileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProfileId() {
    return profileId;
  }


  public void setProfileId(Integer profileId) {
    
    
    
    this.profileId = profileId;
  }


  public UserViewModel profileName(String profileName) {
    
    
    
    
    this.profileName = profileName;
    return this;
  }

   /**
   * Get profileName
   * @return profileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProfileName() {
    return profileName;
  }


  public void setProfileName(String profileName) {
    
    
    
    this.profileName = profileName;
  }


  public UserViewModel shortName(String shortName) {
    
    
    
    
    this.shortName = shortName;
    return this;
  }

   /**
   * Get shortName
   * @return shortName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShortName() {
    return shortName;
  }


  public void setShortName(String shortName) {
    
    
    
    this.shortName = shortName;
  }


  public UserViewModel star(Integer star) {
    
    
    
    
    this.star = star;
    return this;
  }

   /**
   * Get star
   * @return star
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStar() {
    return star;
  }


  public void setStar(Integer star) {
    
    
    
    this.star = star;
  }


  public UserViewModel status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public UserViewModel thumbnail(String thumbnail) {
    
    
    
    
    this.thumbnail = thumbnail;
    return this;
  }

   /**
   * Get thumbnail
   * @return thumbnail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getThumbnail() {
    return thumbnail;
  }


  public void setThumbnail(String thumbnail) {
    
    
    
    this.thumbnail = thumbnail;
  }


  public UserViewModel timezone(String timezone) {
    
    
    
    
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTimezone() {
    return timezone;
  }


  public void setTimezone(String timezone) {
    
    
    
    this.timezone = timezone;
  }


  public UserViewModel userDateFormat(String userDateFormat) {
    
    
    
    
    this.userDateFormat = userDateFormat;
    return this;
  }

   /**
   * Get userDateFormat
   * @return userDateFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserDateFormat() {
    return userDateFormat;
  }


  public void setUserDateFormat(String userDateFormat) {
    
    
    
    this.userDateFormat = userDateFormat;
  }


  public UserViewModel userDateOfBirth(LocalDate userDateOfBirth) {
    
    
    
    
    this.userDateOfBirth = userDateOfBirth;
    return this;
  }

   /**
   * Get userDateOfBirth
   * @return userDateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getUserDateOfBirth() {
    return userDateOfBirth;
  }


  public void setUserDateOfBirth(LocalDate userDateOfBirth) {
    
    
    
    this.userDateOfBirth = userDateOfBirth;
  }


  public UserViewModel userEndDate(LocalDate userEndDate) {
    
    
    
    
    this.userEndDate = userEndDate;
    return this;
  }

   /**
   * Get userEndDate
   * @return userEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getUserEndDate() {
    return userEndDate;
  }


  public void setUserEndDate(LocalDate userEndDate) {
    
    
    
    this.userEndDate = userEndDate;
  }


  public UserViewModel userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public UserViewModel userStartDate(LocalDate userStartDate) {
    
    
    
    
    this.userStartDate = userStartDate;
    return this;
  }

   /**
   * Get userStartDate
   * @return userStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getUserStartDate() {
    return userStartDate;
  }


  public void setUserStartDate(LocalDate userStartDate) {
    
    
    
    this.userStartDate = userStartDate;
  }


  public UserViewModel userType(String userType) {
    
    
    
    
    this.userType = userType;
    return this;
  }

   /**
   * Get userType
   * @return userType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserType() {
    return userType;
  }


  public void setUserType(String userType) {
    
    
    
    this.userType = userType;
  }


  public UserViewModel workerType(String workerType) {
    
    
    
    
    this.workerType = workerType;
    return this;
  }

   /**
   * Get workerType
   * @return workerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkerType() {
    return workerType;
  }


  public void setWorkerType(String workerType) {
    
    
    
    this.workerType = workerType;
  }


  public UserViewModel id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UserViewModel instance itself
   */
  public UserViewModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserViewModel userViewModel = (UserViewModel) o;
    return Objects.equals(this.adpAssociateOID, userViewModel.adpAssociateOID) &&
        Objects.equals(this.allocation, userViewModel.allocation) &&
        Objects.equals(this.careerPathwayId, userViewModel.careerPathwayId) &&
        Objects.equals(this.cellPhone, userViewModel.cellPhone) &&
        Objects.equals(this.cid, userViewModel.cid) &&
        Objects.equals(this.countryId, userViewModel.countryId) &&
        Objects.equals(this.createuserid, userViewModel.createuserid) &&
        Objects.equals(this.department, userViewModel.department) &&
        Objects.equals(this.departmentId, userViewModel.departmentId) &&
        Objects.equals(this.email, userViewModel.email) &&
        Objects.equals(this.empId, userViewModel.empId) &&
        Objects.equals(this.firstName, userViewModel.firstName) &&
        Objects.equals(this.gender, userViewModel.gender) &&
        Objects.equals(this.guid, userViewModel.guid) &&
        Objects.equals(this.hasAccess, userViewModel.hasAccess) &&
        Objects.equals(this.im, userViewModel.im) &&
        Objects.equals(this.imageName, userViewModel.imageName) &&
        Objects.equals(this.jobTitle, userViewModel.jobTitle) &&
        Objects.equals(this.lastName, userViewModel.lastName) &&
        Objects.equals(this.location, userViewModel.location) &&
        Objects.equals(this.locationId, userViewModel.locationId) &&
        Objects.equals(this.name, userViewModel.name) &&
        Objects.equals(this.notes, userViewModel.notes) &&
        Objects.equals(this.phone, userViewModel.phone) &&
        Objects.equals(this.profileId, userViewModel.profileId) &&
        Objects.equals(this.profileName, userViewModel.profileName) &&
        Objects.equals(this.shortName, userViewModel.shortName) &&
        Objects.equals(this.star, userViewModel.star) &&
        Objects.equals(this.status, userViewModel.status) &&
        Objects.equals(this.thumbnail, userViewModel.thumbnail) &&
        Objects.equals(this.timezone, userViewModel.timezone) &&
        Objects.equals(this.userDateFormat, userViewModel.userDateFormat) &&
        Objects.equals(this.userDateOfBirth, userViewModel.userDateOfBirth) &&
        Objects.equals(this.userEndDate, userViewModel.userEndDate) &&
        Objects.equals(this.userId, userViewModel.userId) &&
        Objects.equals(this.userStartDate, userViewModel.userStartDate) &&
        Objects.equals(this.userType, userViewModel.userType) &&
        Objects.equals(this.workerType, userViewModel.workerType) &&
        Objects.equals(this.id, userViewModel.id)&&
        Objects.equals(this.additionalProperties, userViewModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adpAssociateOID, allocation, careerPathwayId, cellPhone, cid, countryId, createuserid, department, departmentId, email, empId, firstName, gender, guid, hasAccess, im, imageName, jobTitle, lastName, location, locationId, name, notes, phone, profileId, profileName, shortName, star, status, thumbnail, timezone, userDateFormat, userDateOfBirth, userEndDate, userId, userStartDate, userType, workerType, id, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserViewModel {\n");
    sb.append("    adpAssociateOID: ").append(toIndentedString(adpAssociateOID)).append("\n");
    sb.append("    allocation: ").append(toIndentedString(allocation)).append("\n");
    sb.append("    careerPathwayId: ").append(toIndentedString(careerPathwayId)).append("\n");
    sb.append("    cellPhone: ").append(toIndentedString(cellPhone)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    createuserid: ").append(toIndentedString(createuserid)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    empId: ").append(toIndentedString(empId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    hasAccess: ").append(toIndentedString(hasAccess)).append("\n");
    sb.append("    im: ").append(toIndentedString(im)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    profileName: ").append(toIndentedString(profileName)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    star: ").append(toIndentedString(star)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    thumbnail: ").append(toIndentedString(thumbnail)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    userDateFormat: ").append(toIndentedString(userDateFormat)).append("\n");
    sb.append("    userDateOfBirth: ").append(toIndentedString(userDateOfBirth)).append("\n");
    sb.append("    userEndDate: ").append(toIndentedString(userEndDate)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userStartDate: ").append(toIndentedString(userStartDate)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    workerType: ").append(toIndentedString(workerType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adpAssociateOID");
    openapiFields.add("allocation");
    openapiFields.add("careerPathwayId");
    openapiFields.add("cellPhone");
    openapiFields.add("cid");
    openapiFields.add("countryId");
    openapiFields.add("createuserid");
    openapiFields.add("department");
    openapiFields.add("departmentId");
    openapiFields.add("email");
    openapiFields.add("empId");
    openapiFields.add("firstName");
    openapiFields.add("gender");
    openapiFields.add("guid");
    openapiFields.add("hasAccess");
    openapiFields.add("im");
    openapiFields.add("imageName");
    openapiFields.add("jobTitle");
    openapiFields.add("lastName");
    openapiFields.add("location");
    openapiFields.add("locationId");
    openapiFields.add("name");
    openapiFields.add("notes");
    openapiFields.add("phone");
    openapiFields.add("profileId");
    openapiFields.add("profileName");
    openapiFields.add("shortName");
    openapiFields.add("star");
    openapiFields.add("status");
    openapiFields.add("thumbnail");
    openapiFields.add("timezone");
    openapiFields.add("userDateFormat");
    openapiFields.add("userDateOfBirth");
    openapiFields.add("userEndDate");
    openapiFields.add("userId");
    openapiFields.add("userStartDate");
    openapiFields.add("userType");
    openapiFields.add("workerType");
    openapiFields.add("id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UserViewModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UserViewModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserViewModel is not found in the empty JSON string", UserViewModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("adpAssociateOID") != null && !jsonObj.get("adpAssociateOID").isJsonNull()) && !jsonObj.get("adpAssociateOID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adpAssociateOID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adpAssociateOID").toString()));
      }
      if ((jsonObj.get("cellPhone") != null && !jsonObj.get("cellPhone").isJsonNull()) && !jsonObj.get("cellPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cellPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cellPhone").toString()));
      }
      if ((jsonObj.get("department") != null && !jsonObj.get("department").isJsonNull()) && !jsonObj.get("department").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `department` to be a primitive type in the JSON string but got `%s`", jsonObj.get("department").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("empId") != null && !jsonObj.get("empId").isJsonNull()) && !jsonObj.get("empId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `empId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("empId").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("im") != null && !jsonObj.get("im").isJsonNull()) && !jsonObj.get("im").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `im` to be a primitive type in the JSON string but got `%s`", jsonObj.get("im").toString()));
      }
      if ((jsonObj.get("imageName") != null && !jsonObj.get("imageName").isJsonNull()) && !jsonObj.get("imageName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageName").toString()));
      }
      if ((jsonObj.get("jobTitle") != null && !jsonObj.get("jobTitle").isJsonNull()) && !jsonObj.get("jobTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobTitle").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("profileName") != null && !jsonObj.get("profileName").isJsonNull()) && !jsonObj.get("profileName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profileName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profileName").toString()));
      }
      if ((jsonObj.get("shortName") != null && !jsonObj.get("shortName").isJsonNull()) && !jsonObj.get("shortName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shortName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shortName").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("thumbnail") != null && !jsonObj.get("thumbnail").isJsonNull()) && !jsonObj.get("thumbnail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumbnail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumbnail").toString()));
      }
      if ((jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) && !jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
      if ((jsonObj.get("userDateFormat") != null && !jsonObj.get("userDateFormat").isJsonNull()) && !jsonObj.get("userDateFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDateFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDateFormat").toString()));
      }
      if ((jsonObj.get("userType") != null && !jsonObj.get("userType").isJsonNull()) && !jsonObj.get("userType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userType").toString()));
      }
      if ((jsonObj.get("workerType") != null && !jsonObj.get("workerType").isJsonNull()) && !jsonObj.get("workerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workerType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserViewModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserViewModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserViewModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserViewModel.class));

       return (TypeAdapter<T>) new TypeAdapter<UserViewModel>() {
           @Override
           public void write(JsonWriter out, UserViewModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UserViewModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UserViewModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserViewModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserViewModel
  * @throws IOException if the JSON string is invalid with respect to UserViewModel
  */
  public static UserViewModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserViewModel.class);
  }

 /**
  * Convert an instance of UserViewModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

