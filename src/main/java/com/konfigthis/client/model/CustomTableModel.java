/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CustomTableColumnModel;
import com.konfigthis.client.model.CustomTableValueModel;
import com.konfigthis.client.model.UserGroupModel;
import com.konfigthis.client.model.UserModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CustomTableModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CustomTableModel {
  public static final String SERIALIZED_NAME_CANDIDATE_ACCESS = "candidateAccess";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_ACCESS)
  private String candidateAccess;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CREATE_USER_MODEL = "createUserModel";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_MODEL)
  private UserModel createUserModel;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_CT_COLUMN_LIST = "ctColumnList";
  @SerializedName(SERIALIZED_NAME_CT_COLUMN_LIST)
  private List<CustomTableColumnModel> ctColumnList = null;

  public static final String SERIALIZED_NAME_CT_VALUE_LIST = "ctValueList";
  @SerializedName(SERIALIZED_NAME_CT_VALUE_LIST)
  private List<CustomTableValueModel> ctValueList = null;

  public static final String SERIALIZED_NAME_CUSTOM_TABLE_ID = "customTableId";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TABLE_ID)
  private Integer customTableId;

  public static final String SERIALIZED_NAME_HELP_TEXT = "helpText";
  @SerializedName(SERIALIZED_NAME_HELP_TEXT)
  private String helpText;

  public static final String SERIALIZED_NAME_OBJECT_TYPE = "objectType";
  @SerializedName(SERIALIZED_NAME_OBJECT_TYPE)
  private String objectType;

  public static final String SERIALIZED_NAME_READ_ACCESS = "readAccess";
  @SerializedName(SERIALIZED_NAME_READ_ACCESS)
  private String readAccess;

  public static final String SERIALIZED_NAME_READ_USER_GROUP_ID = "readUserGroupId";
  @SerializedName(SERIALIZED_NAME_READ_USER_GROUP_ID)
  private Integer readUserGroupId;

  public static final String SERIALIZED_NAME_READ_USER_GROUP_MODEL = "readUserGroupModel";
  @SerializedName(SERIALIZED_NAME_READ_USER_GROUP_MODEL)
  private UserGroupModel readUserGroupModel;

  public static final String SERIALIZED_NAME_SEQUENCE = "sequence";
  @SerializedName(SERIALIZED_NAME_SEQUENCE)
  private Integer sequence;

  public static final String SERIALIZED_NAME_TABLE_NAME = "tableName";
  @SerializedName(SERIALIZED_NAME_TABLE_NAME)
  private String tableName;

  public static final String SERIALIZED_NAME_USER_ACCESS = "userAccess";
  @SerializedName(SERIALIZED_NAME_USER_ACCESS)
  private String userAccess;

  public static final String SERIALIZED_NAME_WRITE_ACCESS = "writeAccess";
  @SerializedName(SERIALIZED_NAME_WRITE_ACCESS)
  private String writeAccess;

  public static final String SERIALIZED_NAME_WRITE_USER_GROUP_ID = "writeUserGroupId";
  @SerializedName(SERIALIZED_NAME_WRITE_USER_GROUP_ID)
  private Integer writeUserGroupId;

  public static final String SERIALIZED_NAME_WRITE_USER_GROUP_MODEL = "writeUserGroupModel";
  @SerializedName(SERIALIZED_NAME_WRITE_USER_GROUP_MODEL)
  private UserGroupModel writeUserGroupModel;

  public CustomTableModel() {
  }

  public CustomTableModel candidateAccess(String candidateAccess) {
    
    
    
    
    this.candidateAccess = candidateAccess;
    return this;
  }

   /**
   * Get candidateAccess
   * @return candidateAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCandidateAccess() {
    return candidateAccess;
  }


  public void setCandidateAccess(String candidateAccess) {
    
    
    
    this.candidateAccess = candidateAccess;
  }


  public CustomTableModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public CustomTableModel createUserModel(UserModel createUserModel) {
    
    
    
    
    this.createUserModel = createUserModel;
    return this;
  }

   /**
   * Get createUserModel
   * @return createUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getCreateUserModel() {
    return createUserModel;
  }


  public void setCreateUserModel(UserModel createUserModel) {
    
    
    
    this.createUserModel = createUserModel;
  }


  public CustomTableModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public CustomTableModel ctColumnList(List<CustomTableColumnModel> ctColumnList) {
    
    
    
    
    this.ctColumnList = ctColumnList;
    return this;
  }

  public CustomTableModel addCtColumnListItem(CustomTableColumnModel ctColumnListItem) {
    if (this.ctColumnList == null) {
      this.ctColumnList = new ArrayList<>();
    }
    this.ctColumnList.add(ctColumnListItem);
    return this;
  }

   /**
   * Get ctColumnList
   * @return ctColumnList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomTableColumnModel> getCtColumnList() {
    return ctColumnList;
  }


  public void setCtColumnList(List<CustomTableColumnModel> ctColumnList) {
    
    
    
    this.ctColumnList = ctColumnList;
  }


  public CustomTableModel ctValueList(List<CustomTableValueModel> ctValueList) {
    
    
    
    
    this.ctValueList = ctValueList;
    return this;
  }

  public CustomTableModel addCtValueListItem(CustomTableValueModel ctValueListItem) {
    if (this.ctValueList == null) {
      this.ctValueList = new ArrayList<>();
    }
    this.ctValueList.add(ctValueListItem);
    return this;
  }

   /**
   * Get ctValueList
   * @return ctValueList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomTableValueModel> getCtValueList() {
    return ctValueList;
  }


  public void setCtValueList(List<CustomTableValueModel> ctValueList) {
    
    
    
    this.ctValueList = ctValueList;
  }


  public CustomTableModel customTableId(Integer customTableId) {
    
    
    
    
    this.customTableId = customTableId;
    return this;
  }

   /**
   * Get customTableId
   * @return customTableId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCustomTableId() {
    return customTableId;
  }


  public void setCustomTableId(Integer customTableId) {
    
    
    
    this.customTableId = customTableId;
  }


  public CustomTableModel helpText(String helpText) {
    
    
    
    
    this.helpText = helpText;
    return this;
  }

   /**
   * Get helpText
   * @return helpText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHelpText() {
    return helpText;
  }


  public void setHelpText(String helpText) {
    
    
    
    this.helpText = helpText;
  }


  public CustomTableModel objectType(String objectType) {
    
    
    
    
    this.objectType = objectType;
    return this;
  }

   /**
   * Get objectType
   * @return objectType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getObjectType() {
    return objectType;
  }


  public void setObjectType(String objectType) {
    
    
    
    this.objectType = objectType;
  }


  public CustomTableModel readAccess(String readAccess) {
    
    
    
    
    this.readAccess = readAccess;
    return this;
  }

   /**
   * Get readAccess
   * @return readAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReadAccess() {
    return readAccess;
  }


  public void setReadAccess(String readAccess) {
    
    
    
    this.readAccess = readAccess;
  }


  public CustomTableModel readUserGroupId(Integer readUserGroupId) {
    
    
    
    
    this.readUserGroupId = readUserGroupId;
    return this;
  }

   /**
   * Get readUserGroupId
   * @return readUserGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReadUserGroupId() {
    return readUserGroupId;
  }


  public void setReadUserGroupId(Integer readUserGroupId) {
    
    
    
    this.readUserGroupId = readUserGroupId;
  }


  public CustomTableModel readUserGroupModel(UserGroupModel readUserGroupModel) {
    
    
    
    
    this.readUserGroupModel = readUserGroupModel;
    return this;
  }

   /**
   * Get readUserGroupModel
   * @return readUserGroupModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserGroupModel getReadUserGroupModel() {
    return readUserGroupModel;
  }


  public void setReadUserGroupModel(UserGroupModel readUserGroupModel) {
    
    
    
    this.readUserGroupModel = readUserGroupModel;
  }


  public CustomTableModel sequence(Integer sequence) {
    
    
    
    
    this.sequence = sequence;
    return this;
  }

   /**
   * Get sequence
   * @return sequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSequence() {
    return sequence;
  }


  public void setSequence(Integer sequence) {
    
    
    
    this.sequence = sequence;
  }


  public CustomTableModel tableName(String tableName) {
    
    
    
    
    this.tableName = tableName;
    return this;
  }

   /**
   * Get tableName
   * @return tableName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTableName() {
    return tableName;
  }


  public void setTableName(String tableName) {
    
    
    
    this.tableName = tableName;
  }


  public CustomTableModel userAccess(String userAccess) {
    
    
    
    
    this.userAccess = userAccess;
    return this;
  }

   /**
   * Get userAccess
   * @return userAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserAccess() {
    return userAccess;
  }


  public void setUserAccess(String userAccess) {
    
    
    
    this.userAccess = userAccess;
  }


  public CustomTableModel writeAccess(String writeAccess) {
    
    
    
    
    this.writeAccess = writeAccess;
    return this;
  }

   /**
   * Get writeAccess
   * @return writeAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWriteAccess() {
    return writeAccess;
  }


  public void setWriteAccess(String writeAccess) {
    
    
    
    this.writeAccess = writeAccess;
  }


  public CustomTableModel writeUserGroupId(Integer writeUserGroupId) {
    
    
    
    
    this.writeUserGroupId = writeUserGroupId;
    return this;
  }

   /**
   * Get writeUserGroupId
   * @return writeUserGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWriteUserGroupId() {
    return writeUserGroupId;
  }


  public void setWriteUserGroupId(Integer writeUserGroupId) {
    
    
    
    this.writeUserGroupId = writeUserGroupId;
  }


  public CustomTableModel writeUserGroupModel(UserGroupModel writeUserGroupModel) {
    
    
    
    
    this.writeUserGroupModel = writeUserGroupModel;
    return this;
  }

   /**
   * Get writeUserGroupModel
   * @return writeUserGroupModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserGroupModel getWriteUserGroupModel() {
    return writeUserGroupModel;
  }


  public void setWriteUserGroupModel(UserGroupModel writeUserGroupModel) {
    
    
    
    this.writeUserGroupModel = writeUserGroupModel;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CustomTableModel instance itself
   */
  public CustomTableModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomTableModel customTableModel = (CustomTableModel) o;
    return Objects.equals(this.candidateAccess, customTableModel.candidateAccess) &&
        Objects.equals(this.cid, customTableModel.cid) &&
        Objects.equals(this.createUserModel, customTableModel.createUserModel) &&
        Objects.equals(this.createts, customTableModel.createts) &&
        Objects.equals(this.ctColumnList, customTableModel.ctColumnList) &&
        Objects.equals(this.ctValueList, customTableModel.ctValueList) &&
        Objects.equals(this.customTableId, customTableModel.customTableId) &&
        Objects.equals(this.helpText, customTableModel.helpText) &&
        Objects.equals(this.objectType, customTableModel.objectType) &&
        Objects.equals(this.readAccess, customTableModel.readAccess) &&
        Objects.equals(this.readUserGroupId, customTableModel.readUserGroupId) &&
        Objects.equals(this.readUserGroupModel, customTableModel.readUserGroupModel) &&
        Objects.equals(this.sequence, customTableModel.sequence) &&
        Objects.equals(this.tableName, customTableModel.tableName) &&
        Objects.equals(this.userAccess, customTableModel.userAccess) &&
        Objects.equals(this.writeAccess, customTableModel.writeAccess) &&
        Objects.equals(this.writeUserGroupId, customTableModel.writeUserGroupId) &&
        Objects.equals(this.writeUserGroupModel, customTableModel.writeUserGroupModel)&&
        Objects.equals(this.additionalProperties, customTableModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(candidateAccess, cid, createUserModel, createts, ctColumnList, ctValueList, customTableId, helpText, objectType, readAccess, readUserGroupId, readUserGroupModel, sequence, tableName, userAccess, writeAccess, writeUserGroupId, writeUserGroupModel, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomTableModel {\n");
    sb.append("    candidateAccess: ").append(toIndentedString(candidateAccess)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    createUserModel: ").append(toIndentedString(createUserModel)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    ctColumnList: ").append(toIndentedString(ctColumnList)).append("\n");
    sb.append("    ctValueList: ").append(toIndentedString(ctValueList)).append("\n");
    sb.append("    customTableId: ").append(toIndentedString(customTableId)).append("\n");
    sb.append("    helpText: ").append(toIndentedString(helpText)).append("\n");
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("    readAccess: ").append(toIndentedString(readAccess)).append("\n");
    sb.append("    readUserGroupId: ").append(toIndentedString(readUserGroupId)).append("\n");
    sb.append("    readUserGroupModel: ").append(toIndentedString(readUserGroupModel)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    tableName: ").append(toIndentedString(tableName)).append("\n");
    sb.append("    userAccess: ").append(toIndentedString(userAccess)).append("\n");
    sb.append("    writeAccess: ").append(toIndentedString(writeAccess)).append("\n");
    sb.append("    writeUserGroupId: ").append(toIndentedString(writeUserGroupId)).append("\n");
    sb.append("    writeUserGroupModel: ").append(toIndentedString(writeUserGroupModel)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("candidateAccess");
    openapiFields.add("cid");
    openapiFields.add("createUserModel");
    openapiFields.add("createts");
    openapiFields.add("ctColumnList");
    openapiFields.add("ctValueList");
    openapiFields.add("customTableId");
    openapiFields.add("helpText");
    openapiFields.add("objectType");
    openapiFields.add("readAccess");
    openapiFields.add("readUserGroupId");
    openapiFields.add("readUserGroupModel");
    openapiFields.add("sequence");
    openapiFields.add("tableName");
    openapiFields.add("userAccess");
    openapiFields.add("writeAccess");
    openapiFields.add("writeUserGroupId");
    openapiFields.add("writeUserGroupModel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomTableModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomTableModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomTableModel is not found in the empty JSON string", CustomTableModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("candidateAccess") != null && !jsonObj.get("candidateAccess").isJsonNull()) && !jsonObj.get("candidateAccess").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidateAccess` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidateAccess").toString()));
      }
      // validate the optional field `createUserModel`
      if (jsonObj.get("createUserModel") != null && !jsonObj.get("createUserModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("createUserModel"));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      if (jsonObj.get("ctColumnList") != null && !jsonObj.get("ctColumnList").isJsonNull()) {
        JsonArray jsonArrayctColumnList = jsonObj.getAsJsonArray("ctColumnList");
        if (jsonArrayctColumnList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ctColumnList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ctColumnList` to be an array in the JSON string but got `%s`", jsonObj.get("ctColumnList").toString()));
          }

          // validate the optional field `ctColumnList` (array)
          for (int i = 0; i < jsonArrayctColumnList.size(); i++) {
            CustomTableColumnModel.validateJsonObject(jsonArrayctColumnList.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("ctValueList") != null && !jsonObj.get("ctValueList").isJsonNull()) {
        JsonArray jsonArrayctValueList = jsonObj.getAsJsonArray("ctValueList");
        if (jsonArrayctValueList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ctValueList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ctValueList` to be an array in the JSON string but got `%s`", jsonObj.get("ctValueList").toString()));
          }

          // validate the optional field `ctValueList` (array)
          for (int i = 0; i < jsonArrayctValueList.size(); i++) {
            CustomTableValueModel.validateJsonObject(jsonArrayctValueList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("helpText") != null && !jsonObj.get("helpText").isJsonNull()) && !jsonObj.get("helpText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `helpText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("helpText").toString()));
      }
      if ((jsonObj.get("objectType") != null && !jsonObj.get("objectType").isJsonNull()) && !jsonObj.get("objectType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `objectType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("objectType").toString()));
      }
      if ((jsonObj.get("readAccess") != null && !jsonObj.get("readAccess").isJsonNull()) && !jsonObj.get("readAccess").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `readAccess` to be a primitive type in the JSON string but got `%s`", jsonObj.get("readAccess").toString()));
      }
      // validate the optional field `readUserGroupModel`
      if (jsonObj.get("readUserGroupModel") != null && !jsonObj.get("readUserGroupModel").isJsonNull()) {
        UserGroupModel.validateJsonObject(jsonObj.getAsJsonObject("readUserGroupModel"));
      }
      if ((jsonObj.get("tableName") != null && !jsonObj.get("tableName").isJsonNull()) && !jsonObj.get("tableName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tableName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tableName").toString()));
      }
      if ((jsonObj.get("userAccess") != null && !jsonObj.get("userAccess").isJsonNull()) && !jsonObj.get("userAccess").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userAccess` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userAccess").toString()));
      }
      if ((jsonObj.get("writeAccess") != null && !jsonObj.get("writeAccess").isJsonNull()) && !jsonObj.get("writeAccess").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `writeAccess` to be a primitive type in the JSON string but got `%s`", jsonObj.get("writeAccess").toString()));
      }
      // validate the optional field `writeUserGroupModel`
      if (jsonObj.get("writeUserGroupModel") != null && !jsonObj.get("writeUserGroupModel").isJsonNull()) {
        UserGroupModel.validateJsonObject(jsonObj.getAsJsonObject("writeUserGroupModel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomTableModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomTableModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomTableModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomTableModel.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomTableModel>() {
           @Override
           public void write(JsonWriter out, CustomTableModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomTableModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CustomTableModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomTableModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomTableModel
  * @throws IOException if the JSON string is invalid with respect to CustomTableModel
  */
  public static CustomTableModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomTableModel.class);
  }

 /**
  * Convert an instance of CustomTableModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

