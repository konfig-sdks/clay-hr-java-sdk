/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CustomFieldModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmploymentModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmploymentModel {
  public static final String SERIALIZED_NAME_SO_C_CODE = "SOCCode";
  @SerializedName(SERIALIZED_NAME_SO_C_CODE)
  private String soCCode;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private Integer countryId;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_CUST_APP_ID = "custAppId";
  @SerializedName(SERIALIZED_NAME_CUST_APP_ID)
  private Integer custAppId;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD_MODEL_LIST = "customFieldModelList";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD_MODEL_LIST)
  private List<CustomFieldModel> customFieldModelList = null;

  public static final String SERIALIZED_NAME_DEPARTMENT = "department";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT)
  private String department;

  public static final String SERIALIZED_NAME_DUTIES = "duties";
  @SerializedName(SERIALIZED_NAME_DUTIES)
  private String duties;

  public static final String SERIALIZED_NAME_EMP_ID = "empId";
  @SerializedName(SERIALIZED_NAME_EMP_ID)
  private Integer empId;

  public static final String SERIALIZED_NAME_EMPLOYER_NAME = "employerName";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_NAME)
  private String employerName;

  public static final String SERIALIZED_NAME_EMPLOYER_TYPE_BUS = "employerTypeBus";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_TYPE_BUS)
  private String employerTypeBus;

  public static final String SERIALIZED_NAME_EMPLOYMENT_TYPE = "employmentType";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_TYPE)
  private String employmentType;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private LocalDate endDate;

  public static final String SERIALIZED_NAME_NAICSCODE = "naicscode";
  @SerializedName(SERIALIZED_NAME_NAICSCODE)
  private String naicscode;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_RECRUITID = "recruitid";
  @SerializedName(SERIALIZED_NAME_RECRUITID)
  private Integer recruitid;

  public static final String SERIALIZED_NAME_SOCCODE = "soccode";
  @SerializedName(SERIALIZED_NAME_SOCCODE)
  private String soccode;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private LocalDate startDate;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public EmploymentModel() {
  }

  public EmploymentModel soCCode(String soCCode) {
    
    
    
    
    this.soCCode = soCCode;
    return this;
  }

   /**
   * Get soCCode
   * @return soCCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSoCCode() {
    return soCCode;
  }


  public void setSoCCode(String soCCode) {
    
    
    
    this.soCCode = soCCode;
  }


  public EmploymentModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public EmploymentModel city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public EmploymentModel countryId(Integer countryId) {
    
    
    
    
    this.countryId = countryId;
    return this;
  }

   /**
   * Get countryId
   * @return countryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCountryId() {
    return countryId;
  }


  public void setCountryId(Integer countryId) {
    
    
    
    this.countryId = countryId;
  }


  public EmploymentModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public EmploymentModel custAppId(Integer custAppId) {
    
    
    
    
    this.custAppId = custAppId;
    return this;
  }

   /**
   * Get custAppId
   * @return custAppId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCustAppId() {
    return custAppId;
  }


  public void setCustAppId(Integer custAppId) {
    
    
    
    this.custAppId = custAppId;
  }


  public EmploymentModel customFieldModelList(List<CustomFieldModel> customFieldModelList) {
    
    
    
    
    this.customFieldModelList = customFieldModelList;
    return this;
  }

  public EmploymentModel addCustomFieldModelListItem(CustomFieldModel customFieldModelListItem) {
    if (this.customFieldModelList == null) {
      this.customFieldModelList = new ArrayList<>();
    }
    this.customFieldModelList.add(customFieldModelListItem);
    return this;
  }

   /**
   * Get customFieldModelList
   * @return customFieldModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomFieldModel> getCustomFieldModelList() {
    return customFieldModelList;
  }


  public void setCustomFieldModelList(List<CustomFieldModel> customFieldModelList) {
    
    
    
    this.customFieldModelList = customFieldModelList;
  }


  public EmploymentModel department(String department) {
    
    
    
    
    this.department = department;
    return this;
  }

   /**
   * Get department
   * @return department
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDepartment() {
    return department;
  }


  public void setDepartment(String department) {
    
    
    
    this.department = department;
  }


  public EmploymentModel duties(String duties) {
    
    
    
    
    this.duties = duties;
    return this;
  }

   /**
   * Get duties
   * @return duties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDuties() {
    return duties;
  }


  public void setDuties(String duties) {
    
    
    
    this.duties = duties;
  }


  public EmploymentModel empId(Integer empId) {
    
    
    
    
    this.empId = empId;
    return this;
  }

   /**
   * Get empId
   * @return empId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEmpId() {
    return empId;
  }


  public void setEmpId(Integer empId) {
    
    
    
    this.empId = empId;
  }


  public EmploymentModel employerName(String employerName) {
    
    
    
    
    this.employerName = employerName;
    return this;
  }

   /**
   * Get employerName
   * @return employerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployerName() {
    return employerName;
  }


  public void setEmployerName(String employerName) {
    
    
    
    this.employerName = employerName;
  }


  public EmploymentModel employerTypeBus(String employerTypeBus) {
    
    
    
    
    this.employerTypeBus = employerTypeBus;
    return this;
  }

   /**
   * Get employerTypeBus
   * @return employerTypeBus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployerTypeBus() {
    return employerTypeBus;
  }


  public void setEmployerTypeBus(String employerTypeBus) {
    
    
    
    this.employerTypeBus = employerTypeBus;
  }


  public EmploymentModel employmentType(String employmentType) {
    
    
    
    
    this.employmentType = employmentType;
    return this;
  }

   /**
   * Get employmentType
   * @return employmentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmploymentType() {
    return employmentType;
  }


  public void setEmploymentType(String employmentType) {
    
    
    
    this.employmentType = employmentType;
  }


  public EmploymentModel endDate(LocalDate endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getEndDate() {
    return endDate;
  }


  public void setEndDate(LocalDate endDate) {
    
    
    
    this.endDate = endDate;
  }


  public EmploymentModel naicscode(String naicscode) {
    
    
    
    
    this.naicscode = naicscode;
    return this;
  }

   /**
   * Get naicscode
   * @return naicscode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNaicscode() {
    return naicscode;
  }


  public void setNaicscode(String naicscode) {
    
    
    
    this.naicscode = naicscode;
  }


  public EmploymentModel position(String position) {
    
    
    
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPosition() {
    return position;
  }


  public void setPosition(String position) {
    
    
    
    this.position = position;
  }


  public EmploymentModel recruitid(Integer recruitid) {
    
    
    
    
    this.recruitid = recruitid;
    return this;
  }

   /**
   * Get recruitid
   * @return recruitid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRecruitid() {
    return recruitid;
  }


  public void setRecruitid(Integer recruitid) {
    
    
    
    this.recruitid = recruitid;
  }


  public EmploymentModel soccode(String soccode) {
    
    
    
    
    this.soccode = soccode;
    return this;
  }

   /**
   * Get soccode
   * @return soccode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSoccode() {
    return soccode;
  }


  public void setSoccode(String soccode) {
    
    
    
    this.soccode = soccode;
  }


  public EmploymentModel startDate(LocalDate startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getStartDate() {
    return startDate;
  }


  public void setStartDate(LocalDate startDate) {
    
    
    
    this.startDate = startDate;
  }


  public EmploymentModel state(String state) {
    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    
    
    
    this.state = state;
  }


  public EmploymentModel userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmploymentModel instance itself
   */
  public EmploymentModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmploymentModel employmentModel = (EmploymentModel) o;
    return Objects.equals(this.soCCode, employmentModel.soCCode) &&
        Objects.equals(this.cid, employmentModel.cid) &&
        Objects.equals(this.city, employmentModel.city) &&
        Objects.equals(this.countryId, employmentModel.countryId) &&
        Objects.equals(this.createts, employmentModel.createts) &&
        Objects.equals(this.custAppId, employmentModel.custAppId) &&
        Objects.equals(this.customFieldModelList, employmentModel.customFieldModelList) &&
        Objects.equals(this.department, employmentModel.department) &&
        Objects.equals(this.duties, employmentModel.duties) &&
        Objects.equals(this.empId, employmentModel.empId) &&
        Objects.equals(this.employerName, employmentModel.employerName) &&
        Objects.equals(this.employerTypeBus, employmentModel.employerTypeBus) &&
        Objects.equals(this.employmentType, employmentModel.employmentType) &&
        Objects.equals(this.endDate, employmentModel.endDate) &&
        Objects.equals(this.naicscode, employmentModel.naicscode) &&
        Objects.equals(this.position, employmentModel.position) &&
        Objects.equals(this.recruitid, employmentModel.recruitid) &&
        Objects.equals(this.soccode, employmentModel.soccode) &&
        Objects.equals(this.startDate, employmentModel.startDate) &&
        Objects.equals(this.state, employmentModel.state) &&
        Objects.equals(this.userId, employmentModel.userId)&&
        Objects.equals(this.additionalProperties, employmentModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(soCCode, cid, city, countryId, createts, custAppId, customFieldModelList, department, duties, empId, employerName, employerTypeBus, employmentType, endDate, naicscode, position, recruitid, soccode, startDate, state, userId, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmploymentModel {\n");
    sb.append("    soCCode: ").append(toIndentedString(soCCode)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    custAppId: ").append(toIndentedString(custAppId)).append("\n");
    sb.append("    customFieldModelList: ").append(toIndentedString(customFieldModelList)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    duties: ").append(toIndentedString(duties)).append("\n");
    sb.append("    empId: ").append(toIndentedString(empId)).append("\n");
    sb.append("    employerName: ").append(toIndentedString(employerName)).append("\n");
    sb.append("    employerTypeBus: ").append(toIndentedString(employerTypeBus)).append("\n");
    sb.append("    employmentType: ").append(toIndentedString(employmentType)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    naicscode: ").append(toIndentedString(naicscode)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    recruitid: ").append(toIndentedString(recruitid)).append("\n");
    sb.append("    soccode: ").append(toIndentedString(soccode)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SOCCode");
    openapiFields.add("cid");
    openapiFields.add("city");
    openapiFields.add("countryId");
    openapiFields.add("createts");
    openapiFields.add("custAppId");
    openapiFields.add("customFieldModelList");
    openapiFields.add("department");
    openapiFields.add("duties");
    openapiFields.add("empId");
    openapiFields.add("employerName");
    openapiFields.add("employerTypeBus");
    openapiFields.add("employmentType");
    openapiFields.add("endDate");
    openapiFields.add("naicscode");
    openapiFields.add("position");
    openapiFields.add("recruitid");
    openapiFields.add("soccode");
    openapiFields.add("startDate");
    openapiFields.add("state");
    openapiFields.add("userId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmploymentModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmploymentModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmploymentModel is not found in the empty JSON string", EmploymentModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("SOCCode") != null && !jsonObj.get("SOCCode").isJsonNull()) && !jsonObj.get("SOCCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SOCCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SOCCode").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      if (jsonObj.get("customFieldModelList") != null && !jsonObj.get("customFieldModelList").isJsonNull()) {
        JsonArray jsonArraycustomFieldModelList = jsonObj.getAsJsonArray("customFieldModelList");
        if (jsonArraycustomFieldModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customFieldModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customFieldModelList` to be an array in the JSON string but got `%s`", jsonObj.get("customFieldModelList").toString()));
          }

          // validate the optional field `customFieldModelList` (array)
          for (int i = 0; i < jsonArraycustomFieldModelList.size(); i++) {
            CustomFieldModel.validateJsonObject(jsonArraycustomFieldModelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("department") != null && !jsonObj.get("department").isJsonNull()) && !jsonObj.get("department").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `department` to be a primitive type in the JSON string but got `%s`", jsonObj.get("department").toString()));
      }
      if ((jsonObj.get("duties") != null && !jsonObj.get("duties").isJsonNull()) && !jsonObj.get("duties").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `duties` to be a primitive type in the JSON string but got `%s`", jsonObj.get("duties").toString()));
      }
      if ((jsonObj.get("employerName") != null && !jsonObj.get("employerName").isJsonNull()) && !jsonObj.get("employerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employerName").toString()));
      }
      if ((jsonObj.get("employerTypeBus") != null && !jsonObj.get("employerTypeBus").isJsonNull()) && !jsonObj.get("employerTypeBus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employerTypeBus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employerTypeBus").toString()));
      }
      if ((jsonObj.get("employmentType") != null && !jsonObj.get("employmentType").isJsonNull()) && !jsonObj.get("employmentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employmentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employmentType").toString()));
      }
      if ((jsonObj.get("naicscode") != null && !jsonObj.get("naicscode").isJsonNull()) && !jsonObj.get("naicscode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `naicscode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("naicscode").toString()));
      }
      if ((jsonObj.get("position") != null && !jsonObj.get("position").isJsonNull()) && !jsonObj.get("position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position").toString()));
      }
      if ((jsonObj.get("soccode") != null && !jsonObj.get("soccode").isJsonNull()) && !jsonObj.get("soccode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `soccode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("soccode").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmploymentModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmploymentModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmploymentModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmploymentModel.class));

       return (TypeAdapter<T>) new TypeAdapter<EmploymentModel>() {
           @Override
           public void write(JsonWriter out, EmploymentModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmploymentModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmploymentModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmploymentModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmploymentModel
  * @throws IOException if the JSON string is invalid with respect to EmploymentModel
  */
  public static EmploymentModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmploymentModel.class);
  }

 /**
  * Convert an instance of EmploymentModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

