/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.FeedbackListFeedbackResponseFeedbackListInnerAssignedUserModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * FeedbackListFeedbackResponseFeedbackListInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class FeedbackListFeedbackResponseFeedbackListInner {
  public static final String SERIALIZED_NAME_FEEDBACKID = "feedbackid";
  @SerializedName(SERIALIZED_NAME_FEEDBACKID)
  private String feedbackid;

  public static final String SERIALIZED_NAME_FEEDBACK = "feedback";
  @SerializedName(SERIALIZED_NAME_FEEDBACK)
  private String feedback;

  public static final String SERIALIZED_NAME_FEEDBACK_DESC = "feedbackDesc";
  @SerializedName(SERIALIZED_NAME_FEEDBACK_DESC)
  private String feedbackDesc;

  public static final String SERIALIZED_NAME_ASSIGNED_USER_MODEL = "assignedUserModel";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_USER_MODEL)
  private FeedbackListFeedbackResponseFeedbackListInnerAssignedUserModel assignedUserModel;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private String cid;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private String createts;

  public static final String SERIALIZED_NAME_PF_SKILL_LIST = "pfSkillList";
  @SerializedName(SERIALIZED_NAME_PF_SKILL_LIST)
  private String pfSkillList;

  public static final String SERIALIZED_NAME_CREATE_USER_MODEL = "createUserModel";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_MODEL)
  private String createUserModel;

  public static final String SERIALIZED_NAME_ASSESSMENT = "assessment";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT)
  private String assessment;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_RECIPIENT_STATUS = "recipientStatus";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_STATUS)
  private String recipientStatus;

  public static final String SERIALIZED_NAME_OBJECT_TYPE = "objectType";
  @SerializedName(SERIALIZED_NAME_OBJECT_TYPE)
  private String objectType;

  public static final String SERIALIZED_NAME_SENTIMENT_CODE = "sentimentCode";
  @SerializedName(SERIALIZED_NAME_SENTIMENT_CODE)
  private String sentimentCode;

  public static final String SERIALIZED_NAME_SENTIMENT_SCORE = "sentimentScore";
  @SerializedName(SERIALIZED_NAME_SENTIMENT_SCORE)
  private String sentimentScore;

  public static final String SERIALIZED_NAME_PF_BADGE_LIST = "pfBadgeList";
  @SerializedName(SERIALIZED_NAME_PF_BADGE_LIST)
  private String pfBadgeList;

  public static final String SERIALIZED_NAME_USER_NAME = "userName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD_MODEL_LIST = "customFieldModelList";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD_MODEL_LIST)
  private String customFieldModelList;

  public static final String SERIALIZED_NAME_BADGE_NAMES = "badgeNames";
  @SerializedName(SERIALIZED_NAME_BADGE_NAMES)
  private String badgeNames;

  public static final String SERIALIZED_NAME_ATTACHMENT_MODEL_LIST = "attachmentModelList";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_MODEL_LIST)
  private String attachmentModelList;

  public static final String SERIALIZED_NAME_WALL_NAME = "wallName";
  @SerializedName(SERIALIZED_NAME_WALL_NAME)
  private String wallName;

  public static final String SERIALIZED_NAME_SKILL_STRING = "skillString";
  @SerializedName(SERIALIZED_NAME_SKILL_STRING)
  private String skillString;

  public static final String SERIALIZED_NAME_REACTION_TYPE = "reactionType";
  @SerializedName(SERIALIZED_NAME_REACTION_TYPE)
  private String reactionType;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public FeedbackListFeedbackResponseFeedbackListInner() {
  }

  public FeedbackListFeedbackResponseFeedbackListInner feedbackid(String feedbackid) {
    
    
    
    
    this.feedbackid = feedbackid;
    return this;
  }

   /**
   * Get feedbackid
   * @return feedbackid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getFeedbackid() {
    return feedbackid;
  }


  public void setFeedbackid(String feedbackid) {
    
    
    
    this.feedbackid = feedbackid;
  }


  public FeedbackListFeedbackResponseFeedbackListInner feedback(String feedback) {
    
    
    
    
    this.feedback = feedback;
    return this;
  }

   /**
   * Get feedback
   * @return feedback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getFeedback() {
    return feedback;
  }


  public void setFeedback(String feedback) {
    
    
    
    this.feedback = feedback;
  }


  public FeedbackListFeedbackResponseFeedbackListInner feedbackDesc(String feedbackDesc) {
    
    
    
    
    this.feedbackDesc = feedbackDesc;
    return this;
  }

   /**
   * Get feedbackDesc
   * @return feedbackDesc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getFeedbackDesc() {
    return feedbackDesc;
  }


  public void setFeedbackDesc(String feedbackDesc) {
    
    
    
    this.feedbackDesc = feedbackDesc;
  }


  public FeedbackListFeedbackResponseFeedbackListInner assignedUserModel(FeedbackListFeedbackResponseFeedbackListInnerAssignedUserModel assignedUserModel) {
    
    
    
    
    this.assignedUserModel = assignedUserModel;
    return this;
  }

   /**
   * Get assignedUserModel
   * @return assignedUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FeedbackListFeedbackResponseFeedbackListInnerAssignedUserModel getAssignedUserModel() {
    return assignedUserModel;
  }


  public void setAssignedUserModel(FeedbackListFeedbackResponseFeedbackListInnerAssignedUserModel assignedUserModel) {
    
    
    
    this.assignedUserModel = assignedUserModel;
  }


  public FeedbackListFeedbackResponseFeedbackListInner cid(String cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getCid() {
    return cid;
  }


  public void setCid(String cid) {
    
    
    
    this.cid = cid;
  }


  public FeedbackListFeedbackResponseFeedbackListInner createts(String createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getCreatets() {
    return createts;
  }


  public void setCreatets(String createts) {
    
    
    
    this.createts = createts;
  }


  public FeedbackListFeedbackResponseFeedbackListInner pfSkillList(String pfSkillList) {
    
    
    
    
    this.pfSkillList = pfSkillList;
    return this;
  }

   /**
   * Get pfSkillList
   * @return pfSkillList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "object", value = "")

  public String getPfSkillList() {
    return pfSkillList;
  }


  public void setPfSkillList(String pfSkillList) {
    
    
    
    this.pfSkillList = pfSkillList;
  }


  public FeedbackListFeedbackResponseFeedbackListInner createUserModel(String createUserModel) {
    
    
    
    
    this.createUserModel = createUserModel;
    return this;
  }

   /**
   * Get createUserModel
   * @return createUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "object", value = "")

  public String getCreateUserModel() {
    return createUserModel;
  }


  public void setCreateUserModel(String createUserModel) {
    
    
    
    this.createUserModel = createUserModel;
  }


  public FeedbackListFeedbackResponseFeedbackListInner assessment(String assessment) {
    
    
    
    
    this.assessment = assessment;
    return this;
  }

   /**
   * Get assessment
   * @return assessment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getAssessment() {
    return assessment;
  }


  public void setAssessment(String assessment) {
    
    
    
    this.assessment = assessment;
  }


  public FeedbackListFeedbackResponseFeedbackListInner status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public FeedbackListFeedbackResponseFeedbackListInner recipientStatus(String recipientStatus) {
    
    
    
    
    this.recipientStatus = recipientStatus;
    return this;
  }

   /**
   * Get recipientStatus
   * @return recipientStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getRecipientStatus() {
    return recipientStatus;
  }


  public void setRecipientStatus(String recipientStatus) {
    
    
    
    this.recipientStatus = recipientStatus;
  }


  public FeedbackListFeedbackResponseFeedbackListInner objectType(String objectType) {
    
    
    
    
    this.objectType = objectType;
    return this;
  }

   /**
   * Get objectType
   * @return objectType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getObjectType() {
    return objectType;
  }


  public void setObjectType(String objectType) {
    
    
    
    this.objectType = objectType;
  }


  public FeedbackListFeedbackResponseFeedbackListInner sentimentCode(String sentimentCode) {
    
    
    
    
    this.sentimentCode = sentimentCode;
    return this;
  }

   /**
   * Get sentimentCode
   * @return sentimentCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getSentimentCode() {
    return sentimentCode;
  }


  public void setSentimentCode(String sentimentCode) {
    
    
    
    this.sentimentCode = sentimentCode;
  }


  public FeedbackListFeedbackResponseFeedbackListInner sentimentScore(String sentimentScore) {
    
    
    
    
    this.sentimentScore = sentimentScore;
    return this;
  }

   /**
   * Get sentimentScore
   * @return sentimentScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getSentimentScore() {
    return sentimentScore;
  }


  public void setSentimentScore(String sentimentScore) {
    
    
    
    this.sentimentScore = sentimentScore;
  }


  public FeedbackListFeedbackResponseFeedbackListInner pfBadgeList(String pfBadgeList) {
    
    
    
    
    this.pfBadgeList = pfBadgeList;
    return this;
  }

   /**
   * Get pfBadgeList
   * @return pfBadgeList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "object", value = "")

  public String getPfBadgeList() {
    return pfBadgeList;
  }


  public void setPfBadgeList(String pfBadgeList) {
    
    
    
    this.pfBadgeList = pfBadgeList;
  }


  public FeedbackListFeedbackResponseFeedbackListInner userName(String userName) {
    
    
    
    
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    
    
    
    this.userName = userName;
  }


  public FeedbackListFeedbackResponseFeedbackListInner customFieldModelList(String customFieldModelList) {
    
    
    
    
    this.customFieldModelList = customFieldModelList;
    return this;
  }

   /**
   * Get customFieldModelList
   * @return customFieldModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "object", value = "")

  public String getCustomFieldModelList() {
    return customFieldModelList;
  }


  public void setCustomFieldModelList(String customFieldModelList) {
    
    
    
    this.customFieldModelList = customFieldModelList;
  }


  public FeedbackListFeedbackResponseFeedbackListInner badgeNames(String badgeNames) {
    
    
    
    
    this.badgeNames = badgeNames;
    return this;
  }

   /**
   * Get badgeNames
   * @return badgeNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "object", value = "")

  public String getBadgeNames() {
    return badgeNames;
  }


  public void setBadgeNames(String badgeNames) {
    
    
    
    this.badgeNames = badgeNames;
  }


  public FeedbackListFeedbackResponseFeedbackListInner attachmentModelList(String attachmentModelList) {
    
    
    
    
    this.attachmentModelList = attachmentModelList;
    return this;
  }

   /**
   * Get attachmentModelList
   * @return attachmentModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "object", value = "")

  public String getAttachmentModelList() {
    return attachmentModelList;
  }


  public void setAttachmentModelList(String attachmentModelList) {
    
    
    
    this.attachmentModelList = attachmentModelList;
  }


  public FeedbackListFeedbackResponseFeedbackListInner wallName(String wallName) {
    
    
    
    
    this.wallName = wallName;
    return this;
  }

   /**
   * Get wallName
   * @return wallName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getWallName() {
    return wallName;
  }


  public void setWallName(String wallName) {
    
    
    
    this.wallName = wallName;
  }


  public FeedbackListFeedbackResponseFeedbackListInner skillString(String skillString) {
    
    
    
    
    this.skillString = skillString;
    return this;
  }

   /**
   * Get skillString
   * @return skillString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getSkillString() {
    return skillString;
  }


  public void setSkillString(String skillString) {
    
    
    
    this.skillString = skillString;
  }


  public FeedbackListFeedbackResponseFeedbackListInner reactionType(String reactionType) {
    
    
    
    
    this.reactionType = reactionType;
    return this;
  }

   /**
   * Get reactionType
   * @return reactionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getReactionType() {
    return reactionType;
  }


  public void setReactionType(String reactionType) {
    
    
    
    this.reactionType = reactionType;
  }


  public FeedbackListFeedbackResponseFeedbackListInner id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the FeedbackListFeedbackResponseFeedbackListInner instance itself
   */
  public FeedbackListFeedbackResponseFeedbackListInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeedbackListFeedbackResponseFeedbackListInner feedbackListFeedbackResponseFeedbackListInner = (FeedbackListFeedbackResponseFeedbackListInner) o;
    return Objects.equals(this.feedbackid, feedbackListFeedbackResponseFeedbackListInner.feedbackid) &&
        Objects.equals(this.feedback, feedbackListFeedbackResponseFeedbackListInner.feedback) &&
        Objects.equals(this.feedbackDesc, feedbackListFeedbackResponseFeedbackListInner.feedbackDesc) &&
        Objects.equals(this.assignedUserModel, feedbackListFeedbackResponseFeedbackListInner.assignedUserModel) &&
        Objects.equals(this.cid, feedbackListFeedbackResponseFeedbackListInner.cid) &&
        Objects.equals(this.createts, feedbackListFeedbackResponseFeedbackListInner.createts) &&
        Objects.equals(this.pfSkillList, feedbackListFeedbackResponseFeedbackListInner.pfSkillList) &&
        Objects.equals(this.createUserModel, feedbackListFeedbackResponseFeedbackListInner.createUserModel) &&
        Objects.equals(this.assessment, feedbackListFeedbackResponseFeedbackListInner.assessment) &&
        Objects.equals(this.status, feedbackListFeedbackResponseFeedbackListInner.status) &&
        Objects.equals(this.recipientStatus, feedbackListFeedbackResponseFeedbackListInner.recipientStatus) &&
        Objects.equals(this.objectType, feedbackListFeedbackResponseFeedbackListInner.objectType) &&
        Objects.equals(this.sentimentCode, feedbackListFeedbackResponseFeedbackListInner.sentimentCode) &&
        Objects.equals(this.sentimentScore, feedbackListFeedbackResponseFeedbackListInner.sentimentScore) &&
        Objects.equals(this.pfBadgeList, feedbackListFeedbackResponseFeedbackListInner.pfBadgeList) &&
        Objects.equals(this.userName, feedbackListFeedbackResponseFeedbackListInner.userName) &&
        Objects.equals(this.customFieldModelList, feedbackListFeedbackResponseFeedbackListInner.customFieldModelList) &&
        Objects.equals(this.badgeNames, feedbackListFeedbackResponseFeedbackListInner.badgeNames) &&
        Objects.equals(this.attachmentModelList, feedbackListFeedbackResponseFeedbackListInner.attachmentModelList) &&
        Objects.equals(this.wallName, feedbackListFeedbackResponseFeedbackListInner.wallName) &&
        Objects.equals(this.skillString, feedbackListFeedbackResponseFeedbackListInner.skillString) &&
        Objects.equals(this.reactionType, feedbackListFeedbackResponseFeedbackListInner.reactionType) &&
        Objects.equals(this.id, feedbackListFeedbackResponseFeedbackListInner.id)&&
        Objects.equals(this.additionalProperties, feedbackListFeedbackResponseFeedbackListInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feedbackid, feedback, feedbackDesc, assignedUserModel, cid, createts, pfSkillList, createUserModel, assessment, status, recipientStatus, objectType, sentimentCode, sentimentScore, pfBadgeList, userName, customFieldModelList, badgeNames, attachmentModelList, wallName, skillString, reactionType, id, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeedbackListFeedbackResponseFeedbackListInner {\n");
    sb.append("    feedbackid: ").append(toIndentedString(feedbackid)).append("\n");
    sb.append("    feedback: ").append(toIndentedString(feedback)).append("\n");
    sb.append("    feedbackDesc: ").append(toIndentedString(feedbackDesc)).append("\n");
    sb.append("    assignedUserModel: ").append(toIndentedString(assignedUserModel)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    pfSkillList: ").append(toIndentedString(pfSkillList)).append("\n");
    sb.append("    createUserModel: ").append(toIndentedString(createUserModel)).append("\n");
    sb.append("    assessment: ").append(toIndentedString(assessment)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    recipientStatus: ").append(toIndentedString(recipientStatus)).append("\n");
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("    sentimentCode: ").append(toIndentedString(sentimentCode)).append("\n");
    sb.append("    sentimentScore: ").append(toIndentedString(sentimentScore)).append("\n");
    sb.append("    pfBadgeList: ").append(toIndentedString(pfBadgeList)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    customFieldModelList: ").append(toIndentedString(customFieldModelList)).append("\n");
    sb.append("    badgeNames: ").append(toIndentedString(badgeNames)).append("\n");
    sb.append("    attachmentModelList: ").append(toIndentedString(attachmentModelList)).append("\n");
    sb.append("    wallName: ").append(toIndentedString(wallName)).append("\n");
    sb.append("    skillString: ").append(toIndentedString(skillString)).append("\n");
    sb.append("    reactionType: ").append(toIndentedString(reactionType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("feedbackid");
    openapiFields.add("feedback");
    openapiFields.add("feedbackDesc");
    openapiFields.add("assignedUserModel");
    openapiFields.add("cid");
    openapiFields.add("createts");
    openapiFields.add("pfSkillList");
    openapiFields.add("createUserModel");
    openapiFields.add("assessment");
    openapiFields.add("status");
    openapiFields.add("recipientStatus");
    openapiFields.add("objectType");
    openapiFields.add("sentimentCode");
    openapiFields.add("sentimentScore");
    openapiFields.add("pfBadgeList");
    openapiFields.add("userName");
    openapiFields.add("customFieldModelList");
    openapiFields.add("badgeNames");
    openapiFields.add("attachmentModelList");
    openapiFields.add("wallName");
    openapiFields.add("skillString");
    openapiFields.add("reactionType");
    openapiFields.add("id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FeedbackListFeedbackResponseFeedbackListInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FeedbackListFeedbackResponseFeedbackListInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FeedbackListFeedbackResponseFeedbackListInner is not found in the empty JSON string", FeedbackListFeedbackResponseFeedbackListInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("feedbackid") != null && !jsonObj.get("feedbackid").isJsonNull()) && !jsonObj.get("feedbackid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedbackid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feedbackid").toString()));
      }
      if ((jsonObj.get("feedback") != null && !jsonObj.get("feedback").isJsonNull()) && !jsonObj.get("feedback").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedback` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feedback").toString()));
      }
      if ((jsonObj.get("feedbackDesc") != null && !jsonObj.get("feedbackDesc").isJsonNull()) && !jsonObj.get("feedbackDesc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedbackDesc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feedbackDesc").toString()));
      }
      // validate the optional field `assignedUserModel`
      if (jsonObj.get("assignedUserModel") != null && !jsonObj.get("assignedUserModel").isJsonNull()) {
        FeedbackListFeedbackResponseFeedbackListInnerAssignedUserModel.validateJsonObject(jsonObj.getAsJsonObject("assignedUserModel"));
      }
      if ((jsonObj.get("cid") != null && !jsonObj.get("cid").isJsonNull()) && !jsonObj.get("cid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cid").toString()));
      }
      if ((jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) && !jsonObj.get("createts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createts").toString()));
      }
      if ((jsonObj.get("pfSkillList") != null && !jsonObj.get("pfSkillList").isJsonNull()) && !jsonObj.get("pfSkillList").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pfSkillList` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pfSkillList").toString()));
      }
      if ((jsonObj.get("createUserModel") != null && !jsonObj.get("createUserModel").isJsonNull()) && !jsonObj.get("createUserModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createUserModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createUserModel").toString()));
      }
      if ((jsonObj.get("assessment") != null && !jsonObj.get("assessment").isJsonNull()) && !jsonObj.get("assessment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assessment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assessment").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("recipientStatus") != null && !jsonObj.get("recipientStatus").isJsonNull()) && !jsonObj.get("recipientStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipientStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipientStatus").toString()));
      }
      if ((jsonObj.get("objectType") != null && !jsonObj.get("objectType").isJsonNull()) && !jsonObj.get("objectType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `objectType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("objectType").toString()));
      }
      if ((jsonObj.get("sentimentCode") != null && !jsonObj.get("sentimentCode").isJsonNull()) && !jsonObj.get("sentimentCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sentimentCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sentimentCode").toString()));
      }
      if ((jsonObj.get("sentimentScore") != null && !jsonObj.get("sentimentScore").isJsonNull()) && !jsonObj.get("sentimentScore").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sentimentScore` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sentimentScore").toString()));
      }
      if ((jsonObj.get("pfBadgeList") != null && !jsonObj.get("pfBadgeList").isJsonNull()) && !jsonObj.get("pfBadgeList").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pfBadgeList` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pfBadgeList").toString()));
      }
      if ((jsonObj.get("userName") != null && !jsonObj.get("userName").isJsonNull()) && !jsonObj.get("userName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userName").toString()));
      }
      if ((jsonObj.get("customFieldModelList") != null && !jsonObj.get("customFieldModelList").isJsonNull()) && !jsonObj.get("customFieldModelList").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customFieldModelList` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customFieldModelList").toString()));
      }
      if ((jsonObj.get("badgeNames") != null && !jsonObj.get("badgeNames").isJsonNull()) && !jsonObj.get("badgeNames").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `badgeNames` to be a primitive type in the JSON string but got `%s`", jsonObj.get("badgeNames").toString()));
      }
      if ((jsonObj.get("attachmentModelList") != null && !jsonObj.get("attachmentModelList").isJsonNull()) && !jsonObj.get("attachmentModelList").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attachmentModelList` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attachmentModelList").toString()));
      }
      if ((jsonObj.get("wallName") != null && !jsonObj.get("wallName").isJsonNull()) && !jsonObj.get("wallName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wallName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wallName").toString()));
      }
      if ((jsonObj.get("skillString") != null && !jsonObj.get("skillString").isJsonNull()) && !jsonObj.get("skillString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `skillString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("skillString").toString()));
      }
      if ((jsonObj.get("reactionType") != null && !jsonObj.get("reactionType").isJsonNull()) && !jsonObj.get("reactionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reactionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reactionType").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FeedbackListFeedbackResponseFeedbackListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FeedbackListFeedbackResponseFeedbackListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FeedbackListFeedbackResponseFeedbackListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FeedbackListFeedbackResponseFeedbackListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<FeedbackListFeedbackResponseFeedbackListInner>() {
           @Override
           public void write(JsonWriter out, FeedbackListFeedbackResponseFeedbackListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public FeedbackListFeedbackResponseFeedbackListInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             FeedbackListFeedbackResponseFeedbackListInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FeedbackListFeedbackResponseFeedbackListInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FeedbackListFeedbackResponseFeedbackListInner
  * @throws IOException if the JSON string is invalid with respect to FeedbackListFeedbackResponseFeedbackListInner
  */
  public static FeedbackListFeedbackResponseFeedbackListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FeedbackListFeedbackResponseFeedbackListInner.class);
  }

 /**
  * Convert an instance of FeedbackListFeedbackResponseFeedbackListInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

