/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.UserGroupModel;
import com.konfigthis.client.model.UserModel;
import com.konfigthis.client.model.UserViewModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * DynaFormSlimModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class DynaFormSlimModel {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ANONYMOUS = "anonymous";
  @SerializedName(SERIALIZED_NAME_ANONYMOUS)
  private Integer anonymous;

  public static final String SERIALIZED_NAME_ATTEMPT_LIMIT = "attemptLimit";
  @SerializedName(SERIALIZED_NAME_ATTEMPT_LIMIT)
  private String attemptLimit;

  public static final String SERIALIZED_NAME_AVAILABILITY = "availability";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY)
  private String availability;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CREATE_USER_MODEL = "createUserModel";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_MODEL)
  private UserModel createUserModel;

  public static final String SERIALIZED_NAME_CREATE_USER_VIEW_MODEL = "createUserViewModel";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_VIEW_MODEL)
  private UserViewModel createUserViewModel;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_DATA_FLOW = "dataFlow";
  @SerializedName(SERIALIZED_NAME_DATA_FLOW)
  private String dataFlow;

  public static final String SERIALIZED_NAME_DYNA_FORM_CODE = "dynaFormCode";
  @SerializedName(SERIALIZED_NAME_DYNA_FORM_CODE)
  private String dynaFormCode;

  public static final String SERIALIZED_NAME_DYNAMIC_FORM_ID = "dynamicFormId";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_FORM_ID)
  private Integer dynamicFormId;

  public static final String SERIALIZED_NAME_FORM_TYPE = "formType";
  @SerializedName(SERIALIZED_NAME_FORM_TYPE)
  private String formType;

  public static final String SERIALIZED_NAME_LAYOUT = "layout";
  @SerializedName(SERIALIZED_NAME_LAYOUT)
  private String layout;

  public static final String SERIALIZED_NAME_MAPPED_ENTITY = "mappedEntity";
  @SerializedName(SERIALIZED_NAME_MAPPED_ENTITY)
  private String mappedEntity;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRESENTATION_STYLE = "presentationStyle";
  @SerializedName(SERIALIZED_NAME_PRESENTATION_STYLE)
  private String presentationStyle;

  public static final String SERIALIZED_NAME_PUBLIC_SUMMARY = "publicSummary";
  @SerializedName(SERIALIZED_NAME_PUBLIC_SUMMARY)
  private Boolean publicSummary;

  public static final String SERIALIZED_NAME_SEC_SEQUENCE = "secSequence";
  @SerializedName(SERIALIZED_NAME_SEC_SEQUENCE)
  private String secSequence;

  public static final String SERIALIZED_NAME_SHOW_CORRECT = "showCorrect";
  @SerializedName(SERIALIZED_NAME_SHOW_CORRECT)
  private Boolean showCorrect;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_THRESHOLD_SCORE = "thresholdScore";
  @SerializedName(SERIALIZED_NAME_THRESHOLD_SCORE)
  private Double thresholdScore;

  public static final String SERIALIZED_NAME_TIME_LIMIT = "timeLimit";
  @SerializedName(SERIALIZED_NAME_TIME_LIMIT)
  private Integer timeLimit;

  public static final String SERIALIZED_NAME_UPDATETS = "updatets";
  @SerializedName(SERIALIZED_NAME_UPDATETS)
  private Timestamp updatets;

  public static final String SERIALIZED_NAME_USER_GROUP_MODEL = "userGroupModel";
  @SerializedName(SERIALIZED_NAME_USER_GROUP_MODEL)
  private UserGroupModel userGroupModel;

  public DynaFormSlimModel() {
  }

  public DynaFormSlimModel description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public DynaFormSlimModel anonymous(Integer anonymous) {
    
    
    
    
    this.anonymous = anonymous;
    return this;
  }

   /**
   * Get anonymous
   * @return anonymous
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAnonymous() {
    return anonymous;
  }


  public void setAnonymous(Integer anonymous) {
    
    
    
    this.anonymous = anonymous;
  }


  public DynaFormSlimModel attemptLimit(String attemptLimit) {
    
    
    
    
    this.attemptLimit = attemptLimit;
    return this;
  }

   /**
   * Get attemptLimit
   * @return attemptLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAttemptLimit() {
    return attemptLimit;
  }


  public void setAttemptLimit(String attemptLimit) {
    
    
    
    this.attemptLimit = attemptLimit;
  }


  public DynaFormSlimModel availability(String availability) {
    
    
    
    
    this.availability = availability;
    return this;
  }

   /**
   * Get availability
   * @return availability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAvailability() {
    return availability;
  }


  public void setAvailability(String availability) {
    
    
    
    this.availability = availability;
  }


  public DynaFormSlimModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public DynaFormSlimModel createUserModel(UserModel createUserModel) {
    
    
    
    
    this.createUserModel = createUserModel;
    return this;
  }

   /**
   * Get createUserModel
   * @return createUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getCreateUserModel() {
    return createUserModel;
  }


  public void setCreateUserModel(UserModel createUserModel) {
    
    
    
    this.createUserModel = createUserModel;
  }


  public DynaFormSlimModel createUserViewModel(UserViewModel createUserViewModel) {
    
    
    
    
    this.createUserViewModel = createUserViewModel;
    return this;
  }

   /**
   * Get createUserViewModel
   * @return createUserViewModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserViewModel getCreateUserViewModel() {
    return createUserViewModel;
  }


  public void setCreateUserViewModel(UserViewModel createUserViewModel) {
    
    
    
    this.createUserViewModel = createUserViewModel;
  }


  public DynaFormSlimModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public DynaFormSlimModel dataFlow(String dataFlow) {
    
    
    
    
    this.dataFlow = dataFlow;
    return this;
  }

   /**
   * Get dataFlow
   * @return dataFlow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDataFlow() {
    return dataFlow;
  }


  public void setDataFlow(String dataFlow) {
    
    
    
    this.dataFlow = dataFlow;
  }


  public DynaFormSlimModel dynaFormCode(String dynaFormCode) {
    
    
    
    
    this.dynaFormCode = dynaFormCode;
    return this;
  }

   /**
   * Get dynaFormCode
   * @return dynaFormCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDynaFormCode() {
    return dynaFormCode;
  }


  public void setDynaFormCode(String dynaFormCode) {
    
    
    
    this.dynaFormCode = dynaFormCode;
  }


  public DynaFormSlimModel dynamicFormId(Integer dynamicFormId) {
    
    
    
    
    this.dynamicFormId = dynamicFormId;
    return this;
  }

   /**
   * Get dynamicFormId
   * @return dynamicFormId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDynamicFormId() {
    return dynamicFormId;
  }


  public void setDynamicFormId(Integer dynamicFormId) {
    
    
    
    this.dynamicFormId = dynamicFormId;
  }


  public DynaFormSlimModel formType(String formType) {
    
    
    
    
    this.formType = formType;
    return this;
  }

   /**
   * Get formType
   * @return formType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFormType() {
    return formType;
  }


  public void setFormType(String formType) {
    
    
    
    this.formType = formType;
  }


  public DynaFormSlimModel layout(String layout) {
    
    
    
    
    this.layout = layout;
    return this;
  }

   /**
   * Get layout
   * @return layout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLayout() {
    return layout;
  }


  public void setLayout(String layout) {
    
    
    
    this.layout = layout;
  }


  public DynaFormSlimModel mappedEntity(String mappedEntity) {
    
    
    
    
    this.mappedEntity = mappedEntity;
    return this;
  }

   /**
   * Get mappedEntity
   * @return mappedEntity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMappedEntity() {
    return mappedEntity;
  }


  public void setMappedEntity(String mappedEntity) {
    
    
    
    this.mappedEntity = mappedEntity;
  }


  public DynaFormSlimModel name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public DynaFormSlimModel presentationStyle(String presentationStyle) {
    
    
    
    
    this.presentationStyle = presentationStyle;
    return this;
  }

   /**
   * Get presentationStyle
   * @return presentationStyle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPresentationStyle() {
    return presentationStyle;
  }


  public void setPresentationStyle(String presentationStyle) {
    
    
    
    this.presentationStyle = presentationStyle;
  }


  public DynaFormSlimModel publicSummary(Boolean publicSummary) {
    
    
    
    
    this.publicSummary = publicSummary;
    return this;
  }

   /**
   * Get publicSummary
   * @return publicSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPublicSummary() {
    return publicSummary;
  }


  public void setPublicSummary(Boolean publicSummary) {
    
    
    
    this.publicSummary = publicSummary;
  }


  public DynaFormSlimModel secSequence(String secSequence) {
    
    
    
    
    this.secSequence = secSequence;
    return this;
  }

   /**
   * Get secSequence
   * @return secSequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecSequence() {
    return secSequence;
  }


  public void setSecSequence(String secSequence) {
    
    
    
    this.secSequence = secSequence;
  }


  public DynaFormSlimModel showCorrect(Boolean showCorrect) {
    
    
    
    
    this.showCorrect = showCorrect;
    return this;
  }

   /**
   * Get showCorrect
   * @return showCorrect
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getShowCorrect() {
    return showCorrect;
  }


  public void setShowCorrect(Boolean showCorrect) {
    
    
    
    this.showCorrect = showCorrect;
  }


  public DynaFormSlimModel status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public DynaFormSlimModel thresholdScore(Double thresholdScore) {
    
    
    
    
    this.thresholdScore = thresholdScore;
    return this;
  }

   /**
   * Get thresholdScore
   * @return thresholdScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getThresholdScore() {
    return thresholdScore;
  }


  public void setThresholdScore(Double thresholdScore) {
    
    
    
    this.thresholdScore = thresholdScore;
  }


  public DynaFormSlimModel timeLimit(Integer timeLimit) {
    
    
    
    
    this.timeLimit = timeLimit;
    return this;
  }

   /**
   * Get timeLimit
   * @return timeLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTimeLimit() {
    return timeLimit;
  }


  public void setTimeLimit(Integer timeLimit) {
    
    
    
    this.timeLimit = timeLimit;
  }


  public DynaFormSlimModel updatets(Timestamp updatets) {
    
    
    
    
    this.updatets = updatets;
    return this;
  }

   /**
   * Get updatets
   * @return updatets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getUpdatets() {
    return updatets;
  }


  public void setUpdatets(Timestamp updatets) {
    
    
    
    this.updatets = updatets;
  }


  public DynaFormSlimModel userGroupModel(UserGroupModel userGroupModel) {
    
    
    
    
    this.userGroupModel = userGroupModel;
    return this;
  }

   /**
   * Get userGroupModel
   * @return userGroupModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserGroupModel getUserGroupModel() {
    return userGroupModel;
  }


  public void setUserGroupModel(UserGroupModel userGroupModel) {
    
    
    
    this.userGroupModel = userGroupModel;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the DynaFormSlimModel instance itself
   */
  public DynaFormSlimModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DynaFormSlimModel dynaFormSlimModel = (DynaFormSlimModel) o;
    return Objects.equals(this.description, dynaFormSlimModel.description) &&
        Objects.equals(this.anonymous, dynaFormSlimModel.anonymous) &&
        Objects.equals(this.attemptLimit, dynaFormSlimModel.attemptLimit) &&
        Objects.equals(this.availability, dynaFormSlimModel.availability) &&
        Objects.equals(this.cid, dynaFormSlimModel.cid) &&
        Objects.equals(this.createUserModel, dynaFormSlimModel.createUserModel) &&
        Objects.equals(this.createUserViewModel, dynaFormSlimModel.createUserViewModel) &&
        Objects.equals(this.createts, dynaFormSlimModel.createts) &&
        Objects.equals(this.dataFlow, dynaFormSlimModel.dataFlow) &&
        Objects.equals(this.dynaFormCode, dynaFormSlimModel.dynaFormCode) &&
        Objects.equals(this.dynamicFormId, dynaFormSlimModel.dynamicFormId) &&
        Objects.equals(this.formType, dynaFormSlimModel.formType) &&
        Objects.equals(this.layout, dynaFormSlimModel.layout) &&
        Objects.equals(this.mappedEntity, dynaFormSlimModel.mappedEntity) &&
        Objects.equals(this.name, dynaFormSlimModel.name) &&
        Objects.equals(this.presentationStyle, dynaFormSlimModel.presentationStyle) &&
        Objects.equals(this.publicSummary, dynaFormSlimModel.publicSummary) &&
        Objects.equals(this.secSequence, dynaFormSlimModel.secSequence) &&
        Objects.equals(this.showCorrect, dynaFormSlimModel.showCorrect) &&
        Objects.equals(this.status, dynaFormSlimModel.status) &&
        Objects.equals(this.thresholdScore, dynaFormSlimModel.thresholdScore) &&
        Objects.equals(this.timeLimit, dynaFormSlimModel.timeLimit) &&
        Objects.equals(this.updatets, dynaFormSlimModel.updatets) &&
        Objects.equals(this.userGroupModel, dynaFormSlimModel.userGroupModel)&&
        Objects.equals(this.additionalProperties, dynaFormSlimModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, anonymous, attemptLimit, availability, cid, createUserModel, createUserViewModel, createts, dataFlow, dynaFormCode, dynamicFormId, formType, layout, mappedEntity, name, presentationStyle, publicSummary, secSequence, showCorrect, status, thresholdScore, timeLimit, updatets, userGroupModel, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DynaFormSlimModel {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    anonymous: ").append(toIndentedString(anonymous)).append("\n");
    sb.append("    attemptLimit: ").append(toIndentedString(attemptLimit)).append("\n");
    sb.append("    availability: ").append(toIndentedString(availability)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    createUserModel: ").append(toIndentedString(createUserModel)).append("\n");
    sb.append("    createUserViewModel: ").append(toIndentedString(createUserViewModel)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    dataFlow: ").append(toIndentedString(dataFlow)).append("\n");
    sb.append("    dynaFormCode: ").append(toIndentedString(dynaFormCode)).append("\n");
    sb.append("    dynamicFormId: ").append(toIndentedString(dynamicFormId)).append("\n");
    sb.append("    formType: ").append(toIndentedString(formType)).append("\n");
    sb.append("    layout: ").append(toIndentedString(layout)).append("\n");
    sb.append("    mappedEntity: ").append(toIndentedString(mappedEntity)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    presentationStyle: ").append(toIndentedString(presentationStyle)).append("\n");
    sb.append("    publicSummary: ").append(toIndentedString(publicSummary)).append("\n");
    sb.append("    secSequence: ").append(toIndentedString(secSequence)).append("\n");
    sb.append("    showCorrect: ").append(toIndentedString(showCorrect)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    thresholdScore: ").append(toIndentedString(thresholdScore)).append("\n");
    sb.append("    timeLimit: ").append(toIndentedString(timeLimit)).append("\n");
    sb.append("    updatets: ").append(toIndentedString(updatets)).append("\n");
    sb.append("    userGroupModel: ").append(toIndentedString(userGroupModel)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("anonymous");
    openapiFields.add("attemptLimit");
    openapiFields.add("availability");
    openapiFields.add("cid");
    openapiFields.add("createUserModel");
    openapiFields.add("createUserViewModel");
    openapiFields.add("createts");
    openapiFields.add("dataFlow");
    openapiFields.add("dynaFormCode");
    openapiFields.add("dynamicFormId");
    openapiFields.add("formType");
    openapiFields.add("layout");
    openapiFields.add("mappedEntity");
    openapiFields.add("name");
    openapiFields.add("presentationStyle");
    openapiFields.add("publicSummary");
    openapiFields.add("secSequence");
    openapiFields.add("showCorrect");
    openapiFields.add("status");
    openapiFields.add("thresholdScore");
    openapiFields.add("timeLimit");
    openapiFields.add("updatets");
    openapiFields.add("userGroupModel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DynaFormSlimModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DynaFormSlimModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DynaFormSlimModel is not found in the empty JSON string", DynaFormSlimModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("attemptLimit") != null && !jsonObj.get("attemptLimit").isJsonNull()) && !jsonObj.get("attemptLimit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attemptLimit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attemptLimit").toString()));
      }
      if ((jsonObj.get("availability") != null && !jsonObj.get("availability").isJsonNull()) && !jsonObj.get("availability").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `availability` to be a primitive type in the JSON string but got `%s`", jsonObj.get("availability").toString()));
      }
      // validate the optional field `createUserModel`
      if (jsonObj.get("createUserModel") != null && !jsonObj.get("createUserModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("createUserModel"));
      }
      // validate the optional field `createUserViewModel`
      if (jsonObj.get("createUserViewModel") != null && !jsonObj.get("createUserViewModel").isJsonNull()) {
        UserViewModel.validateJsonObject(jsonObj.getAsJsonObject("createUserViewModel"));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      if ((jsonObj.get("dataFlow") != null && !jsonObj.get("dataFlow").isJsonNull()) && !jsonObj.get("dataFlow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataFlow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataFlow").toString()));
      }
      if ((jsonObj.get("dynaFormCode") != null && !jsonObj.get("dynaFormCode").isJsonNull()) && !jsonObj.get("dynaFormCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dynaFormCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dynaFormCode").toString()));
      }
      if ((jsonObj.get("formType") != null && !jsonObj.get("formType").isJsonNull()) && !jsonObj.get("formType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `formType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("formType").toString()));
      }
      if ((jsonObj.get("layout") != null && !jsonObj.get("layout").isJsonNull()) && !jsonObj.get("layout").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `layout` to be a primitive type in the JSON string but got `%s`", jsonObj.get("layout").toString()));
      }
      if ((jsonObj.get("mappedEntity") != null && !jsonObj.get("mappedEntity").isJsonNull()) && !jsonObj.get("mappedEntity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mappedEntity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mappedEntity").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("presentationStyle") != null && !jsonObj.get("presentationStyle").isJsonNull()) && !jsonObj.get("presentationStyle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `presentationStyle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("presentationStyle").toString()));
      }
      if ((jsonObj.get("secSequence") != null && !jsonObj.get("secSequence").isJsonNull()) && !jsonObj.get("secSequence").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secSequence` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secSequence").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `updatets`
      if (jsonObj.get("updatets") != null && !jsonObj.get("updatets").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("updatets"));
      }
      // validate the optional field `userGroupModel`
      if (jsonObj.get("userGroupModel") != null && !jsonObj.get("userGroupModel").isJsonNull()) {
        UserGroupModel.validateJsonObject(jsonObj.getAsJsonObject("userGroupModel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DynaFormSlimModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DynaFormSlimModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DynaFormSlimModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DynaFormSlimModel.class));

       return (TypeAdapter<T>) new TypeAdapter<DynaFormSlimModel>() {
           @Override
           public void write(JsonWriter out, DynaFormSlimModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public DynaFormSlimModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             DynaFormSlimModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DynaFormSlimModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DynaFormSlimModel
  * @throws IOException if the JSON string is invalid with respect to DynaFormSlimModel
  */
  public static DynaFormSlimModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DynaFormSlimModel.class);
  }

 /**
  * Convert an instance of DynaFormSlimModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

