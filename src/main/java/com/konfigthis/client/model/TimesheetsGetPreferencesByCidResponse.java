/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TimesheetsGetPreferencesByCidResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TimesheetsGetPreferencesByCidResponse {
  public static final String SERIALIZED_NAME_TIMESHEET_START_DAY = "timesheetStartDay";
  @SerializedName(SERIALIZED_NAME_TIMESHEET_START_DAY)
  private String timesheetStartDay;

  public static final String SERIALIZED_NAME_BILLABLE_PREF_VALUE = "billablePrefValue";
  @SerializedName(SERIALIZED_NAME_BILLABLE_PREF_VALUE)
  private String billablePrefValue;

  public static final String SERIALIZED_NAME_FUTURE_TC_PREF_VALUE = "futureTcPrefValue";
  @SerializedName(SERIALIZED_NAME_FUTURE_TC_PREF_VALUE)
  private String futureTcPrefValue;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_PROJECT_AREA_PREF_VALUE = "projectAreaPrefValue";
  @SerializedName(SERIALIZED_NAME_PROJECT_AREA_PREF_VALUE)
  private String projectAreaPrefValue;

  public static final String SERIALIZED_NAME_COMPLIANCE_MSG = "complianceMsg";
  @SerializedName(SERIALIZED_NAME_COMPLIANCE_MSG)
  private String complianceMsg;

  public static final String SERIALIZED_NAME_ACTIVITY_TYPE_PREF_VALUE = "activityTypePrefValue";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TYPE_PREF_VALUE)
  private String activityTypePrefValue;

  public static final String SERIALIZED_NAME_MOBILE_APP_CLOCK_IN_PREF_VALUE = "mobileAppClockInPrefValue";
  @SerializedName(SERIALIZED_NAME_MOBILE_APP_CLOCK_IN_PREF_VALUE)
  private String mobileAppClockInPrefValue;

  public static final String SERIALIZED_NAME_ALLOCATED_PROJECT_PREF_VALUE = "allocatedProjectPrefValue";
  @SerializedName(SERIALIZED_NAME_ALLOCATED_PROJECT_PREF_VALUE)
  private String allocatedProjectPrefValue;

  public static final String SERIALIZED_NAME_ADD_EDIT_TC_PREF_VALUE = "addEditTcPrefValue";
  @SerializedName(SERIALIZED_NAME_ADD_EDIT_TC_PREF_VALUE)
  private String addEditTcPrefValue;

  public static final String SERIALIZED_NAME_BACKDATED_TC_REASON_PREF_VALUE = "backdatedTcReasonPrefValue";
  @SerializedName(SERIALIZED_NAME_BACKDATED_TC_REASON_PREF_VALUE)
  private String backdatedTcReasonPrefValue;

  public static final String SERIALIZED_NAME_TIMESHEET_PERIOD = "timesheetPeriod";
  @SerializedName(SERIALIZED_NAME_TIMESHEET_PERIOD)
  private String timesheetPeriod;

  public static final String SERIALIZED_NAME_CATEGORY_PREF_VALUE = "categoryPrefValue";
  @SerializedName(SERIALIZED_NAME_CATEGORY_PREF_VALUE)
  private String categoryPrefValue;

  public static final String SERIALIZED_NAME_START_TIME_END_TIME_REQUIRED = "startTimeEndTimeRequired";
  @SerializedName(SERIALIZED_NAME_START_TIME_END_TIME_REQUIRED)
  private String startTimeEndTimeRequired;

  public static final String SERIALIZED_NAME_WORKING_HRS_PER_DAY = "workingHrsPerDay";
  @SerializedName(SERIALIZED_NAME_WORKING_HRS_PER_DAY)
  private String workingHrsPerDay;

  public static final String SERIALIZED_NAME_KIOSK_APP_CLOCK_IN_PREF_VALUE = "kioskAppClockInPrefValue";
  @SerializedName(SERIALIZED_NAME_KIOSK_APP_CLOCK_IN_PREF_VALUE)
  private String kioskAppClockInPrefValue;

  public static final String SERIALIZED_NAME_QR_CODE_CLOCK_IN_PREF_VALUE = "qrCodeClockInPrefValue";
  @SerializedName(SERIALIZED_NAME_QR_CODE_CLOCK_IN_PREF_VALUE)
  private String qrCodeClockInPrefValue;

  public static final String SERIALIZED_NAME_TC_APPROVAL_REASON_PREF_VALUE = "tcApprovalReasonPrefValue";
  @SerializedName(SERIALIZED_NAME_TC_APPROVAL_REASON_PREF_VALUE)
  private String tcApprovalReasonPrefValue;

  public static final String SERIALIZED_NAME_CLOCK_IN_OUTSIDE_GEOFENCE_PREFERENCE_VALUE = "clockInOutsideGeofencePreferenceValue";
  @SerializedName(SERIALIZED_NAME_CLOCK_IN_OUTSIDE_GEOFENCE_PREFERENCE_VALUE)
  private String clockInOutsideGeofencePreferenceValue;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_TC_REJECTION_REASON_PREF_VALUE = "tcRejectionReasonPrefValue";
  @SerializedName(SERIALIZED_NAME_TC_REJECTION_REASON_PREF_VALUE)
  private String tcRejectionReasonPrefValue;

  public TimesheetsGetPreferencesByCidResponse() {
  }

  public TimesheetsGetPreferencesByCidResponse timesheetStartDay(String timesheetStartDay) {
    
    
    
    
    this.timesheetStartDay = timesheetStartDay;
    return this;
  }

   /**
   * Get timesheetStartDay
   * @return timesheetStartDay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getTimesheetStartDay() {
    return timesheetStartDay;
  }


  public void setTimesheetStartDay(String timesheetStartDay) {
    
    
    
    this.timesheetStartDay = timesheetStartDay;
  }


  public TimesheetsGetPreferencesByCidResponse billablePrefValue(String billablePrefValue) {
    
    
    
    
    this.billablePrefValue = billablePrefValue;
    return this;
  }

   /**
   * Get billablePrefValue
   * @return billablePrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getBillablePrefValue() {
    return billablePrefValue;
  }


  public void setBillablePrefValue(String billablePrefValue) {
    
    
    
    this.billablePrefValue = billablePrefValue;
  }


  public TimesheetsGetPreferencesByCidResponse futureTcPrefValue(String futureTcPrefValue) {
    
    
    
    
    this.futureTcPrefValue = futureTcPrefValue;
    return this;
  }

   /**
   * Get futureTcPrefValue
   * @return futureTcPrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getFutureTcPrefValue() {
    return futureTcPrefValue;
  }


  public void setFutureTcPrefValue(String futureTcPrefValue) {
    
    
    
    this.futureTcPrefValue = futureTcPrefValue;
  }


  public TimesheetsGetPreferencesByCidResponse endDate(String endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "date", value = "")

  public String getEndDate() {
    return endDate;
  }


  public void setEndDate(String endDate) {
    
    
    
    this.endDate = endDate;
  }


  public TimesheetsGetPreferencesByCidResponse projectAreaPrefValue(String projectAreaPrefValue) {
    
    
    
    
    this.projectAreaPrefValue = projectAreaPrefValue;
    return this;
  }

   /**
   * Get projectAreaPrefValue
   * @return projectAreaPrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getProjectAreaPrefValue() {
    return projectAreaPrefValue;
  }


  public void setProjectAreaPrefValue(String projectAreaPrefValue) {
    
    
    
    this.projectAreaPrefValue = projectAreaPrefValue;
  }


  public TimesheetsGetPreferencesByCidResponse complianceMsg(String complianceMsg) {
    
    
    
    
    this.complianceMsg = complianceMsg;
    return this;
  }

   /**
   * Get complianceMsg
   * @return complianceMsg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getComplianceMsg() {
    return complianceMsg;
  }


  public void setComplianceMsg(String complianceMsg) {
    
    
    
    this.complianceMsg = complianceMsg;
  }


  public TimesheetsGetPreferencesByCidResponse activityTypePrefValue(String activityTypePrefValue) {
    
    
    
    
    this.activityTypePrefValue = activityTypePrefValue;
    return this;
  }

   /**
   * Get activityTypePrefValue
   * @return activityTypePrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getActivityTypePrefValue() {
    return activityTypePrefValue;
  }


  public void setActivityTypePrefValue(String activityTypePrefValue) {
    
    
    
    this.activityTypePrefValue = activityTypePrefValue;
  }


  public TimesheetsGetPreferencesByCidResponse mobileAppClockInPrefValue(String mobileAppClockInPrefValue) {
    
    
    
    
    this.mobileAppClockInPrefValue = mobileAppClockInPrefValue;
    return this;
  }

   /**
   * Get mobileAppClockInPrefValue
   * @return mobileAppClockInPrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getMobileAppClockInPrefValue() {
    return mobileAppClockInPrefValue;
  }


  public void setMobileAppClockInPrefValue(String mobileAppClockInPrefValue) {
    
    
    
    this.mobileAppClockInPrefValue = mobileAppClockInPrefValue;
  }


  public TimesheetsGetPreferencesByCidResponse allocatedProjectPrefValue(String allocatedProjectPrefValue) {
    
    
    
    
    this.allocatedProjectPrefValue = allocatedProjectPrefValue;
    return this;
  }

   /**
   * Get allocatedProjectPrefValue
   * @return allocatedProjectPrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getAllocatedProjectPrefValue() {
    return allocatedProjectPrefValue;
  }


  public void setAllocatedProjectPrefValue(String allocatedProjectPrefValue) {
    
    
    
    this.allocatedProjectPrefValue = allocatedProjectPrefValue;
  }


  public TimesheetsGetPreferencesByCidResponse addEditTcPrefValue(String addEditTcPrefValue) {
    
    
    
    
    this.addEditTcPrefValue = addEditTcPrefValue;
    return this;
  }

   /**
   * Get addEditTcPrefValue
   * @return addEditTcPrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getAddEditTcPrefValue() {
    return addEditTcPrefValue;
  }


  public void setAddEditTcPrefValue(String addEditTcPrefValue) {
    
    
    
    this.addEditTcPrefValue = addEditTcPrefValue;
  }


  public TimesheetsGetPreferencesByCidResponse backdatedTcReasonPrefValue(String backdatedTcReasonPrefValue) {
    
    
    
    
    this.backdatedTcReasonPrefValue = backdatedTcReasonPrefValue;
    return this;
  }

   /**
   * Get backdatedTcReasonPrefValue
   * @return backdatedTcReasonPrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getBackdatedTcReasonPrefValue() {
    return backdatedTcReasonPrefValue;
  }


  public void setBackdatedTcReasonPrefValue(String backdatedTcReasonPrefValue) {
    
    
    
    this.backdatedTcReasonPrefValue = backdatedTcReasonPrefValue;
  }


  public TimesheetsGetPreferencesByCidResponse timesheetPeriod(String timesheetPeriod) {
    
    
    
    
    this.timesheetPeriod = timesheetPeriod;
    return this;
  }

   /**
   * Get timesheetPeriod
   * @return timesheetPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getTimesheetPeriod() {
    return timesheetPeriod;
  }


  public void setTimesheetPeriod(String timesheetPeriod) {
    
    
    
    this.timesheetPeriod = timesheetPeriod;
  }


  public TimesheetsGetPreferencesByCidResponse categoryPrefValue(String categoryPrefValue) {
    
    
    
    
    this.categoryPrefValue = categoryPrefValue;
    return this;
  }

   /**
   * Get categoryPrefValue
   * @return categoryPrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getCategoryPrefValue() {
    return categoryPrefValue;
  }


  public void setCategoryPrefValue(String categoryPrefValue) {
    
    
    
    this.categoryPrefValue = categoryPrefValue;
  }


  public TimesheetsGetPreferencesByCidResponse startTimeEndTimeRequired(String startTimeEndTimeRequired) {
    
    
    
    
    this.startTimeEndTimeRequired = startTimeEndTimeRequired;
    return this;
  }

   /**
   * Get startTimeEndTimeRequired
   * @return startTimeEndTimeRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getStartTimeEndTimeRequired() {
    return startTimeEndTimeRequired;
  }


  public void setStartTimeEndTimeRequired(String startTimeEndTimeRequired) {
    
    
    
    this.startTimeEndTimeRequired = startTimeEndTimeRequired;
  }


  public TimesheetsGetPreferencesByCidResponse workingHrsPerDay(String workingHrsPerDay) {
    
    
    
    
    this.workingHrsPerDay = workingHrsPerDay;
    return this;
  }

   /**
   * Get workingHrsPerDay
   * @return workingHrsPerDay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getWorkingHrsPerDay() {
    return workingHrsPerDay;
  }


  public void setWorkingHrsPerDay(String workingHrsPerDay) {
    
    
    
    this.workingHrsPerDay = workingHrsPerDay;
  }


  public TimesheetsGetPreferencesByCidResponse kioskAppClockInPrefValue(String kioskAppClockInPrefValue) {
    
    
    
    
    this.kioskAppClockInPrefValue = kioskAppClockInPrefValue;
    return this;
  }

   /**
   * Get kioskAppClockInPrefValue
   * @return kioskAppClockInPrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getKioskAppClockInPrefValue() {
    return kioskAppClockInPrefValue;
  }


  public void setKioskAppClockInPrefValue(String kioskAppClockInPrefValue) {
    
    
    
    this.kioskAppClockInPrefValue = kioskAppClockInPrefValue;
  }


  public TimesheetsGetPreferencesByCidResponse qrCodeClockInPrefValue(String qrCodeClockInPrefValue) {
    
    
    
    
    this.qrCodeClockInPrefValue = qrCodeClockInPrefValue;
    return this;
  }

   /**
   * Get qrCodeClockInPrefValue
   * @return qrCodeClockInPrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getQrCodeClockInPrefValue() {
    return qrCodeClockInPrefValue;
  }


  public void setQrCodeClockInPrefValue(String qrCodeClockInPrefValue) {
    
    
    
    this.qrCodeClockInPrefValue = qrCodeClockInPrefValue;
  }


  public TimesheetsGetPreferencesByCidResponse tcApprovalReasonPrefValue(String tcApprovalReasonPrefValue) {
    
    
    
    
    this.tcApprovalReasonPrefValue = tcApprovalReasonPrefValue;
    return this;
  }

   /**
   * Get tcApprovalReasonPrefValue
   * @return tcApprovalReasonPrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getTcApprovalReasonPrefValue() {
    return tcApprovalReasonPrefValue;
  }


  public void setTcApprovalReasonPrefValue(String tcApprovalReasonPrefValue) {
    
    
    
    this.tcApprovalReasonPrefValue = tcApprovalReasonPrefValue;
  }


  public TimesheetsGetPreferencesByCidResponse clockInOutsideGeofencePreferenceValue(String clockInOutsideGeofencePreferenceValue) {
    
    
    
    
    this.clockInOutsideGeofencePreferenceValue = clockInOutsideGeofencePreferenceValue;
    return this;
  }

   /**
   * Get clockInOutsideGeofencePreferenceValue
   * @return clockInOutsideGeofencePreferenceValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getClockInOutsideGeofencePreferenceValue() {
    return clockInOutsideGeofencePreferenceValue;
  }


  public void setClockInOutsideGeofencePreferenceValue(String clockInOutsideGeofencePreferenceValue) {
    
    
    
    this.clockInOutsideGeofencePreferenceValue = clockInOutsideGeofencePreferenceValue;
  }


  public TimesheetsGetPreferencesByCidResponse startDate(String startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "date", value = "")

  public String getStartDate() {
    return startDate;
  }


  public void setStartDate(String startDate) {
    
    
    
    this.startDate = startDate;
  }


  public TimesheetsGetPreferencesByCidResponse tcRejectionReasonPrefValue(String tcRejectionReasonPrefValue) {
    
    
    
    
    this.tcRejectionReasonPrefValue = tcRejectionReasonPrefValue;
    return this;
  }

   /**
   * Get tcRejectionReasonPrefValue
   * @return tcRejectionReasonPrefValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getTcRejectionReasonPrefValue() {
    return tcRejectionReasonPrefValue;
  }


  public void setTcRejectionReasonPrefValue(String tcRejectionReasonPrefValue) {
    
    
    
    this.tcRejectionReasonPrefValue = tcRejectionReasonPrefValue;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TimesheetsGetPreferencesByCidResponse instance itself
   */
  public TimesheetsGetPreferencesByCidResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimesheetsGetPreferencesByCidResponse timesheetsGetPreferencesByCidResponse = (TimesheetsGetPreferencesByCidResponse) o;
    return Objects.equals(this.timesheetStartDay, timesheetsGetPreferencesByCidResponse.timesheetStartDay) &&
        Objects.equals(this.billablePrefValue, timesheetsGetPreferencesByCidResponse.billablePrefValue) &&
        Objects.equals(this.futureTcPrefValue, timesheetsGetPreferencesByCidResponse.futureTcPrefValue) &&
        Objects.equals(this.endDate, timesheetsGetPreferencesByCidResponse.endDate) &&
        Objects.equals(this.projectAreaPrefValue, timesheetsGetPreferencesByCidResponse.projectAreaPrefValue) &&
        Objects.equals(this.complianceMsg, timesheetsGetPreferencesByCidResponse.complianceMsg) &&
        Objects.equals(this.activityTypePrefValue, timesheetsGetPreferencesByCidResponse.activityTypePrefValue) &&
        Objects.equals(this.mobileAppClockInPrefValue, timesheetsGetPreferencesByCidResponse.mobileAppClockInPrefValue) &&
        Objects.equals(this.allocatedProjectPrefValue, timesheetsGetPreferencesByCidResponse.allocatedProjectPrefValue) &&
        Objects.equals(this.addEditTcPrefValue, timesheetsGetPreferencesByCidResponse.addEditTcPrefValue) &&
        Objects.equals(this.backdatedTcReasonPrefValue, timesheetsGetPreferencesByCidResponse.backdatedTcReasonPrefValue) &&
        Objects.equals(this.timesheetPeriod, timesheetsGetPreferencesByCidResponse.timesheetPeriod) &&
        Objects.equals(this.categoryPrefValue, timesheetsGetPreferencesByCidResponse.categoryPrefValue) &&
        Objects.equals(this.startTimeEndTimeRequired, timesheetsGetPreferencesByCidResponse.startTimeEndTimeRequired) &&
        Objects.equals(this.workingHrsPerDay, timesheetsGetPreferencesByCidResponse.workingHrsPerDay) &&
        Objects.equals(this.kioskAppClockInPrefValue, timesheetsGetPreferencesByCidResponse.kioskAppClockInPrefValue) &&
        Objects.equals(this.qrCodeClockInPrefValue, timesheetsGetPreferencesByCidResponse.qrCodeClockInPrefValue) &&
        Objects.equals(this.tcApprovalReasonPrefValue, timesheetsGetPreferencesByCidResponse.tcApprovalReasonPrefValue) &&
        Objects.equals(this.clockInOutsideGeofencePreferenceValue, timesheetsGetPreferencesByCidResponse.clockInOutsideGeofencePreferenceValue) &&
        Objects.equals(this.startDate, timesheetsGetPreferencesByCidResponse.startDate) &&
        Objects.equals(this.tcRejectionReasonPrefValue, timesheetsGetPreferencesByCidResponse.tcRejectionReasonPrefValue)&&
        Objects.equals(this.additionalProperties, timesheetsGetPreferencesByCidResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timesheetStartDay, billablePrefValue, futureTcPrefValue, endDate, projectAreaPrefValue, complianceMsg, activityTypePrefValue, mobileAppClockInPrefValue, allocatedProjectPrefValue, addEditTcPrefValue, backdatedTcReasonPrefValue, timesheetPeriod, categoryPrefValue, startTimeEndTimeRequired, workingHrsPerDay, kioskAppClockInPrefValue, qrCodeClockInPrefValue, tcApprovalReasonPrefValue, clockInOutsideGeofencePreferenceValue, startDate, tcRejectionReasonPrefValue, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimesheetsGetPreferencesByCidResponse {\n");
    sb.append("    timesheetStartDay: ").append(toIndentedString(timesheetStartDay)).append("\n");
    sb.append("    billablePrefValue: ").append(toIndentedString(billablePrefValue)).append("\n");
    sb.append("    futureTcPrefValue: ").append(toIndentedString(futureTcPrefValue)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    projectAreaPrefValue: ").append(toIndentedString(projectAreaPrefValue)).append("\n");
    sb.append("    complianceMsg: ").append(toIndentedString(complianceMsg)).append("\n");
    sb.append("    activityTypePrefValue: ").append(toIndentedString(activityTypePrefValue)).append("\n");
    sb.append("    mobileAppClockInPrefValue: ").append(toIndentedString(mobileAppClockInPrefValue)).append("\n");
    sb.append("    allocatedProjectPrefValue: ").append(toIndentedString(allocatedProjectPrefValue)).append("\n");
    sb.append("    addEditTcPrefValue: ").append(toIndentedString(addEditTcPrefValue)).append("\n");
    sb.append("    backdatedTcReasonPrefValue: ").append(toIndentedString(backdatedTcReasonPrefValue)).append("\n");
    sb.append("    timesheetPeriod: ").append(toIndentedString(timesheetPeriod)).append("\n");
    sb.append("    categoryPrefValue: ").append(toIndentedString(categoryPrefValue)).append("\n");
    sb.append("    startTimeEndTimeRequired: ").append(toIndentedString(startTimeEndTimeRequired)).append("\n");
    sb.append("    workingHrsPerDay: ").append(toIndentedString(workingHrsPerDay)).append("\n");
    sb.append("    kioskAppClockInPrefValue: ").append(toIndentedString(kioskAppClockInPrefValue)).append("\n");
    sb.append("    qrCodeClockInPrefValue: ").append(toIndentedString(qrCodeClockInPrefValue)).append("\n");
    sb.append("    tcApprovalReasonPrefValue: ").append(toIndentedString(tcApprovalReasonPrefValue)).append("\n");
    sb.append("    clockInOutsideGeofencePreferenceValue: ").append(toIndentedString(clockInOutsideGeofencePreferenceValue)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    tcRejectionReasonPrefValue: ").append(toIndentedString(tcRejectionReasonPrefValue)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("timesheetStartDay");
    openapiFields.add("billablePrefValue");
    openapiFields.add("futureTcPrefValue");
    openapiFields.add("endDate");
    openapiFields.add("projectAreaPrefValue");
    openapiFields.add("complianceMsg");
    openapiFields.add("activityTypePrefValue");
    openapiFields.add("mobileAppClockInPrefValue");
    openapiFields.add("allocatedProjectPrefValue");
    openapiFields.add("addEditTcPrefValue");
    openapiFields.add("backdatedTcReasonPrefValue");
    openapiFields.add("timesheetPeriod");
    openapiFields.add("categoryPrefValue");
    openapiFields.add("startTimeEndTimeRequired");
    openapiFields.add("workingHrsPerDay");
    openapiFields.add("kioskAppClockInPrefValue");
    openapiFields.add("qrCodeClockInPrefValue");
    openapiFields.add("tcApprovalReasonPrefValue");
    openapiFields.add("clockInOutsideGeofencePreferenceValue");
    openapiFields.add("startDate");
    openapiFields.add("tcRejectionReasonPrefValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TimesheetsGetPreferencesByCidResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TimesheetsGetPreferencesByCidResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TimesheetsGetPreferencesByCidResponse is not found in the empty JSON string", TimesheetsGetPreferencesByCidResponse.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("timesheetStartDay") != null && !jsonObj.get("timesheetStartDay").isJsonNull()) && !jsonObj.get("timesheetStartDay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timesheetStartDay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timesheetStartDay").toString()));
      }
      if ((jsonObj.get("billablePrefValue") != null && !jsonObj.get("billablePrefValue").isJsonNull()) && !jsonObj.get("billablePrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billablePrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billablePrefValue").toString()));
      }
      if ((jsonObj.get("futureTcPrefValue") != null && !jsonObj.get("futureTcPrefValue").isJsonNull()) && !jsonObj.get("futureTcPrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `futureTcPrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("futureTcPrefValue").toString()));
      }
      if ((jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) && !jsonObj.get("endDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDate").toString()));
      }
      if ((jsonObj.get("projectAreaPrefValue") != null && !jsonObj.get("projectAreaPrefValue").isJsonNull()) && !jsonObj.get("projectAreaPrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectAreaPrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectAreaPrefValue").toString()));
      }
      if ((jsonObj.get("complianceMsg") != null && !jsonObj.get("complianceMsg").isJsonNull()) && !jsonObj.get("complianceMsg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `complianceMsg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("complianceMsg").toString()));
      }
      if ((jsonObj.get("activityTypePrefValue") != null && !jsonObj.get("activityTypePrefValue").isJsonNull()) && !jsonObj.get("activityTypePrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activityTypePrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activityTypePrefValue").toString()));
      }
      if ((jsonObj.get("mobileAppClockInPrefValue") != null && !jsonObj.get("mobileAppClockInPrefValue").isJsonNull()) && !jsonObj.get("mobileAppClockInPrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobileAppClockInPrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobileAppClockInPrefValue").toString()));
      }
      if ((jsonObj.get("allocatedProjectPrefValue") != null && !jsonObj.get("allocatedProjectPrefValue").isJsonNull()) && !jsonObj.get("allocatedProjectPrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `allocatedProjectPrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("allocatedProjectPrefValue").toString()));
      }
      if ((jsonObj.get("addEditTcPrefValue") != null && !jsonObj.get("addEditTcPrefValue").isJsonNull()) && !jsonObj.get("addEditTcPrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addEditTcPrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addEditTcPrefValue").toString()));
      }
      if ((jsonObj.get("backdatedTcReasonPrefValue") != null && !jsonObj.get("backdatedTcReasonPrefValue").isJsonNull()) && !jsonObj.get("backdatedTcReasonPrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `backdatedTcReasonPrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("backdatedTcReasonPrefValue").toString()));
      }
      if ((jsonObj.get("timesheetPeriod") != null && !jsonObj.get("timesheetPeriod").isJsonNull()) && !jsonObj.get("timesheetPeriod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timesheetPeriod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timesheetPeriod").toString()));
      }
      if ((jsonObj.get("categoryPrefValue") != null && !jsonObj.get("categoryPrefValue").isJsonNull()) && !jsonObj.get("categoryPrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryPrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categoryPrefValue").toString()));
      }
      if ((jsonObj.get("startTimeEndTimeRequired") != null && !jsonObj.get("startTimeEndTimeRequired").isJsonNull()) && !jsonObj.get("startTimeEndTimeRequired").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTimeEndTimeRequired` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTimeEndTimeRequired").toString()));
      }
      if ((jsonObj.get("workingHrsPerDay") != null && !jsonObj.get("workingHrsPerDay").isJsonNull()) && !jsonObj.get("workingHrsPerDay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workingHrsPerDay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workingHrsPerDay").toString()));
      }
      if ((jsonObj.get("kioskAppClockInPrefValue") != null && !jsonObj.get("kioskAppClockInPrefValue").isJsonNull()) && !jsonObj.get("kioskAppClockInPrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kioskAppClockInPrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kioskAppClockInPrefValue").toString()));
      }
      if ((jsonObj.get("qrCodeClockInPrefValue") != null && !jsonObj.get("qrCodeClockInPrefValue").isJsonNull()) && !jsonObj.get("qrCodeClockInPrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qrCodeClockInPrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qrCodeClockInPrefValue").toString()));
      }
      if ((jsonObj.get("tcApprovalReasonPrefValue") != null && !jsonObj.get("tcApprovalReasonPrefValue").isJsonNull()) && !jsonObj.get("tcApprovalReasonPrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tcApprovalReasonPrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tcApprovalReasonPrefValue").toString()));
      }
      if ((jsonObj.get("clockInOutsideGeofencePreferenceValue") != null && !jsonObj.get("clockInOutsideGeofencePreferenceValue").isJsonNull()) && !jsonObj.get("clockInOutsideGeofencePreferenceValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clockInOutsideGeofencePreferenceValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clockInOutsideGeofencePreferenceValue").toString()));
      }
      if ((jsonObj.get("startDate") != null && !jsonObj.get("startDate").isJsonNull()) && !jsonObj.get("startDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startDate").toString()));
      }
      if ((jsonObj.get("tcRejectionReasonPrefValue") != null && !jsonObj.get("tcRejectionReasonPrefValue").isJsonNull()) && !jsonObj.get("tcRejectionReasonPrefValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tcRejectionReasonPrefValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tcRejectionReasonPrefValue").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TimesheetsGetPreferencesByCidResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TimesheetsGetPreferencesByCidResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TimesheetsGetPreferencesByCidResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TimesheetsGetPreferencesByCidResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<TimesheetsGetPreferencesByCidResponse>() {
           @Override
           public void write(JsonWriter out, TimesheetsGetPreferencesByCidResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TimesheetsGetPreferencesByCidResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TimesheetsGetPreferencesByCidResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TimesheetsGetPreferencesByCidResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TimesheetsGetPreferencesByCidResponse
  * @throws IOException if the JSON string is invalid with respect to TimesheetsGetPreferencesByCidResponse
  */
  public static TimesheetsGetPreferencesByCidResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TimesheetsGetPreferencesByCidResponse.class);
  }

 /**
  * Convert an instance of TimesheetsGetPreferencesByCidResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

