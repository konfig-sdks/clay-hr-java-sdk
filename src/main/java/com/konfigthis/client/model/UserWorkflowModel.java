/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CandidateModel;
import com.konfigthis.client.model.PositionModel;
import com.konfigthis.client.model.UserModel;
import com.konfigthis.client.model.UserViewModel;
import com.konfigthis.client.model.WorkflowModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * UserWorkflowModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UserWorkflowModel {
  public static final String SERIALIZED_NAME_ASSIGN_CANDIDATE_MODEL = "assignCandidateModel";
  @SerializedName(SERIALIZED_NAME_ASSIGN_CANDIDATE_MODEL)
  private CandidateModel assignCandidateModel;

  public static final String SERIALIZED_NAME_ASSIGN_POSITION_MODEL = "assignPositionModel";
  @SerializedName(SERIALIZED_NAME_ASSIGN_POSITION_MODEL)
  private PositionModel assignPositionModel;

  public static final String SERIALIZED_NAME_ASSIGN_USER_MODEL = "assignUserModel";
  @SerializedName(SERIALIZED_NAME_ASSIGN_USER_MODEL)
  private UserModel assignUserModel;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_COORDINATOR_USER_VIEW_MODEL = "coordinatorUserViewModel";
  @SerializedName(SERIALIZED_NAME_COORDINATOR_USER_VIEW_MODEL)
  private UserViewModel coordinatorUserViewModel;

  public static final String SERIALIZED_NAME_CREATE_T_S = "createTS";
  @SerializedName(SERIALIZED_NAME_CREATE_T_S)
  private Timestamp createTS;

  public static final String SERIALIZED_NAME_CREATE_USER_MODEL = "createUserModel";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_MODEL)
  private UserModel createUserModel;

  public static final String SERIALIZED_NAME_LAUNCH_STATUS = "launchStatus";
  @SerializedName(SERIALIZED_NAME_LAUNCH_STATUS)
  private String launchStatus;

  public static final String SERIALIZED_NAME_LAUNCHTS = "launchts";
  @SerializedName(SERIALIZED_NAME_LAUNCHTS)
  private Timestamp launchts;

  public static final String SERIALIZED_NAME_OPTED_OUT_FOR_EMAIL = "optedOutForEmail";
  @SerializedName(SERIALIZED_NAME_OPTED_OUT_FOR_EMAIL)
  private Boolean optedOutForEmail;

  public static final String SERIALIZED_NAME_STATUS_CODE = "statusCode";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  private String statusCode;

  public static final String SERIALIZED_NAME_USER_WORKFLOW_ID = "userWorkflowId";
  @SerializedName(SERIALIZED_NAME_USER_WORKFLOW_ID)
  private Integer userWorkflowId;

  public static final String SERIALIZED_NAME_WORKFLOW_MODEL = "workflowModel";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_MODEL)
  private WorkflowModel workflowModel;

  public static final String SERIALIZED_NAME_WORKFLOW_PROGRESS = "workflowProgress";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_PROGRESS)
  private Float workflowProgress;

  public static final String SERIALIZED_NAME_WORKFLOW_STATUS = "workflowStatus";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_STATUS)
  private String workflowStatus;

  public UserWorkflowModel() {
  }

  public UserWorkflowModel assignCandidateModel(CandidateModel assignCandidateModel) {
    
    
    
    
    this.assignCandidateModel = assignCandidateModel;
    return this;
  }

   /**
   * Get assignCandidateModel
   * @return assignCandidateModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CandidateModel getAssignCandidateModel() {
    return assignCandidateModel;
  }


  public void setAssignCandidateModel(CandidateModel assignCandidateModel) {
    
    
    
    this.assignCandidateModel = assignCandidateModel;
  }


  public UserWorkflowModel assignPositionModel(PositionModel assignPositionModel) {
    
    
    
    
    this.assignPositionModel = assignPositionModel;
    return this;
  }

   /**
   * Get assignPositionModel
   * @return assignPositionModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PositionModel getAssignPositionModel() {
    return assignPositionModel;
  }


  public void setAssignPositionModel(PositionModel assignPositionModel) {
    
    
    
    this.assignPositionModel = assignPositionModel;
  }


  public UserWorkflowModel assignUserModel(UserModel assignUserModel) {
    
    
    
    
    this.assignUserModel = assignUserModel;
    return this;
  }

   /**
   * Get assignUserModel
   * @return assignUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getAssignUserModel() {
    return assignUserModel;
  }


  public void setAssignUserModel(UserModel assignUserModel) {
    
    
    
    this.assignUserModel = assignUserModel;
  }


  public UserWorkflowModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public UserWorkflowModel coordinatorUserViewModel(UserViewModel coordinatorUserViewModel) {
    
    
    
    
    this.coordinatorUserViewModel = coordinatorUserViewModel;
    return this;
  }

   /**
   * Get coordinatorUserViewModel
   * @return coordinatorUserViewModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserViewModel getCoordinatorUserViewModel() {
    return coordinatorUserViewModel;
  }


  public void setCoordinatorUserViewModel(UserViewModel coordinatorUserViewModel) {
    
    
    
    this.coordinatorUserViewModel = coordinatorUserViewModel;
  }


  public UserWorkflowModel createTS(Timestamp createTS) {
    
    
    
    
    this.createTS = createTS;
    return this;
  }

   /**
   * Get createTS
   * @return createTS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreateTS() {
    return createTS;
  }


  public void setCreateTS(Timestamp createTS) {
    
    
    
    this.createTS = createTS;
  }


  public UserWorkflowModel createUserModel(UserModel createUserModel) {
    
    
    
    
    this.createUserModel = createUserModel;
    return this;
  }

   /**
   * Get createUserModel
   * @return createUserModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getCreateUserModel() {
    return createUserModel;
  }


  public void setCreateUserModel(UserModel createUserModel) {
    
    
    
    this.createUserModel = createUserModel;
  }


  public UserWorkflowModel launchStatus(String launchStatus) {
    
    
    
    
    this.launchStatus = launchStatus;
    return this;
  }

   /**
   * Get launchStatus
   * @return launchStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLaunchStatus() {
    return launchStatus;
  }


  public void setLaunchStatus(String launchStatus) {
    
    
    
    this.launchStatus = launchStatus;
  }


  public UserWorkflowModel launchts(Timestamp launchts) {
    
    
    
    
    this.launchts = launchts;
    return this;
  }

   /**
   * Get launchts
   * @return launchts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getLaunchts() {
    return launchts;
  }


  public void setLaunchts(Timestamp launchts) {
    
    
    
    this.launchts = launchts;
  }


  public UserWorkflowModel optedOutForEmail(Boolean optedOutForEmail) {
    
    
    
    
    this.optedOutForEmail = optedOutForEmail;
    return this;
  }

   /**
   * Get optedOutForEmail
   * @return optedOutForEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getOptedOutForEmail() {
    return optedOutForEmail;
  }


  public void setOptedOutForEmail(Boolean optedOutForEmail) {
    
    
    
    this.optedOutForEmail = optedOutForEmail;
  }


  public UserWorkflowModel statusCode(String statusCode) {
    
    
    
    
    this.statusCode = statusCode;
    return this;
  }

   /**
   * Get statusCode
   * @return statusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatusCode() {
    return statusCode;
  }


  public void setStatusCode(String statusCode) {
    
    
    
    this.statusCode = statusCode;
  }


  public UserWorkflowModel userWorkflowId(Integer userWorkflowId) {
    
    
    
    
    this.userWorkflowId = userWorkflowId;
    return this;
  }

   /**
   * Get userWorkflowId
   * @return userWorkflowId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserWorkflowId() {
    return userWorkflowId;
  }


  public void setUserWorkflowId(Integer userWorkflowId) {
    
    
    
    this.userWorkflowId = userWorkflowId;
  }


  public UserWorkflowModel workflowModel(WorkflowModel workflowModel) {
    
    
    
    
    this.workflowModel = workflowModel;
    return this;
  }

   /**
   * Get workflowModel
   * @return workflowModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkflowModel getWorkflowModel() {
    return workflowModel;
  }


  public void setWorkflowModel(WorkflowModel workflowModel) {
    
    
    
    this.workflowModel = workflowModel;
  }


  public UserWorkflowModel workflowProgress(Float workflowProgress) {
    
    
    
    
    this.workflowProgress = workflowProgress;
    return this;
  }

   /**
   * Get workflowProgress
   * @return workflowProgress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getWorkflowProgress() {
    return workflowProgress;
  }


  public void setWorkflowProgress(Float workflowProgress) {
    
    
    
    this.workflowProgress = workflowProgress;
  }


  public UserWorkflowModel workflowStatus(String workflowStatus) {
    
    
    
    
    this.workflowStatus = workflowStatus;
    return this;
  }

   /**
   * Get workflowStatus
   * @return workflowStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkflowStatus() {
    return workflowStatus;
  }


  public void setWorkflowStatus(String workflowStatus) {
    
    
    
    this.workflowStatus = workflowStatus;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UserWorkflowModel instance itself
   */
  public UserWorkflowModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserWorkflowModel userWorkflowModel = (UserWorkflowModel) o;
    return Objects.equals(this.assignCandidateModel, userWorkflowModel.assignCandidateModel) &&
        Objects.equals(this.assignPositionModel, userWorkflowModel.assignPositionModel) &&
        Objects.equals(this.assignUserModel, userWorkflowModel.assignUserModel) &&
        Objects.equals(this.cid, userWorkflowModel.cid) &&
        Objects.equals(this.coordinatorUserViewModel, userWorkflowModel.coordinatorUserViewModel) &&
        Objects.equals(this.createTS, userWorkflowModel.createTS) &&
        Objects.equals(this.createUserModel, userWorkflowModel.createUserModel) &&
        Objects.equals(this.launchStatus, userWorkflowModel.launchStatus) &&
        Objects.equals(this.launchts, userWorkflowModel.launchts) &&
        Objects.equals(this.optedOutForEmail, userWorkflowModel.optedOutForEmail) &&
        Objects.equals(this.statusCode, userWorkflowModel.statusCode) &&
        Objects.equals(this.userWorkflowId, userWorkflowModel.userWorkflowId) &&
        Objects.equals(this.workflowModel, userWorkflowModel.workflowModel) &&
        Objects.equals(this.workflowProgress, userWorkflowModel.workflowProgress) &&
        Objects.equals(this.workflowStatus, userWorkflowModel.workflowStatus)&&
        Objects.equals(this.additionalProperties, userWorkflowModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignCandidateModel, assignPositionModel, assignUserModel, cid, coordinatorUserViewModel, createTS, createUserModel, launchStatus, launchts, optedOutForEmail, statusCode, userWorkflowId, workflowModel, workflowProgress, workflowStatus, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserWorkflowModel {\n");
    sb.append("    assignCandidateModel: ").append(toIndentedString(assignCandidateModel)).append("\n");
    sb.append("    assignPositionModel: ").append(toIndentedString(assignPositionModel)).append("\n");
    sb.append("    assignUserModel: ").append(toIndentedString(assignUserModel)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    coordinatorUserViewModel: ").append(toIndentedString(coordinatorUserViewModel)).append("\n");
    sb.append("    createTS: ").append(toIndentedString(createTS)).append("\n");
    sb.append("    createUserModel: ").append(toIndentedString(createUserModel)).append("\n");
    sb.append("    launchStatus: ").append(toIndentedString(launchStatus)).append("\n");
    sb.append("    launchts: ").append(toIndentedString(launchts)).append("\n");
    sb.append("    optedOutForEmail: ").append(toIndentedString(optedOutForEmail)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    userWorkflowId: ").append(toIndentedString(userWorkflowId)).append("\n");
    sb.append("    workflowModel: ").append(toIndentedString(workflowModel)).append("\n");
    sb.append("    workflowProgress: ").append(toIndentedString(workflowProgress)).append("\n");
    sb.append("    workflowStatus: ").append(toIndentedString(workflowStatus)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assignCandidateModel");
    openapiFields.add("assignPositionModel");
    openapiFields.add("assignUserModel");
    openapiFields.add("cid");
    openapiFields.add("coordinatorUserViewModel");
    openapiFields.add("createTS");
    openapiFields.add("createUserModel");
    openapiFields.add("launchStatus");
    openapiFields.add("launchts");
    openapiFields.add("optedOutForEmail");
    openapiFields.add("statusCode");
    openapiFields.add("userWorkflowId");
    openapiFields.add("workflowModel");
    openapiFields.add("workflowProgress");
    openapiFields.add("workflowStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UserWorkflowModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UserWorkflowModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserWorkflowModel is not found in the empty JSON string", UserWorkflowModel.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `assignCandidateModel`
      if (jsonObj.get("assignCandidateModel") != null && !jsonObj.get("assignCandidateModel").isJsonNull()) {
        CandidateModel.validateJsonObject(jsonObj.getAsJsonObject("assignCandidateModel"));
      }
      // validate the optional field `assignPositionModel`
      if (jsonObj.get("assignPositionModel") != null && !jsonObj.get("assignPositionModel").isJsonNull()) {
        PositionModel.validateJsonObject(jsonObj.getAsJsonObject("assignPositionModel"));
      }
      // validate the optional field `assignUserModel`
      if (jsonObj.get("assignUserModel") != null && !jsonObj.get("assignUserModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("assignUserModel"));
      }
      // validate the optional field `coordinatorUserViewModel`
      if (jsonObj.get("coordinatorUserViewModel") != null && !jsonObj.get("coordinatorUserViewModel").isJsonNull()) {
        UserViewModel.validateJsonObject(jsonObj.getAsJsonObject("coordinatorUserViewModel"));
      }
      // validate the optional field `createTS`
      if (jsonObj.get("createTS") != null && !jsonObj.get("createTS").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createTS"));
      }
      // validate the optional field `createUserModel`
      if (jsonObj.get("createUserModel") != null && !jsonObj.get("createUserModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("createUserModel"));
      }
      if ((jsonObj.get("launchStatus") != null && !jsonObj.get("launchStatus").isJsonNull()) && !jsonObj.get("launchStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `launchStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("launchStatus").toString()));
      }
      // validate the optional field `launchts`
      if (jsonObj.get("launchts") != null && !jsonObj.get("launchts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("launchts"));
      }
      if ((jsonObj.get("statusCode") != null && !jsonObj.get("statusCode").isJsonNull()) && !jsonObj.get("statusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusCode").toString()));
      }
      // validate the optional field `workflowModel`
      if (jsonObj.get("workflowModel") != null && !jsonObj.get("workflowModel").isJsonNull()) {
        WorkflowModel.validateJsonObject(jsonObj.getAsJsonObject("workflowModel"));
      }
      if ((jsonObj.get("workflowStatus") != null && !jsonObj.get("workflowStatus").isJsonNull()) && !jsonObj.get("workflowStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workflowStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workflowStatus").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserWorkflowModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserWorkflowModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserWorkflowModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserWorkflowModel.class));

       return (TypeAdapter<T>) new TypeAdapter<UserWorkflowModel>() {
           @Override
           public void write(JsonWriter out, UserWorkflowModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UserWorkflowModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UserWorkflowModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserWorkflowModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserWorkflowModel
  * @throws IOException if the JSON string is invalid with respect to UserWorkflowModel
  */
  public static UserWorkflowModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserWorkflowModel.class);
  }

 /**
  * Convert an instance of UserWorkflowModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

