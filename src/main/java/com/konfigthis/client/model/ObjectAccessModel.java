/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.DepartmentModel;
import com.konfigthis.client.model.LocationModel;
import com.konfigthis.client.model.UserGroupModel;
import com.konfigthis.client.model.UserViewModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ObjectAccessModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ObjectAccessModel {
  public static final String SERIALIZED_NAME_ACCESS_CODE = "accessCode";
  @SerializedName(SERIALIZED_NAME_ACCESS_CODE)
  private String accessCode;

  public static final String SERIALIZED_NAME_ATCHFOLDERID = "atchfolderid";
  @SerializedName(SERIALIZED_NAME_ATCHFOLDERID)
  private Integer atchfolderid;

  public static final String SERIALIZED_NAME_ATCHID = "atchid";
  @SerializedName(SERIALIZED_NAME_ATCHID)
  private Integer atchid;

  public static final String SERIALIZED_NAME_CFID = "cfid";
  @SerializedName(SERIALIZED_NAME_CFID)
  private Integer cfid;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CREATE_TIMESTAMP = "createTimestamp";
  @SerializedName(SERIALIZED_NAME_CREATE_TIMESTAMP)
  private Timestamp createTimestamp;

  public static final String SERIALIZED_NAME_CREATE_USER_ID = "createUserId";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_ID)
  private Integer createUserId;

  public static final String SERIALIZED_NAME_DEPARTMENT_ID = "departmentId";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_ID)
  private Integer departmentId;

  public static final String SERIALIZED_NAME_DEPARTMENT_MODEL = "departmentModel";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_MODEL)
  private DepartmentModel departmentModel;

  public static final String SERIALIZED_NAME_LOCATION_ID = "locationId";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private Integer locationId;

  public static final String SERIALIZED_NAME_LOCATION_MODEL = "locationModel";
  @SerializedName(SERIALIZED_NAME_LOCATION_MODEL)
  private LocationModel locationModel;

  public static final String SERIALIZED_NAME_OBJECT_ACCESS_ID = "objectAccessId";
  @SerializedName(SERIALIZED_NAME_OBJECT_ACCESS_ID)
  private Integer objectAccessId;

  public static final String SERIALIZED_NAME_OBTYPE = "obtype";
  @SerializedName(SERIALIZED_NAME_OBTYPE)
  private String obtype;

  public static final String SERIALIZED_NAME_USER_GROUP_ID = "userGroupId";
  @SerializedName(SERIALIZED_NAME_USER_GROUP_ID)
  private Integer userGroupId;

  public static final String SERIALIZED_NAME_USER_GROUP_MODEL = "userGroupModel";
  @SerializedName(SERIALIZED_NAME_USER_GROUP_MODEL)
  private UserGroupModel userGroupModel;

  public static final String SERIALIZED_NAME_USER_VIEW_MODEL = "userViewModel";
  @SerializedName(SERIALIZED_NAME_USER_VIEW_MODEL)
  private UserViewModel userViewModel;

  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private Integer userid;

  public ObjectAccessModel() {
  }

  public ObjectAccessModel accessCode(String accessCode) {
    
    
    
    
    this.accessCode = accessCode;
    return this;
  }

   /**
   * Get accessCode
   * @return accessCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccessCode() {
    return accessCode;
  }


  public void setAccessCode(String accessCode) {
    
    
    
    this.accessCode = accessCode;
  }


  public ObjectAccessModel atchfolderid(Integer atchfolderid) {
    
    
    
    
    this.atchfolderid = atchfolderid;
    return this;
  }

   /**
   * Get atchfolderid
   * @return atchfolderid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAtchfolderid() {
    return atchfolderid;
  }


  public void setAtchfolderid(Integer atchfolderid) {
    
    
    
    this.atchfolderid = atchfolderid;
  }


  public ObjectAccessModel atchid(Integer atchid) {
    
    
    
    
    this.atchid = atchid;
    return this;
  }

   /**
   * Get atchid
   * @return atchid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAtchid() {
    return atchid;
  }


  public void setAtchid(Integer atchid) {
    
    
    
    this.atchid = atchid;
  }


  public ObjectAccessModel cfid(Integer cfid) {
    
    
    
    
    this.cfid = cfid;
    return this;
  }

   /**
   * Get cfid
   * @return cfid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCfid() {
    return cfid;
  }


  public void setCfid(Integer cfid) {
    
    
    
    this.cfid = cfid;
  }


  public ObjectAccessModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public ObjectAccessModel createTimestamp(Timestamp createTimestamp) {
    
    
    
    
    this.createTimestamp = createTimestamp;
    return this;
  }

   /**
   * Get createTimestamp
   * @return createTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreateTimestamp() {
    return createTimestamp;
  }


  public void setCreateTimestamp(Timestamp createTimestamp) {
    
    
    
    this.createTimestamp = createTimestamp;
  }


  public ObjectAccessModel createUserId(Integer createUserId) {
    
    
    
    
    this.createUserId = createUserId;
    return this;
  }

   /**
   * Get createUserId
   * @return createUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateUserId() {
    return createUserId;
  }


  public void setCreateUserId(Integer createUserId) {
    
    
    
    this.createUserId = createUserId;
  }


  public ObjectAccessModel departmentId(Integer departmentId) {
    
    
    
    
    this.departmentId = departmentId;
    return this;
  }

   /**
   * Get departmentId
   * @return departmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDepartmentId() {
    return departmentId;
  }


  public void setDepartmentId(Integer departmentId) {
    
    
    
    this.departmentId = departmentId;
  }


  public ObjectAccessModel departmentModel(DepartmentModel departmentModel) {
    
    
    
    
    this.departmentModel = departmentModel;
    return this;
  }

   /**
   * Get departmentModel
   * @return departmentModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DepartmentModel getDepartmentModel() {
    return departmentModel;
  }


  public void setDepartmentModel(DepartmentModel departmentModel) {
    
    
    
    this.departmentModel = departmentModel;
  }


  public ObjectAccessModel locationId(Integer locationId) {
    
    
    
    
    this.locationId = locationId;
    return this;
  }

   /**
   * Get locationId
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLocationId() {
    return locationId;
  }


  public void setLocationId(Integer locationId) {
    
    
    
    this.locationId = locationId;
  }


  public ObjectAccessModel locationModel(LocationModel locationModel) {
    
    
    
    
    this.locationModel = locationModel;
    return this;
  }

   /**
   * Get locationModel
   * @return locationModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocationModel getLocationModel() {
    return locationModel;
  }


  public void setLocationModel(LocationModel locationModel) {
    
    
    
    this.locationModel = locationModel;
  }


  public ObjectAccessModel objectAccessId(Integer objectAccessId) {
    
    
    
    
    this.objectAccessId = objectAccessId;
    return this;
  }

   /**
   * Get objectAccessId
   * @return objectAccessId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getObjectAccessId() {
    return objectAccessId;
  }


  public void setObjectAccessId(Integer objectAccessId) {
    
    
    
    this.objectAccessId = objectAccessId;
  }


  public ObjectAccessModel obtype(String obtype) {
    
    
    
    
    this.obtype = obtype;
    return this;
  }

   /**
   * Get obtype
   * @return obtype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getObtype() {
    return obtype;
  }


  public void setObtype(String obtype) {
    
    
    
    this.obtype = obtype;
  }


  public ObjectAccessModel userGroupId(Integer userGroupId) {
    
    
    
    
    this.userGroupId = userGroupId;
    return this;
  }

   /**
   * Get userGroupId
   * @return userGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserGroupId() {
    return userGroupId;
  }


  public void setUserGroupId(Integer userGroupId) {
    
    
    
    this.userGroupId = userGroupId;
  }


  public ObjectAccessModel userGroupModel(UserGroupModel userGroupModel) {
    
    
    
    
    this.userGroupModel = userGroupModel;
    return this;
  }

   /**
   * Get userGroupModel
   * @return userGroupModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserGroupModel getUserGroupModel() {
    return userGroupModel;
  }


  public void setUserGroupModel(UserGroupModel userGroupModel) {
    
    
    
    this.userGroupModel = userGroupModel;
  }


  public ObjectAccessModel userViewModel(UserViewModel userViewModel) {
    
    
    
    
    this.userViewModel = userViewModel;
    return this;
  }

   /**
   * Get userViewModel
   * @return userViewModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserViewModel getUserViewModel() {
    return userViewModel;
  }


  public void setUserViewModel(UserViewModel userViewModel) {
    
    
    
    this.userViewModel = userViewModel;
  }


  public ObjectAccessModel userid(Integer userid) {
    
    
    
    
    this.userid = userid;
    return this;
  }

   /**
   * Get userid
   * @return userid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserid() {
    return userid;
  }


  public void setUserid(Integer userid) {
    
    
    
    this.userid = userid;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ObjectAccessModel instance itself
   */
  public ObjectAccessModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectAccessModel objectAccessModel = (ObjectAccessModel) o;
    return Objects.equals(this.accessCode, objectAccessModel.accessCode) &&
        Objects.equals(this.atchfolderid, objectAccessModel.atchfolderid) &&
        Objects.equals(this.atchid, objectAccessModel.atchid) &&
        Objects.equals(this.cfid, objectAccessModel.cfid) &&
        Objects.equals(this.cid, objectAccessModel.cid) &&
        Objects.equals(this.createTimestamp, objectAccessModel.createTimestamp) &&
        Objects.equals(this.createUserId, objectAccessModel.createUserId) &&
        Objects.equals(this.departmentId, objectAccessModel.departmentId) &&
        Objects.equals(this.departmentModel, objectAccessModel.departmentModel) &&
        Objects.equals(this.locationId, objectAccessModel.locationId) &&
        Objects.equals(this.locationModel, objectAccessModel.locationModel) &&
        Objects.equals(this.objectAccessId, objectAccessModel.objectAccessId) &&
        Objects.equals(this.obtype, objectAccessModel.obtype) &&
        Objects.equals(this.userGroupId, objectAccessModel.userGroupId) &&
        Objects.equals(this.userGroupModel, objectAccessModel.userGroupModel) &&
        Objects.equals(this.userViewModel, objectAccessModel.userViewModel) &&
        Objects.equals(this.userid, objectAccessModel.userid)&&
        Objects.equals(this.additionalProperties, objectAccessModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessCode, atchfolderid, atchid, cfid, cid, createTimestamp, createUserId, departmentId, departmentModel, locationId, locationModel, objectAccessId, obtype, userGroupId, userGroupModel, userViewModel, userid, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectAccessModel {\n");
    sb.append("    accessCode: ").append(toIndentedString(accessCode)).append("\n");
    sb.append("    atchfolderid: ").append(toIndentedString(atchfolderid)).append("\n");
    sb.append("    atchid: ").append(toIndentedString(atchid)).append("\n");
    sb.append("    cfid: ").append(toIndentedString(cfid)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    createTimestamp: ").append(toIndentedString(createTimestamp)).append("\n");
    sb.append("    createUserId: ").append(toIndentedString(createUserId)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    departmentModel: ").append(toIndentedString(departmentModel)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    locationModel: ").append(toIndentedString(locationModel)).append("\n");
    sb.append("    objectAccessId: ").append(toIndentedString(objectAccessId)).append("\n");
    sb.append("    obtype: ").append(toIndentedString(obtype)).append("\n");
    sb.append("    userGroupId: ").append(toIndentedString(userGroupId)).append("\n");
    sb.append("    userGroupModel: ").append(toIndentedString(userGroupModel)).append("\n");
    sb.append("    userViewModel: ").append(toIndentedString(userViewModel)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessCode");
    openapiFields.add("atchfolderid");
    openapiFields.add("atchid");
    openapiFields.add("cfid");
    openapiFields.add("cid");
    openapiFields.add("createTimestamp");
    openapiFields.add("createUserId");
    openapiFields.add("departmentId");
    openapiFields.add("departmentModel");
    openapiFields.add("locationId");
    openapiFields.add("locationModel");
    openapiFields.add("objectAccessId");
    openapiFields.add("obtype");
    openapiFields.add("userGroupId");
    openapiFields.add("userGroupModel");
    openapiFields.add("userViewModel");
    openapiFields.add("userid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ObjectAccessModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ObjectAccessModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ObjectAccessModel is not found in the empty JSON string", ObjectAccessModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("accessCode") != null && !jsonObj.get("accessCode").isJsonNull()) && !jsonObj.get("accessCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accessCode").toString()));
      }
      // validate the optional field `createTimestamp`
      if (jsonObj.get("createTimestamp") != null && !jsonObj.get("createTimestamp").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createTimestamp"));
      }
      // validate the optional field `departmentModel`
      if (jsonObj.get("departmentModel") != null && !jsonObj.get("departmentModel").isJsonNull()) {
        DepartmentModel.validateJsonObject(jsonObj.getAsJsonObject("departmentModel"));
      }
      // validate the optional field `locationModel`
      if (jsonObj.get("locationModel") != null && !jsonObj.get("locationModel").isJsonNull()) {
        LocationModel.validateJsonObject(jsonObj.getAsJsonObject("locationModel"));
      }
      if ((jsonObj.get("obtype") != null && !jsonObj.get("obtype").isJsonNull()) && !jsonObj.get("obtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `obtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("obtype").toString()));
      }
      // validate the optional field `userGroupModel`
      if (jsonObj.get("userGroupModel") != null && !jsonObj.get("userGroupModel").isJsonNull()) {
        UserGroupModel.validateJsonObject(jsonObj.getAsJsonObject("userGroupModel"));
      }
      // validate the optional field `userViewModel`
      if (jsonObj.get("userViewModel") != null && !jsonObj.get("userViewModel").isJsonNull()) {
        UserViewModel.validateJsonObject(jsonObj.getAsJsonObject("userViewModel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ObjectAccessModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ObjectAccessModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ObjectAccessModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ObjectAccessModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ObjectAccessModel>() {
           @Override
           public void write(JsonWriter out, ObjectAccessModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ObjectAccessModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ObjectAccessModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ObjectAccessModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ObjectAccessModel
  * @throws IOException if the JSON string is invalid with respect to ObjectAccessModel
  */
  public static ObjectAccessModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ObjectAccessModel.class);
  }

 /**
  * Convert an instance of ObjectAccessModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

