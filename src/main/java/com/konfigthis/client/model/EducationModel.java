/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.sql.Timestamp;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EducationModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EducationModel {
  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private Integer countryId;

  public static final String SERIALIZED_NAME_COURSE = "course";
  @SerializedName(SERIALIZED_NAME_COURSE)
  private String course;

  public static final String SERIALIZED_NAME_CREATETS = "createts";
  @SerializedName(SERIALIZED_NAME_CREATETS)
  private Timestamp createts;

  public static final String SERIALIZED_NAME_DEGREE = "degree";
  @SerializedName(SERIALIZED_NAME_DEGREE)
  private String degree;

  public static final String SERIALIZED_NAME_DEGREE_ID = "degreeId";
  @SerializedName(SERIALIZED_NAME_DEGREE_ID)
  private Integer degreeId;

  public static final String SERIALIZED_NAME_DEGREE_TYPE = "degreeType";
  @SerializedName(SERIALIZED_NAME_DEGREE_TYPE)
  private String degreeType;

  public static final String SERIALIZED_NAME_EDUCATION_ID = "educationId";
  @SerializedName(SERIALIZED_NAME_EDUCATION_ID)
  private Integer educationId;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private LocalDate endDate;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expirationDate";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private LocalDate expirationDate;

  public static final String SERIALIZED_NAME_GPA = "gpa";
  @SerializedName(SERIALIZED_NAME_GPA)
  private String gpa;

  public static final String SERIALIZED_NAME_GRADUATION = "graduation";
  @SerializedName(SERIALIZED_NAME_GRADUATION)
  private Integer graduation;

  public static final String SERIALIZED_NAME_INSTITUTION = "institution";
  @SerializedName(SERIALIZED_NAME_INSTITUTION)
  private String institution;

  public static final String SERIALIZED_NAME_INSTITUTION_ID = "institutionId";
  @SerializedName(SERIALIZED_NAME_INSTITUTION_ID)
  private Integer institutionId;

  public static final String SERIALIZED_NAME_IS_HIGHEST = "isHighest";
  @SerializedName(SERIALIZED_NAME_IS_HIGHEST)
  private Integer isHighest;

  public static final String SERIALIZED_NAME_PROFILEID = "profileid";
  @SerializedName(SERIALIZED_NAME_PROFILEID)
  private Integer profileid;

  public static final String SERIALIZED_NAME_RECRUITID = "recruitid";
  @SerializedName(SERIALIZED_NAME_RECRUITID)
  private Integer recruitid;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private LocalDate startDate;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public EducationModel() {
  }

  public EducationModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public EducationModel city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public EducationModel countryId(Integer countryId) {
    
    
    
    
    this.countryId = countryId;
    return this;
  }

   /**
   * Get countryId
   * @return countryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCountryId() {
    return countryId;
  }


  public void setCountryId(Integer countryId) {
    
    
    
    this.countryId = countryId;
  }


  public EducationModel course(String course) {
    
    
    
    
    this.course = course;
    return this;
  }

   /**
   * Get course
   * @return course
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCourse() {
    return course;
  }


  public void setCourse(String course) {
    
    
    
    this.course = course;
  }


  public EducationModel createts(Timestamp createts) {
    
    
    
    
    this.createts = createts;
    return this;
  }

   /**
   * Get createts
   * @return createts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timestamp getCreatets() {
    return createts;
  }


  public void setCreatets(Timestamp createts) {
    
    
    
    this.createts = createts;
  }


  public EducationModel degree(String degree) {
    
    
    
    
    this.degree = degree;
    return this;
  }

   /**
   * Get degree
   * @return degree
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDegree() {
    return degree;
  }


  public void setDegree(String degree) {
    
    
    
    this.degree = degree;
  }


  public EducationModel degreeId(Integer degreeId) {
    
    
    
    
    this.degreeId = degreeId;
    return this;
  }

   /**
   * Get degreeId
   * @return degreeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDegreeId() {
    return degreeId;
  }


  public void setDegreeId(Integer degreeId) {
    
    
    
    this.degreeId = degreeId;
  }


  public EducationModel degreeType(String degreeType) {
    
    
    
    
    this.degreeType = degreeType;
    return this;
  }

   /**
   * Get degreeType
   * @return degreeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDegreeType() {
    return degreeType;
  }


  public void setDegreeType(String degreeType) {
    
    
    
    this.degreeType = degreeType;
  }


  public EducationModel educationId(Integer educationId) {
    
    
    
    
    this.educationId = educationId;
    return this;
  }

   /**
   * Get educationId
   * @return educationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEducationId() {
    return educationId;
  }


  public void setEducationId(Integer educationId) {
    
    
    
    this.educationId = educationId;
  }


  public EducationModel endDate(LocalDate endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getEndDate() {
    return endDate;
  }


  public void setEndDate(LocalDate endDate) {
    
    
    
    this.endDate = endDate;
  }


  public EducationModel expirationDate(LocalDate expirationDate) {
    
    
    
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(LocalDate expirationDate) {
    
    
    
    this.expirationDate = expirationDate;
  }


  public EducationModel gpa(String gpa) {
    
    
    
    
    this.gpa = gpa;
    return this;
  }

   /**
   * Get gpa
   * @return gpa
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGpa() {
    return gpa;
  }


  public void setGpa(String gpa) {
    
    
    
    this.gpa = gpa;
  }


  public EducationModel graduation(Integer graduation) {
    
    
    
    
    this.graduation = graduation;
    return this;
  }

   /**
   * Get graduation
   * @return graduation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getGraduation() {
    return graduation;
  }


  public void setGraduation(Integer graduation) {
    
    
    
    this.graduation = graduation;
  }


  public EducationModel institution(String institution) {
    
    
    
    
    this.institution = institution;
    return this;
  }

   /**
   * Get institution
   * @return institution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInstitution() {
    return institution;
  }


  public void setInstitution(String institution) {
    
    
    
    this.institution = institution;
  }


  public EducationModel institutionId(Integer institutionId) {
    
    
    
    
    this.institutionId = institutionId;
    return this;
  }

   /**
   * Get institutionId
   * @return institutionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getInstitutionId() {
    return institutionId;
  }


  public void setInstitutionId(Integer institutionId) {
    
    
    
    this.institutionId = institutionId;
  }


  public EducationModel isHighest(Integer isHighest) {
    
    
    
    
    this.isHighest = isHighest;
    return this;
  }

   /**
   * Get isHighest
   * @return isHighest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getIsHighest() {
    return isHighest;
  }


  public void setIsHighest(Integer isHighest) {
    
    
    
    this.isHighest = isHighest;
  }


  public EducationModel profileid(Integer profileid) {
    
    
    
    
    this.profileid = profileid;
    return this;
  }

   /**
   * Get profileid
   * @return profileid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProfileid() {
    return profileid;
  }


  public void setProfileid(Integer profileid) {
    
    
    
    this.profileid = profileid;
  }


  public EducationModel recruitid(Integer recruitid) {
    
    
    
    
    this.recruitid = recruitid;
    return this;
  }

   /**
   * Get recruitid
   * @return recruitid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRecruitid() {
    return recruitid;
  }


  public void setRecruitid(Integer recruitid) {
    
    
    
    this.recruitid = recruitid;
  }


  public EducationModel startDate(LocalDate startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getStartDate() {
    return startDate;
  }


  public void setStartDate(LocalDate startDate) {
    
    
    
    this.startDate = startDate;
  }


  public EducationModel state(String state) {
    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    
    
    
    this.state = state;
  }


  public EducationModel userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EducationModel instance itself
   */
  public EducationModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EducationModel educationModel = (EducationModel) o;
    return Objects.equals(this.cid, educationModel.cid) &&
        Objects.equals(this.city, educationModel.city) &&
        Objects.equals(this.countryId, educationModel.countryId) &&
        Objects.equals(this.course, educationModel.course) &&
        Objects.equals(this.createts, educationModel.createts) &&
        Objects.equals(this.degree, educationModel.degree) &&
        Objects.equals(this.degreeId, educationModel.degreeId) &&
        Objects.equals(this.degreeType, educationModel.degreeType) &&
        Objects.equals(this.educationId, educationModel.educationId) &&
        Objects.equals(this.endDate, educationModel.endDate) &&
        Objects.equals(this.expirationDate, educationModel.expirationDate) &&
        Objects.equals(this.gpa, educationModel.gpa) &&
        Objects.equals(this.graduation, educationModel.graduation) &&
        Objects.equals(this.institution, educationModel.institution) &&
        Objects.equals(this.institutionId, educationModel.institutionId) &&
        Objects.equals(this.isHighest, educationModel.isHighest) &&
        Objects.equals(this.profileid, educationModel.profileid) &&
        Objects.equals(this.recruitid, educationModel.recruitid) &&
        Objects.equals(this.startDate, educationModel.startDate) &&
        Objects.equals(this.state, educationModel.state) &&
        Objects.equals(this.userId, educationModel.userId)&&
        Objects.equals(this.additionalProperties, educationModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cid, city, countryId, course, createts, degree, degreeId, degreeType, educationId, endDate, expirationDate, gpa, graduation, institution, institutionId, isHighest, profileid, recruitid, startDate, state, userId, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EducationModel {\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    course: ").append(toIndentedString(course)).append("\n");
    sb.append("    createts: ").append(toIndentedString(createts)).append("\n");
    sb.append("    degree: ").append(toIndentedString(degree)).append("\n");
    sb.append("    degreeId: ").append(toIndentedString(degreeId)).append("\n");
    sb.append("    degreeType: ").append(toIndentedString(degreeType)).append("\n");
    sb.append("    educationId: ").append(toIndentedString(educationId)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    gpa: ").append(toIndentedString(gpa)).append("\n");
    sb.append("    graduation: ").append(toIndentedString(graduation)).append("\n");
    sb.append("    institution: ").append(toIndentedString(institution)).append("\n");
    sb.append("    institutionId: ").append(toIndentedString(institutionId)).append("\n");
    sb.append("    isHighest: ").append(toIndentedString(isHighest)).append("\n");
    sb.append("    profileid: ").append(toIndentedString(profileid)).append("\n");
    sb.append("    recruitid: ").append(toIndentedString(recruitid)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cid");
    openapiFields.add("city");
    openapiFields.add("countryId");
    openapiFields.add("course");
    openapiFields.add("createts");
    openapiFields.add("degree");
    openapiFields.add("degreeId");
    openapiFields.add("degreeType");
    openapiFields.add("educationId");
    openapiFields.add("endDate");
    openapiFields.add("expirationDate");
    openapiFields.add("gpa");
    openapiFields.add("graduation");
    openapiFields.add("institution");
    openapiFields.add("institutionId");
    openapiFields.add("isHighest");
    openapiFields.add("profileid");
    openapiFields.add("recruitid");
    openapiFields.add("startDate");
    openapiFields.add("state");
    openapiFields.add("userId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EducationModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EducationModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EducationModel is not found in the empty JSON string", EducationModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("course") != null && !jsonObj.get("course").isJsonNull()) && !jsonObj.get("course").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `course` to be a primitive type in the JSON string but got `%s`", jsonObj.get("course").toString()));
      }
      // validate the optional field `createts`
      if (jsonObj.get("createts") != null && !jsonObj.get("createts").isJsonNull()) {
        Timestamp.validateJsonObject(jsonObj.getAsJsonObject("createts"));
      }
      if ((jsonObj.get("degree") != null && !jsonObj.get("degree").isJsonNull()) && !jsonObj.get("degree").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `degree` to be a primitive type in the JSON string but got `%s`", jsonObj.get("degree").toString()));
      }
      if ((jsonObj.get("degreeType") != null && !jsonObj.get("degreeType").isJsonNull()) && !jsonObj.get("degreeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `degreeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("degreeType").toString()));
      }
      if ((jsonObj.get("gpa") != null && !jsonObj.get("gpa").isJsonNull()) && !jsonObj.get("gpa").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gpa` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gpa").toString()));
      }
      if ((jsonObj.get("institution") != null && !jsonObj.get("institution").isJsonNull()) && !jsonObj.get("institution").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `institution` to be a primitive type in the JSON string but got `%s`", jsonObj.get("institution").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EducationModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EducationModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EducationModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EducationModel.class));

       return (TypeAdapter<T>) new TypeAdapter<EducationModel>() {
           @Override
           public void write(JsonWriter out, EducationModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EducationModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EducationModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EducationModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EducationModel
  * @throws IOException if the JSON string is invalid with respect to EducationModel
  */
  public static EducationModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EducationModel.class);
  }

 /**
  * Convert an instance of EducationModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

