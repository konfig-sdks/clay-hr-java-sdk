/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.PeopleAndPermissionsGetUsersResponseDataInnerUserReporterList;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PeopleAndPermissionsGetUsersResponseDataInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PeopleAndPermissionsGetUsersResponseDataInner {
  public static final String SERIALIZED_NAME_RESOURCE_ID = "resourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_ASSIGNMENTS = "assignments";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENTS)
  private String assignments;

  public static final String SERIALIZED_NAME_ALLOCATION = "allocation";
  @SerializedName(SERIALIZED_NAME_ALLOCATION)
  private String allocation;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_WORKER_TYPE = "workerType";
  @SerializedName(SERIALIZED_NAME_WORKER_TYPE)
  private String workerType;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_TIME_ZONE = "timeZone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "emailAddress";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private String emailAddress;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_IM = "im";
  @SerializedName(SERIALIZED_NAME_IM)
  private String im;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "dateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private String dateOfBirth;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_IMAGE_NAME = "imageName";
  @SerializedName(SERIALIZED_NAME_IMAGE_NAME)
  private String imageName;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD_LIST = "customFieldList";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD_LIST)
  private String customFieldList;

  public static final String SERIALIZED_NAME_DEPARTMENT = "department";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT)
  private String department;

  public static final String SERIALIZED_NAME_DEPARTMENT_LABEL = "departmentLabel";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_LABEL)
  private String departmentLabel;

  public static final String SERIALIZED_NAME_PROFILE_NAME = "profileName";
  @SerializedName(SERIALIZED_NAME_PROFILE_NAME)
  private String profileName;

  public static final String SERIALIZED_NAME_USER_REPORTER_LIST = "userReporterList";
  @SerializedName(SERIALIZED_NAME_USER_REPORTER_LIST)
  private PeopleAndPermissionsGetUsersResponseDataInnerUserReporterList userReporterList;

  public static final String SERIALIZED_NAME_EMP_ID = "empId";
  @SerializedName(SERIALIZED_NAME_EMP_ID)
  private String empId;

  public PeopleAndPermissionsGetUsersResponseDataInner() {
  }

  public PeopleAndPermissionsGetUsersResponseDataInner resourceId(String resourceId) {
    
    
    
    
    this.resourceId = resourceId;
    return this;
  }

   /**
   * Get resourceId
   * @return resourceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getResourceId() {
    return resourceId;
  }


  public void setResourceId(String resourceId) {
    
    
    
    this.resourceId = resourceId;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner position(String position) {
    
    
    
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getPosition() {
    return position;
  }


  public void setPosition(String position) {
    
    
    
    this.position = position;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner assignments(String assignments) {
    
    
    
    
    this.assignments = assignments;
    return this;
  }

   /**
   * Get assignments
   * @return assignments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getAssignments() {
    return assignments;
  }


  public void setAssignments(String assignments) {
    
    
    
    this.assignments = assignments;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner allocation(String allocation) {
    
    
    
    
    this.allocation = allocation;
    return this;
  }

   /**
   * Get allocation
   * @return allocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getAllocation() {
    return allocation;
  }


  public void setAllocation(String allocation) {
    
    
    
    this.allocation = allocation;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner startDate(String startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getStartDate() {
    return startDate;
  }


  public void setStartDate(String startDate) {
    
    
    
    this.startDate = startDate;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner endDate(String endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getEndDate() {
    return endDate;
  }


  public void setEndDate(String endDate) {
    
    
    
    this.endDate = endDate;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner workerType(String workerType) {
    
    
    
    
    this.workerType = workerType;
    return this;
  }

   /**
   * Get workerType
   * @return workerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getWorkerType() {
    return workerType;
  }


  public void setWorkerType(String workerType) {
    
    
    
    this.workerType = workerType;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner location(String location) {
    
    
    
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    
    
    
    this.location = location;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner timeZone(String timeZone) {
    
    
    
    
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getTimeZone() {
    return timeZone;
  }


  public void setTimeZone(String timeZone) {
    
    
    
    this.timeZone = timeZone;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner emailAddress(String emailAddress) {
    
    
    
    
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * Get emailAddress
   * @return emailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getEmailAddress() {
    return emailAddress;
  }


  public void setEmailAddress(String emailAddress) {
    
    
    
    this.emailAddress = emailAddress;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner phone(String phone) {
    
    
    
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    
    
    
    this.phone = phone;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner im(String im) {
    
    
    
    
    this.im = im;
    return this;
  }

   /**
   * Get im
   * @return im
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getIm() {
    return im;
  }


  public void setIm(String im) {
    
    
    
    this.im = im;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner dateOfBirth(String dateOfBirth) {
    
    
    
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "int", value = "")

  public String getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(String dateOfBirth) {
    
    
    
    this.dateOfBirth = dateOfBirth;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner imageName(String imageName) {
    
    
    
    
    this.imageName = imageName;
    return this;
  }

   /**
   * Get imageName
   * @return imageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getImageName() {
    return imageName;
  }


  public void setImageName(String imageName) {
    
    
    
    this.imageName = imageName;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner customFieldList(String customFieldList) {
    
    
    
    
    this.customFieldList = customFieldList;
    return this;
  }

   /**
   * Get customFieldList
   * @return customFieldList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getCustomFieldList() {
    return customFieldList;
  }


  public void setCustomFieldList(String customFieldList) {
    
    
    
    this.customFieldList = customFieldList;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner department(String department) {
    
    
    
    
    this.department = department;
    return this;
  }

   /**
   * Get department
   * @return department
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getDepartment() {
    return department;
  }


  public void setDepartment(String department) {
    
    
    
    this.department = department;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner departmentLabel(String departmentLabel) {
    
    
    
    
    this.departmentLabel = departmentLabel;
    return this;
  }

   /**
   * Get departmentLabel
   * @return departmentLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getDepartmentLabel() {
    return departmentLabel;
  }


  public void setDepartmentLabel(String departmentLabel) {
    
    
    
    this.departmentLabel = departmentLabel;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner profileName(String profileName) {
    
    
    
    
    this.profileName = profileName;
    return this;
  }

   /**
   * Get profileName
   * @return profileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getProfileName() {
    return profileName;
  }


  public void setProfileName(String profileName) {
    
    
    
    this.profileName = profileName;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner userReporterList(PeopleAndPermissionsGetUsersResponseDataInnerUserReporterList userReporterList) {
    
    
    
    
    this.userReporterList = userReporterList;
    return this;
  }

   /**
   * Get userReporterList
   * @return userReporterList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PeopleAndPermissionsGetUsersResponseDataInnerUserReporterList getUserReporterList() {
    return userReporterList;
  }


  public void setUserReporterList(PeopleAndPermissionsGetUsersResponseDataInnerUserReporterList userReporterList) {
    
    
    
    this.userReporterList = userReporterList;
  }


  public PeopleAndPermissionsGetUsersResponseDataInner empId(String empId) {
    
    
    
    
    this.empId = empId;
    return this;
  }

   /**
   * The unique identity of the employee. 
   * @return empId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "The unique identity of the employee. ")

  public String getEmpId() {
    return empId;
  }


  public void setEmpId(String empId) {
    
    
    
    this.empId = empId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PeopleAndPermissionsGetUsersResponseDataInner instance itself
   */
  public PeopleAndPermissionsGetUsersResponseDataInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeopleAndPermissionsGetUsersResponseDataInner peopleAndPermissionsGetUsersResponseDataInner = (PeopleAndPermissionsGetUsersResponseDataInner) o;
    return Objects.equals(this.resourceId, peopleAndPermissionsGetUsersResponseDataInner.resourceId) &&
        Objects.equals(this.name, peopleAndPermissionsGetUsersResponseDataInner.name) &&
        Objects.equals(this.position, peopleAndPermissionsGetUsersResponseDataInner.position) &&
        Objects.equals(this.assignments, peopleAndPermissionsGetUsersResponseDataInner.assignments) &&
        Objects.equals(this.allocation, peopleAndPermissionsGetUsersResponseDataInner.allocation) &&
        Objects.equals(this.startDate, peopleAndPermissionsGetUsersResponseDataInner.startDate) &&
        Objects.equals(this.endDate, peopleAndPermissionsGetUsersResponseDataInner.endDate) &&
        Objects.equals(this.workerType, peopleAndPermissionsGetUsersResponseDataInner.workerType) &&
        Objects.equals(this.location, peopleAndPermissionsGetUsersResponseDataInner.location) &&
        Objects.equals(this.timeZone, peopleAndPermissionsGetUsersResponseDataInner.timeZone) &&
        Objects.equals(this.notes, peopleAndPermissionsGetUsersResponseDataInner.notes) &&
        Objects.equals(this.emailAddress, peopleAndPermissionsGetUsersResponseDataInner.emailAddress) &&
        Objects.equals(this.phone, peopleAndPermissionsGetUsersResponseDataInner.phone) &&
        Objects.equals(this.im, peopleAndPermissionsGetUsersResponseDataInner.im) &&
        Objects.equals(this.dateOfBirth, peopleAndPermissionsGetUsersResponseDataInner.dateOfBirth) &&
        Objects.equals(this.gender, peopleAndPermissionsGetUsersResponseDataInner.gender) &&
        Objects.equals(this.imageName, peopleAndPermissionsGetUsersResponseDataInner.imageName) &&
        Objects.equals(this.customFieldList, peopleAndPermissionsGetUsersResponseDataInner.customFieldList) &&
        Objects.equals(this.department, peopleAndPermissionsGetUsersResponseDataInner.department) &&
        Objects.equals(this.departmentLabel, peopleAndPermissionsGetUsersResponseDataInner.departmentLabel) &&
        Objects.equals(this.profileName, peopleAndPermissionsGetUsersResponseDataInner.profileName) &&
        Objects.equals(this.userReporterList, peopleAndPermissionsGetUsersResponseDataInner.userReporterList) &&
        Objects.equals(this.empId, peopleAndPermissionsGetUsersResponseDataInner.empId)&&
        Objects.equals(this.additionalProperties, peopleAndPermissionsGetUsersResponseDataInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceId, name, position, assignments, allocation, startDate, endDate, workerType, location, timeZone, notes, emailAddress, phone, im, dateOfBirth, gender, imageName, customFieldList, department, departmentLabel, profileName, userReporterList, empId, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeopleAndPermissionsGetUsersResponseDataInner {\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    assignments: ").append(toIndentedString(assignments)).append("\n");
    sb.append("    allocation: ").append(toIndentedString(allocation)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    workerType: ").append(toIndentedString(workerType)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    im: ").append(toIndentedString(im)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    customFieldList: ").append(toIndentedString(customFieldList)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    departmentLabel: ").append(toIndentedString(departmentLabel)).append("\n");
    sb.append("    profileName: ").append(toIndentedString(profileName)).append("\n");
    sb.append("    userReporterList: ").append(toIndentedString(userReporterList)).append("\n");
    sb.append("    empId: ").append(toIndentedString(empId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("resourceId");
    openapiFields.add("name");
    openapiFields.add("position");
    openapiFields.add("assignments");
    openapiFields.add("allocation");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("workerType");
    openapiFields.add("location");
    openapiFields.add("timeZone");
    openapiFields.add("notes");
    openapiFields.add("emailAddress");
    openapiFields.add("phone");
    openapiFields.add("im");
    openapiFields.add("dateOfBirth");
    openapiFields.add("gender");
    openapiFields.add("imageName");
    openapiFields.add("customFieldList");
    openapiFields.add("department");
    openapiFields.add("departmentLabel");
    openapiFields.add("profileName");
    openapiFields.add("userReporterList");
    openapiFields.add("empId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PeopleAndPermissionsGetUsersResponseDataInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PeopleAndPermissionsGetUsersResponseDataInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PeopleAndPermissionsGetUsersResponseDataInner is not found in the empty JSON string", PeopleAndPermissionsGetUsersResponseDataInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("resourceId") != null && !jsonObj.get("resourceId").isJsonNull()) && !jsonObj.get("resourceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("position") != null && !jsonObj.get("position").isJsonNull()) && !jsonObj.get("position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position").toString()));
      }
      if ((jsonObj.get("assignments") != null && !jsonObj.get("assignments").isJsonNull()) && !jsonObj.get("assignments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assignments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assignments").toString()));
      }
      if ((jsonObj.get("allocation") != null && !jsonObj.get("allocation").isJsonNull()) && !jsonObj.get("allocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `allocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("allocation").toString()));
      }
      if ((jsonObj.get("startDate") != null && !jsonObj.get("startDate").isJsonNull()) && !jsonObj.get("startDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startDate").toString()));
      }
      if ((jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) && !jsonObj.get("endDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDate").toString()));
      }
      if ((jsonObj.get("workerType") != null && !jsonObj.get("workerType").isJsonNull()) && !jsonObj.get("workerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workerType").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("timeZone") != null && !jsonObj.get("timeZone").isJsonNull()) && !jsonObj.get("timeZone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeZone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeZone").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("emailAddress") != null && !jsonObj.get("emailAddress").isJsonNull()) && !jsonObj.get("emailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailAddress").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("im") != null && !jsonObj.get("im").isJsonNull()) && !jsonObj.get("im").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `im` to be a primitive type in the JSON string but got `%s`", jsonObj.get("im").toString()));
      }
      if ((jsonObj.get("dateOfBirth") != null && !jsonObj.get("dateOfBirth").isJsonNull()) && !jsonObj.get("dateOfBirth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateOfBirth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateOfBirth").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("imageName") != null && !jsonObj.get("imageName").isJsonNull()) && !jsonObj.get("imageName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageName").toString()));
      }
      if ((jsonObj.get("customFieldList") != null && !jsonObj.get("customFieldList").isJsonNull()) && !jsonObj.get("customFieldList").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customFieldList` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customFieldList").toString()));
      }
      if ((jsonObj.get("department") != null && !jsonObj.get("department").isJsonNull()) && !jsonObj.get("department").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `department` to be a primitive type in the JSON string but got `%s`", jsonObj.get("department").toString()));
      }
      if ((jsonObj.get("departmentLabel") != null && !jsonObj.get("departmentLabel").isJsonNull()) && !jsonObj.get("departmentLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `departmentLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("departmentLabel").toString()));
      }
      if ((jsonObj.get("profileName") != null && !jsonObj.get("profileName").isJsonNull()) && !jsonObj.get("profileName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profileName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profileName").toString()));
      }
      // validate the optional field `userReporterList`
      if (jsonObj.get("userReporterList") != null && !jsonObj.get("userReporterList").isJsonNull()) {
        PeopleAndPermissionsGetUsersResponseDataInnerUserReporterList.validateJsonObject(jsonObj.getAsJsonObject("userReporterList"));
      }
      if ((jsonObj.get("empId") != null && !jsonObj.get("empId").isJsonNull()) && !jsonObj.get("empId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `empId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("empId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PeopleAndPermissionsGetUsersResponseDataInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PeopleAndPermissionsGetUsersResponseDataInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PeopleAndPermissionsGetUsersResponseDataInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PeopleAndPermissionsGetUsersResponseDataInner.class));

       return (TypeAdapter<T>) new TypeAdapter<PeopleAndPermissionsGetUsersResponseDataInner>() {
           @Override
           public void write(JsonWriter out, PeopleAndPermissionsGetUsersResponseDataInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PeopleAndPermissionsGetUsersResponseDataInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PeopleAndPermissionsGetUsersResponseDataInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PeopleAndPermissionsGetUsersResponseDataInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PeopleAndPermissionsGetUsersResponseDataInner
  * @throws IOException if the JSON string is invalid with respect to PeopleAndPermissionsGetUsersResponseDataInner
  */
  public static PeopleAndPermissionsGetUsersResponseDataInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PeopleAndPermissionsGetUsersResponseDataInner.class);
  }

 /**
  * Convert an instance of PeopleAndPermissionsGetUsersResponseDataInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

