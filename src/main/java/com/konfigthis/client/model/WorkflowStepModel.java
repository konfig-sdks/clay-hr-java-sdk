/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AppraisalModel;
import com.konfigthis.client.model.AttachmentModel;
import com.konfigthis.client.model.DynaFormSlimModel;
import com.konfigthis.client.model.MailTemplateModel;
import com.konfigthis.client.model.PositionStatusModel;
import com.konfigthis.client.model.TrainingModel;
import com.konfigthis.client.model.UserGroupModel;
import com.konfigthis.client.model.UserModel;
import com.konfigthis.client.model.WorkflowParameterModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * WorkflowStepModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class WorkflowStepModel {
  public static final String SERIALIZED_NAME_APPRAISAL_MODEL = "appraisalModel";
  @SerializedName(SERIALIZED_NAME_APPRAISAL_MODEL)
  private AppraisalModel appraisalModel;

  public static final String SERIALIZED_NAME_ASSIGNEE = "assignee";
  @SerializedName(SERIALIZED_NAME_ASSIGNEE)
  private String assignee;

  public static final String SERIALIZED_NAME_ASSIGNEE_MODEL = "assigneeModel";
  @SerializedName(SERIALIZED_NAME_ASSIGNEE_MODEL)
  private UserModel assigneeModel;

  public static final String SERIALIZED_NAME_ATTACHMENT_MODEL = "attachmentModel";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_MODEL)
  private AttachmentModel attachmentModel;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_CREATE_USER_ID = "createUserId";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_ID)
  private Integer createUserId;

  public static final String SERIALIZED_NAME_DEPENDENT_STEP_ID = "dependentStepId";
  @SerializedName(SERIALIZED_NAME_DEPENDENT_STEP_ID)
  private Integer dependentStepId;

  public static final String SERIALIZED_NAME_DEPENDENT_STEP_MODEL = "dependentStepModel";
  @SerializedName(SERIALIZED_NAME_DEPENDENT_STEP_MODEL)
  private WorkflowStepModel dependentStepModel;

  public static final String SERIALIZED_NAME_DUE_DATE = "dueDate";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private String dueDate;

  public static final String SERIALIZED_NAME_DYNAMIC_FORM_MODEL = "dynamicFormModel";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_FORM_MODEL)
  private DynaFormSlimModel dynamicFormModel;

  public static final String SERIALIZED_NAME_FIELD_TO_CHANGE = "fieldToChange";
  @SerializedName(SERIALIZED_NAME_FIELD_TO_CHANGE)
  private String fieldToChange;

  public static final String SERIALIZED_NAME_FROM_POSITION_STATUS_MODEL = "fromPositionStatusModel";
  @SerializedName(SERIALIZED_NAME_FROM_POSITION_STATUS_MODEL)
  private PositionStatusModel fromPositionStatusModel;

  public static final String SERIALIZED_NAME_MAIL_TEMPLATE_MODEL = "mailTemplateModel";
  @SerializedName(SERIALIZED_NAME_MAIL_TEMPLATE_MODEL)
  private MailTemplateModel mailTemplateModel;

  public static final String SERIALIZED_NAME_PHASE_ID = "phaseId";
  @SerializedName(SERIALIZED_NAME_PHASE_ID)
  private Long phaseId;

  public static final String SERIALIZED_NAME_RELATIVE_TO = "relativeTo";
  @SerializedName(SERIALIZED_NAME_RELATIVE_TO)
  private String relativeTo;

  public static final String SERIALIZED_NAME_REQ_APPROVAL = "reqApproval";
  @SerializedName(SERIALIZED_NAME_REQ_APPROVAL)
  private Boolean reqApproval;

  public static final String SERIALIZED_NAME_SEQUENCE = "sequence";
  @SerializedName(SERIALIZED_NAME_SEQUENCE)
  private Integer sequence;

  public static final String SERIALIZED_NAME_STEP_DESC = "stepDesc";
  @SerializedName(SERIALIZED_NAME_STEP_DESC)
  private String stepDesc;

  public static final String SERIALIZED_NAME_STEP_ID = "stepId";
  @SerializedName(SERIALIZED_NAME_STEP_ID)
  private Long stepId;

  public static final String SERIALIZED_NAME_STEP_NAME = "stepName";
  @SerializedName(SERIALIZED_NAME_STEP_NAME)
  private String stepName;

  public static final String SERIALIZED_NAME_STEP_TYPE = "stepType";
  @SerializedName(SERIALIZED_NAME_STEP_TYPE)
  private String stepType;

  public static final String SERIALIZED_NAME_TO_POSITION_STATUS_MODEL = "toPositionStatusModel";
  @SerializedName(SERIALIZED_NAME_TO_POSITION_STATUS_MODEL)
  private PositionStatusModel toPositionStatusModel;

  public static final String SERIALIZED_NAME_TRAINING_MODEL = "trainingModel";
  @SerializedName(SERIALIZED_NAME_TRAINING_MODEL)
  private TrainingModel trainingModel;

  public static final String SERIALIZED_NAME_TRANSITION_NAME = "transitionName";
  @SerializedName(SERIALIZED_NAME_TRANSITION_NAME)
  private String transitionName;

  public static final String SERIALIZED_NAME_USER_GROUP_MODEL = "userGroupModel";
  @SerializedName(SERIALIZED_NAME_USER_GROUP_MODEL)
  private UserGroupModel userGroupModel;

  public static final String SERIALIZED_NAME_WORKFLOW_PARAMETER_MODEL = "workflowParameterModel";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_PARAMETER_MODEL)
  private WorkflowParameterModel workflowParameterModel;

  public WorkflowStepModel() {
  }

  public WorkflowStepModel appraisalModel(AppraisalModel appraisalModel) {
    
    
    
    
    this.appraisalModel = appraisalModel;
    return this;
  }

   /**
   * Get appraisalModel
   * @return appraisalModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AppraisalModel getAppraisalModel() {
    return appraisalModel;
  }


  public void setAppraisalModel(AppraisalModel appraisalModel) {
    
    
    
    this.appraisalModel = appraisalModel;
  }


  public WorkflowStepModel assignee(String assignee) {
    
    
    
    
    this.assignee = assignee;
    return this;
  }

   /**
   * Get assignee
   * @return assignee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAssignee() {
    return assignee;
  }


  public void setAssignee(String assignee) {
    
    
    
    this.assignee = assignee;
  }


  public WorkflowStepModel assigneeModel(UserModel assigneeModel) {
    
    
    
    
    this.assigneeModel = assigneeModel;
    return this;
  }

   /**
   * Get assigneeModel
   * @return assigneeModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserModel getAssigneeModel() {
    return assigneeModel;
  }


  public void setAssigneeModel(UserModel assigneeModel) {
    
    
    
    this.assigneeModel = assigneeModel;
  }


  public WorkflowStepModel attachmentModel(AttachmentModel attachmentModel) {
    
    
    
    
    this.attachmentModel = attachmentModel;
    return this;
  }

   /**
   * Get attachmentModel
   * @return attachmentModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AttachmentModel getAttachmentModel() {
    return attachmentModel;
  }


  public void setAttachmentModel(AttachmentModel attachmentModel) {
    
    
    
    this.attachmentModel = attachmentModel;
  }


  public WorkflowStepModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public WorkflowStepModel createUserId(Integer createUserId) {
    
    
    
    
    this.createUserId = createUserId;
    return this;
  }

   /**
   * Get createUserId
   * @return createUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateUserId() {
    return createUserId;
  }


  public void setCreateUserId(Integer createUserId) {
    
    
    
    this.createUserId = createUserId;
  }


  public WorkflowStepModel dependentStepId(Integer dependentStepId) {
    
    
    
    
    this.dependentStepId = dependentStepId;
    return this;
  }

   /**
   * Get dependentStepId
   * @return dependentStepId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDependentStepId() {
    return dependentStepId;
  }


  public void setDependentStepId(Integer dependentStepId) {
    
    
    
    this.dependentStepId = dependentStepId;
  }


  public WorkflowStepModel dependentStepModel(WorkflowStepModel dependentStepModel) {
    
    
    
    
    this.dependentStepModel = dependentStepModel;
    return this;
  }

   /**
   * Get dependentStepModel
   * @return dependentStepModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkflowStepModel getDependentStepModel() {
    return dependentStepModel;
  }


  public void setDependentStepModel(WorkflowStepModel dependentStepModel) {
    
    
    
    this.dependentStepModel = dependentStepModel;
  }


  public WorkflowStepModel dueDate(String dueDate) {
    
    
    
    
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDueDate() {
    return dueDate;
  }


  public void setDueDate(String dueDate) {
    
    
    
    this.dueDate = dueDate;
  }


  public WorkflowStepModel dynamicFormModel(DynaFormSlimModel dynamicFormModel) {
    
    
    
    
    this.dynamicFormModel = dynamicFormModel;
    return this;
  }

   /**
   * Get dynamicFormModel
   * @return dynamicFormModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DynaFormSlimModel getDynamicFormModel() {
    return dynamicFormModel;
  }


  public void setDynamicFormModel(DynaFormSlimModel dynamicFormModel) {
    
    
    
    this.dynamicFormModel = dynamicFormModel;
  }


  public WorkflowStepModel fieldToChange(String fieldToChange) {
    
    
    
    
    this.fieldToChange = fieldToChange;
    return this;
  }

   /**
   * Get fieldToChange
   * @return fieldToChange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFieldToChange() {
    return fieldToChange;
  }


  public void setFieldToChange(String fieldToChange) {
    
    
    
    this.fieldToChange = fieldToChange;
  }


  public WorkflowStepModel fromPositionStatusModel(PositionStatusModel fromPositionStatusModel) {
    
    
    
    
    this.fromPositionStatusModel = fromPositionStatusModel;
    return this;
  }

   /**
   * Get fromPositionStatusModel
   * @return fromPositionStatusModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PositionStatusModel getFromPositionStatusModel() {
    return fromPositionStatusModel;
  }


  public void setFromPositionStatusModel(PositionStatusModel fromPositionStatusModel) {
    
    
    
    this.fromPositionStatusModel = fromPositionStatusModel;
  }


  public WorkflowStepModel mailTemplateModel(MailTemplateModel mailTemplateModel) {
    
    
    
    
    this.mailTemplateModel = mailTemplateModel;
    return this;
  }

   /**
   * Get mailTemplateModel
   * @return mailTemplateModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MailTemplateModel getMailTemplateModel() {
    return mailTemplateModel;
  }


  public void setMailTemplateModel(MailTemplateModel mailTemplateModel) {
    
    
    
    this.mailTemplateModel = mailTemplateModel;
  }


  public WorkflowStepModel phaseId(Long phaseId) {
    
    
    
    
    this.phaseId = phaseId;
    return this;
  }

   /**
   * Get phaseId
   * @return phaseId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getPhaseId() {
    return phaseId;
  }


  public void setPhaseId(Long phaseId) {
    
    
    
    this.phaseId = phaseId;
  }


  public WorkflowStepModel relativeTo(String relativeTo) {
    
    
    
    
    this.relativeTo = relativeTo;
    return this;
  }

   /**
   * Get relativeTo
   * @return relativeTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRelativeTo() {
    return relativeTo;
  }


  public void setRelativeTo(String relativeTo) {
    
    
    
    this.relativeTo = relativeTo;
  }


  public WorkflowStepModel reqApproval(Boolean reqApproval) {
    
    
    
    
    this.reqApproval = reqApproval;
    return this;
  }

   /**
   * Get reqApproval
   * @return reqApproval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getReqApproval() {
    return reqApproval;
  }


  public void setReqApproval(Boolean reqApproval) {
    
    
    
    this.reqApproval = reqApproval;
  }


  public WorkflowStepModel sequence(Integer sequence) {
    
    
    
    
    this.sequence = sequence;
    return this;
  }

   /**
   * Get sequence
   * @return sequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSequence() {
    return sequence;
  }


  public void setSequence(Integer sequence) {
    
    
    
    this.sequence = sequence;
  }


  public WorkflowStepModel stepDesc(String stepDesc) {
    
    
    
    
    this.stepDesc = stepDesc;
    return this;
  }

   /**
   * Get stepDesc
   * @return stepDesc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStepDesc() {
    return stepDesc;
  }


  public void setStepDesc(String stepDesc) {
    
    
    
    this.stepDesc = stepDesc;
  }


  public WorkflowStepModel stepId(Long stepId) {
    
    
    
    
    this.stepId = stepId;
    return this;
  }

   /**
   * Get stepId
   * @return stepId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getStepId() {
    return stepId;
  }


  public void setStepId(Long stepId) {
    
    
    
    this.stepId = stepId;
  }


  public WorkflowStepModel stepName(String stepName) {
    
    
    
    
    this.stepName = stepName;
    return this;
  }

   /**
   * Get stepName
   * @return stepName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStepName() {
    return stepName;
  }


  public void setStepName(String stepName) {
    
    
    
    this.stepName = stepName;
  }


  public WorkflowStepModel stepType(String stepType) {
    
    
    
    
    this.stepType = stepType;
    return this;
  }

   /**
   * Get stepType
   * @return stepType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStepType() {
    return stepType;
  }


  public void setStepType(String stepType) {
    
    
    
    this.stepType = stepType;
  }


  public WorkflowStepModel toPositionStatusModel(PositionStatusModel toPositionStatusModel) {
    
    
    
    
    this.toPositionStatusModel = toPositionStatusModel;
    return this;
  }

   /**
   * Get toPositionStatusModel
   * @return toPositionStatusModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PositionStatusModel getToPositionStatusModel() {
    return toPositionStatusModel;
  }


  public void setToPositionStatusModel(PositionStatusModel toPositionStatusModel) {
    
    
    
    this.toPositionStatusModel = toPositionStatusModel;
  }


  public WorkflowStepModel trainingModel(TrainingModel trainingModel) {
    
    
    
    
    this.trainingModel = trainingModel;
    return this;
  }

   /**
   * Get trainingModel
   * @return trainingModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TrainingModel getTrainingModel() {
    return trainingModel;
  }


  public void setTrainingModel(TrainingModel trainingModel) {
    
    
    
    this.trainingModel = trainingModel;
  }


  public WorkflowStepModel transitionName(String transitionName) {
    
    
    
    
    this.transitionName = transitionName;
    return this;
  }

   /**
   * Get transitionName
   * @return transitionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTransitionName() {
    return transitionName;
  }


  public void setTransitionName(String transitionName) {
    
    
    
    this.transitionName = transitionName;
  }


  public WorkflowStepModel userGroupModel(UserGroupModel userGroupModel) {
    
    
    
    
    this.userGroupModel = userGroupModel;
    return this;
  }

   /**
   * Get userGroupModel
   * @return userGroupModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserGroupModel getUserGroupModel() {
    return userGroupModel;
  }


  public void setUserGroupModel(UserGroupModel userGroupModel) {
    
    
    
    this.userGroupModel = userGroupModel;
  }


  public WorkflowStepModel workflowParameterModel(WorkflowParameterModel workflowParameterModel) {
    
    
    
    
    this.workflowParameterModel = workflowParameterModel;
    return this;
  }

   /**
   * Get workflowParameterModel
   * @return workflowParameterModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkflowParameterModel getWorkflowParameterModel() {
    return workflowParameterModel;
  }


  public void setWorkflowParameterModel(WorkflowParameterModel workflowParameterModel) {
    
    
    
    this.workflowParameterModel = workflowParameterModel;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the WorkflowStepModel instance itself
   */
  public WorkflowStepModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowStepModel workflowStepModel = (WorkflowStepModel) o;
    return Objects.equals(this.appraisalModel, workflowStepModel.appraisalModel) &&
        Objects.equals(this.assignee, workflowStepModel.assignee) &&
        Objects.equals(this.assigneeModel, workflowStepModel.assigneeModel) &&
        Objects.equals(this.attachmentModel, workflowStepModel.attachmentModel) &&
        Objects.equals(this.cid, workflowStepModel.cid) &&
        Objects.equals(this.createUserId, workflowStepModel.createUserId) &&
        Objects.equals(this.dependentStepId, workflowStepModel.dependentStepId) &&
        Objects.equals(this.dependentStepModel, workflowStepModel.dependentStepModel) &&
        Objects.equals(this.dueDate, workflowStepModel.dueDate) &&
        Objects.equals(this.dynamicFormModel, workflowStepModel.dynamicFormModel) &&
        Objects.equals(this.fieldToChange, workflowStepModel.fieldToChange) &&
        Objects.equals(this.fromPositionStatusModel, workflowStepModel.fromPositionStatusModel) &&
        Objects.equals(this.mailTemplateModel, workflowStepModel.mailTemplateModel) &&
        Objects.equals(this.phaseId, workflowStepModel.phaseId) &&
        Objects.equals(this.relativeTo, workflowStepModel.relativeTo) &&
        Objects.equals(this.reqApproval, workflowStepModel.reqApproval) &&
        Objects.equals(this.sequence, workflowStepModel.sequence) &&
        Objects.equals(this.stepDesc, workflowStepModel.stepDesc) &&
        Objects.equals(this.stepId, workflowStepModel.stepId) &&
        Objects.equals(this.stepName, workflowStepModel.stepName) &&
        Objects.equals(this.stepType, workflowStepModel.stepType) &&
        Objects.equals(this.toPositionStatusModel, workflowStepModel.toPositionStatusModel) &&
        Objects.equals(this.trainingModel, workflowStepModel.trainingModel) &&
        Objects.equals(this.transitionName, workflowStepModel.transitionName) &&
        Objects.equals(this.userGroupModel, workflowStepModel.userGroupModel) &&
        Objects.equals(this.workflowParameterModel, workflowStepModel.workflowParameterModel)&&
        Objects.equals(this.additionalProperties, workflowStepModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appraisalModel, assignee, assigneeModel, attachmentModel, cid, createUserId, dependentStepId, dependentStepModel, dueDate, dynamicFormModel, fieldToChange, fromPositionStatusModel, mailTemplateModel, phaseId, relativeTo, reqApproval, sequence, stepDesc, stepId, stepName, stepType, toPositionStatusModel, trainingModel, transitionName, userGroupModel, workflowParameterModel, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowStepModel {\n");
    sb.append("    appraisalModel: ").append(toIndentedString(appraisalModel)).append("\n");
    sb.append("    assignee: ").append(toIndentedString(assignee)).append("\n");
    sb.append("    assigneeModel: ").append(toIndentedString(assigneeModel)).append("\n");
    sb.append("    attachmentModel: ").append(toIndentedString(attachmentModel)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    createUserId: ").append(toIndentedString(createUserId)).append("\n");
    sb.append("    dependentStepId: ").append(toIndentedString(dependentStepId)).append("\n");
    sb.append("    dependentStepModel: ").append(toIndentedString(dependentStepModel)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    dynamicFormModel: ").append(toIndentedString(dynamicFormModel)).append("\n");
    sb.append("    fieldToChange: ").append(toIndentedString(fieldToChange)).append("\n");
    sb.append("    fromPositionStatusModel: ").append(toIndentedString(fromPositionStatusModel)).append("\n");
    sb.append("    mailTemplateModel: ").append(toIndentedString(mailTemplateModel)).append("\n");
    sb.append("    phaseId: ").append(toIndentedString(phaseId)).append("\n");
    sb.append("    relativeTo: ").append(toIndentedString(relativeTo)).append("\n");
    sb.append("    reqApproval: ").append(toIndentedString(reqApproval)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    stepDesc: ").append(toIndentedString(stepDesc)).append("\n");
    sb.append("    stepId: ").append(toIndentedString(stepId)).append("\n");
    sb.append("    stepName: ").append(toIndentedString(stepName)).append("\n");
    sb.append("    stepType: ").append(toIndentedString(stepType)).append("\n");
    sb.append("    toPositionStatusModel: ").append(toIndentedString(toPositionStatusModel)).append("\n");
    sb.append("    trainingModel: ").append(toIndentedString(trainingModel)).append("\n");
    sb.append("    transitionName: ").append(toIndentedString(transitionName)).append("\n");
    sb.append("    userGroupModel: ").append(toIndentedString(userGroupModel)).append("\n");
    sb.append("    workflowParameterModel: ").append(toIndentedString(workflowParameterModel)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appraisalModel");
    openapiFields.add("assignee");
    openapiFields.add("assigneeModel");
    openapiFields.add("attachmentModel");
    openapiFields.add("cid");
    openapiFields.add("createUserId");
    openapiFields.add("dependentStepId");
    openapiFields.add("dependentStepModel");
    openapiFields.add("dueDate");
    openapiFields.add("dynamicFormModel");
    openapiFields.add("fieldToChange");
    openapiFields.add("fromPositionStatusModel");
    openapiFields.add("mailTemplateModel");
    openapiFields.add("phaseId");
    openapiFields.add("relativeTo");
    openapiFields.add("reqApproval");
    openapiFields.add("sequence");
    openapiFields.add("stepDesc");
    openapiFields.add("stepId");
    openapiFields.add("stepName");
    openapiFields.add("stepType");
    openapiFields.add("toPositionStatusModel");
    openapiFields.add("trainingModel");
    openapiFields.add("transitionName");
    openapiFields.add("userGroupModel");
    openapiFields.add("workflowParameterModel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WorkflowStepModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WorkflowStepModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkflowStepModel is not found in the empty JSON string", WorkflowStepModel.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `appraisalModel`
      if (jsonObj.get("appraisalModel") != null && !jsonObj.get("appraisalModel").isJsonNull()) {
        AppraisalModel.validateJsonObject(jsonObj.getAsJsonObject("appraisalModel"));
      }
      if ((jsonObj.get("assignee") != null && !jsonObj.get("assignee").isJsonNull()) && !jsonObj.get("assignee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assignee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assignee").toString()));
      }
      // validate the optional field `assigneeModel`
      if (jsonObj.get("assigneeModel") != null && !jsonObj.get("assigneeModel").isJsonNull()) {
        UserModel.validateJsonObject(jsonObj.getAsJsonObject("assigneeModel"));
      }
      // validate the optional field `attachmentModel`
      if (jsonObj.get("attachmentModel") != null && !jsonObj.get("attachmentModel").isJsonNull()) {
        AttachmentModel.validateJsonObject(jsonObj.getAsJsonObject("attachmentModel"));
      }
      // validate the optional field `dependentStepModel`
      if (jsonObj.get("dependentStepModel") != null && !jsonObj.get("dependentStepModel").isJsonNull()) {
        WorkflowStepModel.validateJsonObject(jsonObj.getAsJsonObject("dependentStepModel"));
      }
      if ((jsonObj.get("dueDate") != null && !jsonObj.get("dueDate").isJsonNull()) && !jsonObj.get("dueDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dueDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dueDate").toString()));
      }
      // validate the optional field `dynamicFormModel`
      if (jsonObj.get("dynamicFormModel") != null && !jsonObj.get("dynamicFormModel").isJsonNull()) {
        DynaFormSlimModel.validateJsonObject(jsonObj.getAsJsonObject("dynamicFormModel"));
      }
      if ((jsonObj.get("fieldToChange") != null && !jsonObj.get("fieldToChange").isJsonNull()) && !jsonObj.get("fieldToChange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fieldToChange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fieldToChange").toString()));
      }
      // validate the optional field `fromPositionStatusModel`
      if (jsonObj.get("fromPositionStatusModel") != null && !jsonObj.get("fromPositionStatusModel").isJsonNull()) {
        PositionStatusModel.validateJsonObject(jsonObj.getAsJsonObject("fromPositionStatusModel"));
      }
      // validate the optional field `mailTemplateModel`
      if (jsonObj.get("mailTemplateModel") != null && !jsonObj.get("mailTemplateModel").isJsonNull()) {
        MailTemplateModel.validateJsonObject(jsonObj.getAsJsonObject("mailTemplateModel"));
      }
      if ((jsonObj.get("relativeTo") != null && !jsonObj.get("relativeTo").isJsonNull()) && !jsonObj.get("relativeTo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relativeTo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relativeTo").toString()));
      }
      if ((jsonObj.get("stepDesc") != null && !jsonObj.get("stepDesc").isJsonNull()) && !jsonObj.get("stepDesc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stepDesc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stepDesc").toString()));
      }
      if ((jsonObj.get("stepName") != null && !jsonObj.get("stepName").isJsonNull()) && !jsonObj.get("stepName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stepName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stepName").toString()));
      }
      if ((jsonObj.get("stepType") != null && !jsonObj.get("stepType").isJsonNull()) && !jsonObj.get("stepType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stepType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stepType").toString()));
      }
      // validate the optional field `toPositionStatusModel`
      if (jsonObj.get("toPositionStatusModel") != null && !jsonObj.get("toPositionStatusModel").isJsonNull()) {
        PositionStatusModel.validateJsonObject(jsonObj.getAsJsonObject("toPositionStatusModel"));
      }
      // validate the optional field `trainingModel`
      if (jsonObj.get("trainingModel") != null && !jsonObj.get("trainingModel").isJsonNull()) {
        TrainingModel.validateJsonObject(jsonObj.getAsJsonObject("trainingModel"));
      }
      if ((jsonObj.get("transitionName") != null && !jsonObj.get("transitionName").isJsonNull()) && !jsonObj.get("transitionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transitionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transitionName").toString()));
      }
      // validate the optional field `userGroupModel`
      if (jsonObj.get("userGroupModel") != null && !jsonObj.get("userGroupModel").isJsonNull()) {
        UserGroupModel.validateJsonObject(jsonObj.getAsJsonObject("userGroupModel"));
      }
      // validate the optional field `workflowParameterModel`
      if (jsonObj.get("workflowParameterModel") != null && !jsonObj.get("workflowParameterModel").isJsonNull()) {
        WorkflowParameterModel.validateJsonObject(jsonObj.getAsJsonObject("workflowParameterModel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkflowStepModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkflowStepModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkflowStepModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkflowStepModel.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkflowStepModel>() {
           @Override
           public void write(JsonWriter out, WorkflowStepModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkflowStepModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             WorkflowStepModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WorkflowStepModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WorkflowStepModel
  * @throws IOException if the JSON string is invalid with respect to WorkflowStepModel
  */
  public static WorkflowStepModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkflowStepModel.class);
  }

 /**
  * Convert an instance of WorkflowStepModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

