/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CandidateApplicationsModel;
import com.konfigthis.client.model.LocationModel;
import com.konfigthis.client.model.PositionApprovalLevelModel;
import com.konfigthis.client.model.ProjectModel;
import com.konfigthis.client.model.UserPositionApprovalModel;
import com.konfigthis.client.model.UserProfileModel;
import com.konfigthis.client.model.UserViewModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PositionModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PositionModel {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ACCESS_LEVEL = "accessLevel";
  @SerializedName(SERIALIZED_NAME_ACCESS_LEVEL)
  private String accessLevel;

  public static final String SERIALIZED_NAME_APPLICATION_DUE_DATE = "applicationDueDate";
  @SerializedName(SERIALIZED_NAME_APPLICATION_DUE_DATE)
  private LocalDate applicationDueDate;

  public static final String SERIALIZED_NAME_APPLICATION_FORM_ID = "applicationFormId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_FORM_ID)
  private Integer applicationFormId;

  public static final String SERIALIZED_NAME_APPROVAL_FLOW_ID = "approvalFlowId";
  @SerializedName(SERIALIZED_NAME_APPROVAL_FLOW_ID)
  private Integer approvalFlowId;

  public static final String SERIALIZED_NAME_APPROVAL_STATUS = "approvalStatus";
  @SerializedName(SERIALIZED_NAME_APPROVAL_STATUS)
  private String approvalStatus;

  public static final String SERIALIZED_NAME_ASSESSMENT_FORM_ID = "assessmentFormId";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_FORM_ID)
  private Integer assessmentFormId;

  public static final String SERIALIZED_NAME_ASSESSMENT_TEMPLATE_ID = "assessmentTemplateId";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_TEMPLATE_ID)
  private Integer assessmentTemplateId;

  public static final String SERIALIZED_NAME_CANDIDATE_POSITION_MODEL_LIST = "candidatePositionModelList";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_POSITION_MODEL_LIST)
  private List<CandidateApplicationsModel> candidatePositionModelList = null;

  public static final String SERIALIZED_NAME_CID = "cid";
  @SerializedName(SERIALIZED_NAME_CID)
  private Integer cid;

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Integer count;

  public static final String SERIALIZED_NAME_CREATE_DATE = "createDate";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  private LocalDate createDate;

  public static final String SERIALIZED_NAME_CREATE_USER_ID = "createUserId";
  @SerializedName(SERIALIZED_NAME_CREATE_USER_ID)
  private Integer createUserId;

  public static final String SERIALIZED_NAME_CUSTOM_LOCATION = "customLocation";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LOCATION)
  private String customLocation;

  public static final String SERIALIZED_NAME_DATE_CLOSE = "dateClose";
  @SerializedName(SERIALIZED_NAME_DATE_CLOSE)
  private LocalDate dateClose;

  public static final String SERIALIZED_NAME_DEPARTMENT_ID = "departmentId";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_ID)
  private Integer departmentId;

  public static final String SERIALIZED_NAME_FUNNEL_ID = "funnelId";
  @SerializedName(SERIALIZED_NAME_FUNNEL_ID)
  private Long funnelId;

  public static final String SERIALIZED_NAME_HIRING_MANAGER_ID = "hiringManagerId";
  @SerializedName(SERIALIZED_NAME_HIRING_MANAGER_ID)
  private Integer hiringManagerId;

  public static final String SERIALIZED_NAME_HTML_TEMPLATE = "htmlTemplate";
  @SerializedName(SERIALIZED_NAME_HTML_TEMPLATE)
  private String htmlTemplate;

  public static final String SERIALIZED_NAME_IS_RECOMMENDED = "isRecommended";
  @SerializedName(SERIALIZED_NAME_IS_RECOMMENDED)
  private Boolean isRecommended;

  public static final String SERIALIZED_NAME_LAST_UPDATETS = "lastUpdatets";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATETS)
  private LocalDate lastUpdatets;

  public static final String SERIALIZED_NAME_LASTUPDATEUSERID = "lastupdateuserid";
  @SerializedName(SERIALIZED_NAME_LASTUPDATEUSERID)
  private Integer lastupdateuserid;

  public static final String SERIALIZED_NAME_LOCATION_MODEL = "locationModel";
  @SerializedName(SERIALIZED_NAME_LOCATION_MODEL)
  private LocationModel locationModel;

  public static final String SERIALIZED_NAME_LOCATIONID = "locationid";
  @SerializedName(SERIALIZED_NAME_LOCATIONID)
  private Integer locationid;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_POSITION_APPROVAL_LEVEL_LIST = "positionApprovalLevelList";
  @SerializedName(SERIALIZED_NAME_POSITION_APPROVAL_LEVEL_LIST)
  private List<PositionApprovalLevelModel> positionApprovalLevelList = null;

  public static final String SERIALIZED_NAME_POSITION_U_I_D = "positionUID";
  @SerializedName(SERIALIZED_NAME_POSITION_U_I_D)
  private String positionUID;

  public static final String SERIALIZED_NAME_POSITIONID = "positionid";
  @SerializedName(SERIALIZED_NAME_POSITIONID)
  private Integer positionid;

  public static final String SERIALIZED_NAME_PROFILE_MODEL = "profileModel";
  @SerializedName(SERIALIZED_NAME_PROFILE_MODEL)
  private UserProfileModel profileModel;

  public static final String SERIALIZED_NAME_PROFILEID = "profileid";
  @SerializedName(SERIALIZED_NAME_PROFILEID)
  private Integer profileid;

  public static final String SERIALIZED_NAME_PROJECT_MODEL = "projectModel";
  @SerializedName(SERIALIZED_NAME_PROJECT_MODEL)
  private ProjectModel projectModel;

  public static final String SERIALIZED_NAME_PROJECTID = "projectid";
  @SerializedName(SERIALIZED_NAME_PROJECTID)
  private Integer projectid;

  public static final String SERIALIZED_NAME_RECOMMENDED = "recommended";
  @SerializedName(SERIALIZED_NAME_RECOMMENDED)
  private Boolean recommended;

  public static final String SERIALIZED_NAME_RECRUITER_ID = "recruiterId";
  @SerializedName(SERIALIZED_NAME_RECRUITER_ID)
  private Integer recruiterId;

  public static final String SERIALIZED_NAME_RECRUITER_MODEL = "recruiterModel";
  @SerializedName(SERIALIZED_NAME_RECRUITER_MODEL)
  private UserViewModel recruiterModel;

  public static final String SERIALIZED_NAME_REQUEST_APPROVAL_ID = "requestApprovalId";
  @SerializedName(SERIALIZED_NAME_REQUEST_APPROVAL_ID)
  private Integer requestApprovalId;

  public static final String SERIALIZED_NAME_REQUIREMENTS = "requirements";
  @SerializedName(SERIALIZED_NAME_REQUIREMENTS)
  private String requirements;

  public static final String SERIALIZED_NAME_RESPONSIBILITIES = "responsibilities";
  @SerializedName(SERIALIZED_NAME_RESPONSIBILITIES)
  private String responsibilities;

  public static final String SERIALIZED_NAME_SEO_URL = "seoUrl";
  @SerializedName(SERIALIZED_NAME_SEO_URL)
  private String seoUrl;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TOTALCANDIDATE = "totalcandidate";
  @SerializedName(SERIALIZED_NAME_TOTALCANDIDATE)
  private Integer totalcandidate;

  public static final String SERIALIZED_NAME_USER_NAME = "userName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_USER_VIEW_MODEL = "userViewModel";
  @SerializedName(SERIALIZED_NAME_USER_VIEW_MODEL)
  private UserViewModel userViewModel;

  public static final String SERIALIZED_NAME_USERAPPROVAL_LIST = "userapprovalList";
  @SerializedName(SERIALIZED_NAME_USERAPPROVAL_LIST)
  private List<UserPositionApprovalModel> userapprovalList = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public PositionModel() {
  }

  public PositionModel description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public PositionModel accessLevel(String accessLevel) {
    
    
    
    
    this.accessLevel = accessLevel;
    return this;
  }

   /**
   * Get accessLevel
   * @return accessLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccessLevel() {
    return accessLevel;
  }


  public void setAccessLevel(String accessLevel) {
    
    
    
    this.accessLevel = accessLevel;
  }


  public PositionModel applicationDueDate(LocalDate applicationDueDate) {
    
    
    
    
    this.applicationDueDate = applicationDueDate;
    return this;
  }

   /**
   * Get applicationDueDate
   * @return applicationDueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getApplicationDueDate() {
    return applicationDueDate;
  }


  public void setApplicationDueDate(LocalDate applicationDueDate) {
    
    
    
    this.applicationDueDate = applicationDueDate;
  }


  public PositionModel applicationFormId(Integer applicationFormId) {
    
    
    
    
    this.applicationFormId = applicationFormId;
    return this;
  }

   /**
   * Get applicationFormId
   * @return applicationFormId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApplicationFormId() {
    return applicationFormId;
  }


  public void setApplicationFormId(Integer applicationFormId) {
    
    
    
    this.applicationFormId = applicationFormId;
  }


  public PositionModel approvalFlowId(Integer approvalFlowId) {
    
    
    
    
    this.approvalFlowId = approvalFlowId;
    return this;
  }

   /**
   * Get approvalFlowId
   * @return approvalFlowId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApprovalFlowId() {
    return approvalFlowId;
  }


  public void setApprovalFlowId(Integer approvalFlowId) {
    
    
    
    this.approvalFlowId = approvalFlowId;
  }


  public PositionModel approvalStatus(String approvalStatus) {
    
    
    
    
    this.approvalStatus = approvalStatus;
    return this;
  }

   /**
   * Get approvalStatus
   * @return approvalStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApprovalStatus() {
    return approvalStatus;
  }


  public void setApprovalStatus(String approvalStatus) {
    
    
    
    this.approvalStatus = approvalStatus;
  }


  public PositionModel assessmentFormId(Integer assessmentFormId) {
    
    
    
    
    this.assessmentFormId = assessmentFormId;
    return this;
  }

   /**
   * Get assessmentFormId
   * @return assessmentFormId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAssessmentFormId() {
    return assessmentFormId;
  }


  public void setAssessmentFormId(Integer assessmentFormId) {
    
    
    
    this.assessmentFormId = assessmentFormId;
  }


  public PositionModel assessmentTemplateId(Integer assessmentTemplateId) {
    
    
    
    
    this.assessmentTemplateId = assessmentTemplateId;
    return this;
  }

   /**
   * Get assessmentTemplateId
   * @return assessmentTemplateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAssessmentTemplateId() {
    return assessmentTemplateId;
  }


  public void setAssessmentTemplateId(Integer assessmentTemplateId) {
    
    
    
    this.assessmentTemplateId = assessmentTemplateId;
  }


  public PositionModel candidatePositionModelList(List<CandidateApplicationsModel> candidatePositionModelList) {
    
    
    
    
    this.candidatePositionModelList = candidatePositionModelList;
    return this;
  }

  public PositionModel addCandidatePositionModelListItem(CandidateApplicationsModel candidatePositionModelListItem) {
    if (this.candidatePositionModelList == null) {
      this.candidatePositionModelList = new ArrayList<>();
    }
    this.candidatePositionModelList.add(candidatePositionModelListItem);
    return this;
  }

   /**
   * Get candidatePositionModelList
   * @return candidatePositionModelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CandidateApplicationsModel> getCandidatePositionModelList() {
    return candidatePositionModelList;
  }


  public void setCandidatePositionModelList(List<CandidateApplicationsModel> candidatePositionModelList) {
    
    
    
    this.candidatePositionModelList = candidatePositionModelList;
  }


  public PositionModel cid(Integer cid) {
    
    
    
    
    this.cid = cid;
    return this;
  }

   /**
   * Get cid
   * @return cid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCid() {
    return cid;
  }


  public void setCid(Integer cid) {
    
    
    
    this.cid = cid;
  }


  public PositionModel count(Integer count) {
    
    
    
    
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCount() {
    return count;
  }


  public void setCount(Integer count) {
    
    
    
    this.count = count;
  }


  public PositionModel createDate(LocalDate createDate) {
    
    
    
    
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getCreateDate() {
    return createDate;
  }


  public void setCreateDate(LocalDate createDate) {
    
    
    
    this.createDate = createDate;
  }


  public PositionModel createUserId(Integer createUserId) {
    
    
    
    
    this.createUserId = createUserId;
    return this;
  }

   /**
   * Get createUserId
   * @return createUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateUserId() {
    return createUserId;
  }


  public void setCreateUserId(Integer createUserId) {
    
    
    
    this.createUserId = createUserId;
  }


  public PositionModel customLocation(String customLocation) {
    
    
    
    
    this.customLocation = customLocation;
    return this;
  }

   /**
   * Get customLocation
   * @return customLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCustomLocation() {
    return customLocation;
  }


  public void setCustomLocation(String customLocation) {
    
    
    
    this.customLocation = customLocation;
  }


  public PositionModel dateClose(LocalDate dateClose) {
    
    
    
    
    this.dateClose = dateClose;
    return this;
  }

   /**
   * Get dateClose
   * @return dateClose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getDateClose() {
    return dateClose;
  }


  public void setDateClose(LocalDate dateClose) {
    
    
    
    this.dateClose = dateClose;
  }


  public PositionModel departmentId(Integer departmentId) {
    
    
    
    
    this.departmentId = departmentId;
    return this;
  }

   /**
   * Get departmentId
   * @return departmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDepartmentId() {
    return departmentId;
  }


  public void setDepartmentId(Integer departmentId) {
    
    
    
    this.departmentId = departmentId;
  }


  public PositionModel funnelId(Long funnelId) {
    
    
    
    
    this.funnelId = funnelId;
    return this;
  }

   /**
   * Get funnelId
   * @return funnelId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getFunnelId() {
    return funnelId;
  }


  public void setFunnelId(Long funnelId) {
    
    
    
    this.funnelId = funnelId;
  }


  public PositionModel hiringManagerId(Integer hiringManagerId) {
    
    
    
    
    this.hiringManagerId = hiringManagerId;
    return this;
  }

   /**
   * Get hiringManagerId
   * @return hiringManagerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getHiringManagerId() {
    return hiringManagerId;
  }


  public void setHiringManagerId(Integer hiringManagerId) {
    
    
    
    this.hiringManagerId = hiringManagerId;
  }


  public PositionModel htmlTemplate(String htmlTemplate) {
    
    
    
    
    this.htmlTemplate = htmlTemplate;
    return this;
  }

   /**
   * Get htmlTemplate
   * @return htmlTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHtmlTemplate() {
    return htmlTemplate;
  }


  public void setHtmlTemplate(String htmlTemplate) {
    
    
    
    this.htmlTemplate = htmlTemplate;
  }


  public PositionModel isRecommended(Boolean isRecommended) {
    
    
    
    
    this.isRecommended = isRecommended;
    return this;
  }

   /**
   * Get isRecommended
   * @return isRecommended
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsRecommended() {
    return isRecommended;
  }


  public void setIsRecommended(Boolean isRecommended) {
    
    
    
    this.isRecommended = isRecommended;
  }


  public PositionModel lastUpdatets(LocalDate lastUpdatets) {
    
    
    
    
    this.lastUpdatets = lastUpdatets;
    return this;
  }

   /**
   * Get lastUpdatets
   * @return lastUpdatets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getLastUpdatets() {
    return lastUpdatets;
  }


  public void setLastUpdatets(LocalDate lastUpdatets) {
    
    
    
    this.lastUpdatets = lastUpdatets;
  }


  public PositionModel lastupdateuserid(Integer lastupdateuserid) {
    
    
    
    
    this.lastupdateuserid = lastupdateuserid;
    return this;
  }

   /**
   * Get lastupdateuserid
   * @return lastupdateuserid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLastupdateuserid() {
    return lastupdateuserid;
  }


  public void setLastupdateuserid(Integer lastupdateuserid) {
    
    
    
    this.lastupdateuserid = lastupdateuserid;
  }


  public PositionModel locationModel(LocationModel locationModel) {
    
    
    
    
    this.locationModel = locationModel;
    return this;
  }

   /**
   * Get locationModel
   * @return locationModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocationModel getLocationModel() {
    return locationModel;
  }


  public void setLocationModel(LocationModel locationModel) {
    
    
    
    this.locationModel = locationModel;
  }


  public PositionModel locationid(Integer locationid) {
    
    
    
    
    this.locationid = locationid;
    return this;
  }

   /**
   * Get locationid
   * @return locationid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLocationid() {
    return locationid;
  }


  public void setLocationid(Integer locationid) {
    
    
    
    this.locationid = locationid;
  }


  public PositionModel name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public PositionModel positionApprovalLevelList(List<PositionApprovalLevelModel> positionApprovalLevelList) {
    
    
    
    
    this.positionApprovalLevelList = positionApprovalLevelList;
    return this;
  }

  public PositionModel addPositionApprovalLevelListItem(PositionApprovalLevelModel positionApprovalLevelListItem) {
    if (this.positionApprovalLevelList == null) {
      this.positionApprovalLevelList = new ArrayList<>();
    }
    this.positionApprovalLevelList.add(positionApprovalLevelListItem);
    return this;
  }

   /**
   * Get positionApprovalLevelList
   * @return positionApprovalLevelList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PositionApprovalLevelModel> getPositionApprovalLevelList() {
    return positionApprovalLevelList;
  }


  public void setPositionApprovalLevelList(List<PositionApprovalLevelModel> positionApprovalLevelList) {
    
    
    
    this.positionApprovalLevelList = positionApprovalLevelList;
  }


  public PositionModel positionUID(String positionUID) {
    
    
    
    
    this.positionUID = positionUID;
    return this;
  }

   /**
   * Get positionUID
   * @return positionUID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPositionUID() {
    return positionUID;
  }


  public void setPositionUID(String positionUID) {
    
    
    
    this.positionUID = positionUID;
  }


  public PositionModel positionid(Integer positionid) {
    
    
    
    
    this.positionid = positionid;
    return this;
  }

   /**
   * Get positionid
   * @return positionid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPositionid() {
    return positionid;
  }


  public void setPositionid(Integer positionid) {
    
    
    
    this.positionid = positionid;
  }


  public PositionModel profileModel(UserProfileModel profileModel) {
    
    
    
    
    this.profileModel = profileModel;
    return this;
  }

   /**
   * Get profileModel
   * @return profileModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserProfileModel getProfileModel() {
    return profileModel;
  }


  public void setProfileModel(UserProfileModel profileModel) {
    
    
    
    this.profileModel = profileModel;
  }


  public PositionModel profileid(Integer profileid) {
    
    
    
    
    this.profileid = profileid;
    return this;
  }

   /**
   * Get profileid
   * @return profileid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProfileid() {
    return profileid;
  }


  public void setProfileid(Integer profileid) {
    
    
    
    this.profileid = profileid;
  }


  public PositionModel projectModel(ProjectModel projectModel) {
    
    
    
    
    this.projectModel = projectModel;
    return this;
  }

   /**
   * Get projectModel
   * @return projectModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProjectModel getProjectModel() {
    return projectModel;
  }


  public void setProjectModel(ProjectModel projectModel) {
    
    
    
    this.projectModel = projectModel;
  }


  public PositionModel projectid(Integer projectid) {
    
    
    
    
    this.projectid = projectid;
    return this;
  }

   /**
   * Get projectid
   * @return projectid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProjectid() {
    return projectid;
  }


  public void setProjectid(Integer projectid) {
    
    
    
    this.projectid = projectid;
  }


  public PositionModel recommended(Boolean recommended) {
    
    
    
    
    this.recommended = recommended;
    return this;
  }

   /**
   * Get recommended
   * @return recommended
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRecommended() {
    return recommended;
  }


  public void setRecommended(Boolean recommended) {
    
    
    
    this.recommended = recommended;
  }


  public PositionModel recruiterId(Integer recruiterId) {
    
    
    
    
    this.recruiterId = recruiterId;
    return this;
  }

   /**
   * Get recruiterId
   * @return recruiterId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRecruiterId() {
    return recruiterId;
  }


  public void setRecruiterId(Integer recruiterId) {
    
    
    
    this.recruiterId = recruiterId;
  }


  public PositionModel recruiterModel(UserViewModel recruiterModel) {
    
    
    
    
    this.recruiterModel = recruiterModel;
    return this;
  }

   /**
   * Get recruiterModel
   * @return recruiterModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserViewModel getRecruiterModel() {
    return recruiterModel;
  }


  public void setRecruiterModel(UserViewModel recruiterModel) {
    
    
    
    this.recruiterModel = recruiterModel;
  }


  public PositionModel requestApprovalId(Integer requestApprovalId) {
    
    
    
    
    this.requestApprovalId = requestApprovalId;
    return this;
  }

   /**
   * Get requestApprovalId
   * @return requestApprovalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRequestApprovalId() {
    return requestApprovalId;
  }


  public void setRequestApprovalId(Integer requestApprovalId) {
    
    
    
    this.requestApprovalId = requestApprovalId;
  }


  public PositionModel requirements(String requirements) {
    
    
    
    
    this.requirements = requirements;
    return this;
  }

   /**
   * Get requirements
   * @return requirements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRequirements() {
    return requirements;
  }


  public void setRequirements(String requirements) {
    
    
    
    this.requirements = requirements;
  }


  public PositionModel responsibilities(String responsibilities) {
    
    
    
    
    this.responsibilities = responsibilities;
    return this;
  }

   /**
   * Get responsibilities
   * @return responsibilities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getResponsibilities() {
    return responsibilities;
  }


  public void setResponsibilities(String responsibilities) {
    
    
    
    this.responsibilities = responsibilities;
  }


  public PositionModel seoUrl(String seoUrl) {
    
    
    
    
    this.seoUrl = seoUrl;
    return this;
  }

   /**
   * Get seoUrl
   * @return seoUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSeoUrl() {
    return seoUrl;
  }


  public void setSeoUrl(String seoUrl) {
    
    
    
    this.seoUrl = seoUrl;
  }


  public PositionModel status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public PositionModel totalcandidate(Integer totalcandidate) {
    
    
    
    
    this.totalcandidate = totalcandidate;
    return this;
  }

   /**
   * Get totalcandidate
   * @return totalcandidate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTotalcandidate() {
    return totalcandidate;
  }


  public void setTotalcandidate(Integer totalcandidate) {
    
    
    
    this.totalcandidate = totalcandidate;
  }


  public PositionModel userName(String userName) {
    
    
    
    
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    
    
    
    this.userName = userName;
  }


  public PositionModel userViewModel(UserViewModel userViewModel) {
    
    
    
    
    this.userViewModel = userViewModel;
    return this;
  }

   /**
   * Get userViewModel
   * @return userViewModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserViewModel getUserViewModel() {
    return userViewModel;
  }


  public void setUserViewModel(UserViewModel userViewModel) {
    
    
    
    this.userViewModel = userViewModel;
  }


  public PositionModel userapprovalList(List<UserPositionApprovalModel> userapprovalList) {
    
    
    
    
    this.userapprovalList = userapprovalList;
    return this;
  }

  public PositionModel addUserapprovalListItem(UserPositionApprovalModel userapprovalListItem) {
    if (this.userapprovalList == null) {
      this.userapprovalList = new ArrayList<>();
    }
    this.userapprovalList.add(userapprovalListItem);
    return this;
  }

   /**
   * Get userapprovalList
   * @return userapprovalList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<UserPositionApprovalModel> getUserapprovalList() {
    return userapprovalList;
  }


  public void setUserapprovalList(List<UserPositionApprovalModel> userapprovalList) {
    
    
    
    this.userapprovalList = userapprovalList;
  }


  public PositionModel id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PositionModel instance itself
   */
  public PositionModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PositionModel positionModel = (PositionModel) o;
    return Objects.equals(this.description, positionModel.description) &&
        Objects.equals(this.accessLevel, positionModel.accessLevel) &&
        Objects.equals(this.applicationDueDate, positionModel.applicationDueDate) &&
        Objects.equals(this.applicationFormId, positionModel.applicationFormId) &&
        Objects.equals(this.approvalFlowId, positionModel.approvalFlowId) &&
        Objects.equals(this.approvalStatus, positionModel.approvalStatus) &&
        Objects.equals(this.assessmentFormId, positionModel.assessmentFormId) &&
        Objects.equals(this.assessmentTemplateId, positionModel.assessmentTemplateId) &&
        Objects.equals(this.candidatePositionModelList, positionModel.candidatePositionModelList) &&
        Objects.equals(this.cid, positionModel.cid) &&
        Objects.equals(this.count, positionModel.count) &&
        Objects.equals(this.createDate, positionModel.createDate) &&
        Objects.equals(this.createUserId, positionModel.createUserId) &&
        Objects.equals(this.customLocation, positionModel.customLocation) &&
        Objects.equals(this.dateClose, positionModel.dateClose) &&
        Objects.equals(this.departmentId, positionModel.departmentId) &&
        Objects.equals(this.funnelId, positionModel.funnelId) &&
        Objects.equals(this.hiringManagerId, positionModel.hiringManagerId) &&
        Objects.equals(this.htmlTemplate, positionModel.htmlTemplate) &&
        Objects.equals(this.isRecommended, positionModel.isRecommended) &&
        Objects.equals(this.lastUpdatets, positionModel.lastUpdatets) &&
        Objects.equals(this.lastupdateuserid, positionModel.lastupdateuserid) &&
        Objects.equals(this.locationModel, positionModel.locationModel) &&
        Objects.equals(this.locationid, positionModel.locationid) &&
        Objects.equals(this.name, positionModel.name) &&
        Objects.equals(this.positionApprovalLevelList, positionModel.positionApprovalLevelList) &&
        Objects.equals(this.positionUID, positionModel.positionUID) &&
        Objects.equals(this.positionid, positionModel.positionid) &&
        Objects.equals(this.profileModel, positionModel.profileModel) &&
        Objects.equals(this.profileid, positionModel.profileid) &&
        Objects.equals(this.projectModel, positionModel.projectModel) &&
        Objects.equals(this.projectid, positionModel.projectid) &&
        Objects.equals(this.recommended, positionModel.recommended) &&
        Objects.equals(this.recruiterId, positionModel.recruiterId) &&
        Objects.equals(this.recruiterModel, positionModel.recruiterModel) &&
        Objects.equals(this.requestApprovalId, positionModel.requestApprovalId) &&
        Objects.equals(this.requirements, positionModel.requirements) &&
        Objects.equals(this.responsibilities, positionModel.responsibilities) &&
        Objects.equals(this.seoUrl, positionModel.seoUrl) &&
        Objects.equals(this.status, positionModel.status) &&
        Objects.equals(this.totalcandidate, positionModel.totalcandidate) &&
        Objects.equals(this.userName, positionModel.userName) &&
        Objects.equals(this.userViewModel, positionModel.userViewModel) &&
        Objects.equals(this.userapprovalList, positionModel.userapprovalList) &&
        Objects.equals(this.id, positionModel.id)&&
        Objects.equals(this.additionalProperties, positionModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, accessLevel, applicationDueDate, applicationFormId, approvalFlowId, approvalStatus, assessmentFormId, assessmentTemplateId, candidatePositionModelList, cid, count, createDate, createUserId, customLocation, dateClose, departmentId, funnelId, hiringManagerId, htmlTemplate, isRecommended, lastUpdatets, lastupdateuserid, locationModel, locationid, name, positionApprovalLevelList, positionUID, positionid, profileModel, profileid, projectModel, projectid, recommended, recruiterId, recruiterModel, requestApprovalId, requirements, responsibilities, seoUrl, status, totalcandidate, userName, userViewModel, userapprovalList, id, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PositionModel {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    accessLevel: ").append(toIndentedString(accessLevel)).append("\n");
    sb.append("    applicationDueDate: ").append(toIndentedString(applicationDueDate)).append("\n");
    sb.append("    applicationFormId: ").append(toIndentedString(applicationFormId)).append("\n");
    sb.append("    approvalFlowId: ").append(toIndentedString(approvalFlowId)).append("\n");
    sb.append("    approvalStatus: ").append(toIndentedString(approvalStatus)).append("\n");
    sb.append("    assessmentFormId: ").append(toIndentedString(assessmentFormId)).append("\n");
    sb.append("    assessmentTemplateId: ").append(toIndentedString(assessmentTemplateId)).append("\n");
    sb.append("    candidatePositionModelList: ").append(toIndentedString(candidatePositionModelList)).append("\n");
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    createUserId: ").append(toIndentedString(createUserId)).append("\n");
    sb.append("    customLocation: ").append(toIndentedString(customLocation)).append("\n");
    sb.append("    dateClose: ").append(toIndentedString(dateClose)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    funnelId: ").append(toIndentedString(funnelId)).append("\n");
    sb.append("    hiringManagerId: ").append(toIndentedString(hiringManagerId)).append("\n");
    sb.append("    htmlTemplate: ").append(toIndentedString(htmlTemplate)).append("\n");
    sb.append("    isRecommended: ").append(toIndentedString(isRecommended)).append("\n");
    sb.append("    lastUpdatets: ").append(toIndentedString(lastUpdatets)).append("\n");
    sb.append("    lastupdateuserid: ").append(toIndentedString(lastupdateuserid)).append("\n");
    sb.append("    locationModel: ").append(toIndentedString(locationModel)).append("\n");
    sb.append("    locationid: ").append(toIndentedString(locationid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    positionApprovalLevelList: ").append(toIndentedString(positionApprovalLevelList)).append("\n");
    sb.append("    positionUID: ").append(toIndentedString(positionUID)).append("\n");
    sb.append("    positionid: ").append(toIndentedString(positionid)).append("\n");
    sb.append("    profileModel: ").append(toIndentedString(profileModel)).append("\n");
    sb.append("    profileid: ").append(toIndentedString(profileid)).append("\n");
    sb.append("    projectModel: ").append(toIndentedString(projectModel)).append("\n");
    sb.append("    projectid: ").append(toIndentedString(projectid)).append("\n");
    sb.append("    recommended: ").append(toIndentedString(recommended)).append("\n");
    sb.append("    recruiterId: ").append(toIndentedString(recruiterId)).append("\n");
    sb.append("    recruiterModel: ").append(toIndentedString(recruiterModel)).append("\n");
    sb.append("    requestApprovalId: ").append(toIndentedString(requestApprovalId)).append("\n");
    sb.append("    requirements: ").append(toIndentedString(requirements)).append("\n");
    sb.append("    responsibilities: ").append(toIndentedString(responsibilities)).append("\n");
    sb.append("    seoUrl: ").append(toIndentedString(seoUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    totalcandidate: ").append(toIndentedString(totalcandidate)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    userViewModel: ").append(toIndentedString(userViewModel)).append("\n");
    sb.append("    userapprovalList: ").append(toIndentedString(userapprovalList)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("accessLevel");
    openapiFields.add("applicationDueDate");
    openapiFields.add("applicationFormId");
    openapiFields.add("approvalFlowId");
    openapiFields.add("approvalStatus");
    openapiFields.add("assessmentFormId");
    openapiFields.add("assessmentTemplateId");
    openapiFields.add("candidatePositionModelList");
    openapiFields.add("cid");
    openapiFields.add("count");
    openapiFields.add("createDate");
    openapiFields.add("createUserId");
    openapiFields.add("customLocation");
    openapiFields.add("dateClose");
    openapiFields.add("departmentId");
    openapiFields.add("funnelId");
    openapiFields.add("hiringManagerId");
    openapiFields.add("htmlTemplate");
    openapiFields.add("isRecommended");
    openapiFields.add("lastUpdatets");
    openapiFields.add("lastupdateuserid");
    openapiFields.add("locationModel");
    openapiFields.add("locationid");
    openapiFields.add("name");
    openapiFields.add("positionApprovalLevelList");
    openapiFields.add("positionUID");
    openapiFields.add("positionid");
    openapiFields.add("profileModel");
    openapiFields.add("profileid");
    openapiFields.add("projectModel");
    openapiFields.add("projectid");
    openapiFields.add("recommended");
    openapiFields.add("recruiterId");
    openapiFields.add("recruiterModel");
    openapiFields.add("requestApprovalId");
    openapiFields.add("requirements");
    openapiFields.add("responsibilities");
    openapiFields.add("seoUrl");
    openapiFields.add("status");
    openapiFields.add("totalcandidate");
    openapiFields.add("userName");
    openapiFields.add("userViewModel");
    openapiFields.add("userapprovalList");
    openapiFields.add("id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PositionModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PositionModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PositionModel is not found in the empty JSON string", PositionModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("accessLevel") != null && !jsonObj.get("accessLevel").isJsonNull()) && !jsonObj.get("accessLevel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessLevel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accessLevel").toString()));
      }
      if ((jsonObj.get("approvalStatus") != null && !jsonObj.get("approvalStatus").isJsonNull()) && !jsonObj.get("approvalStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `approvalStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("approvalStatus").toString()));
      }
      if (jsonObj.get("candidatePositionModelList") != null && !jsonObj.get("candidatePositionModelList").isJsonNull()) {
        JsonArray jsonArraycandidatePositionModelList = jsonObj.getAsJsonArray("candidatePositionModelList");
        if (jsonArraycandidatePositionModelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("candidatePositionModelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `candidatePositionModelList` to be an array in the JSON string but got `%s`", jsonObj.get("candidatePositionModelList").toString()));
          }

          // validate the optional field `candidatePositionModelList` (array)
          for (int i = 0; i < jsonArraycandidatePositionModelList.size(); i++) {
            CandidateApplicationsModel.validateJsonObject(jsonArraycandidatePositionModelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("customLocation") != null && !jsonObj.get("customLocation").isJsonNull()) && !jsonObj.get("customLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customLocation").toString()));
      }
      if ((jsonObj.get("htmlTemplate") != null && !jsonObj.get("htmlTemplate").isJsonNull()) && !jsonObj.get("htmlTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `htmlTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("htmlTemplate").toString()));
      }
      // validate the optional field `locationModel`
      if (jsonObj.get("locationModel") != null && !jsonObj.get("locationModel").isJsonNull()) {
        LocationModel.validateJsonObject(jsonObj.getAsJsonObject("locationModel"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("positionApprovalLevelList") != null && !jsonObj.get("positionApprovalLevelList").isJsonNull()) {
        JsonArray jsonArraypositionApprovalLevelList = jsonObj.getAsJsonArray("positionApprovalLevelList");
        if (jsonArraypositionApprovalLevelList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("positionApprovalLevelList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `positionApprovalLevelList` to be an array in the JSON string but got `%s`", jsonObj.get("positionApprovalLevelList").toString()));
          }

          // validate the optional field `positionApprovalLevelList` (array)
          for (int i = 0; i < jsonArraypositionApprovalLevelList.size(); i++) {
            PositionApprovalLevelModel.validateJsonObject(jsonArraypositionApprovalLevelList.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("positionUID") != null && !jsonObj.get("positionUID").isJsonNull()) && !jsonObj.get("positionUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `positionUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("positionUID").toString()));
      }
      // validate the optional field `profileModel`
      if (jsonObj.get("profileModel") != null && !jsonObj.get("profileModel").isJsonNull()) {
        UserProfileModel.validateJsonObject(jsonObj.getAsJsonObject("profileModel"));
      }
      // validate the optional field `projectModel`
      if (jsonObj.get("projectModel") != null && !jsonObj.get("projectModel").isJsonNull()) {
        ProjectModel.validateJsonObject(jsonObj.getAsJsonObject("projectModel"));
      }
      // validate the optional field `recruiterModel`
      if (jsonObj.get("recruiterModel") != null && !jsonObj.get("recruiterModel").isJsonNull()) {
        UserViewModel.validateJsonObject(jsonObj.getAsJsonObject("recruiterModel"));
      }
      if ((jsonObj.get("requirements") != null && !jsonObj.get("requirements").isJsonNull()) && !jsonObj.get("requirements").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requirements` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requirements").toString()));
      }
      if ((jsonObj.get("responsibilities") != null && !jsonObj.get("responsibilities").isJsonNull()) && !jsonObj.get("responsibilities").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `responsibilities` to be a primitive type in the JSON string but got `%s`", jsonObj.get("responsibilities").toString()));
      }
      if ((jsonObj.get("seoUrl") != null && !jsonObj.get("seoUrl").isJsonNull()) && !jsonObj.get("seoUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seoUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seoUrl").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("userName") != null && !jsonObj.get("userName").isJsonNull()) && !jsonObj.get("userName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userName").toString()));
      }
      // validate the optional field `userViewModel`
      if (jsonObj.get("userViewModel") != null && !jsonObj.get("userViewModel").isJsonNull()) {
        UserViewModel.validateJsonObject(jsonObj.getAsJsonObject("userViewModel"));
      }
      if (jsonObj.get("userapprovalList") != null && !jsonObj.get("userapprovalList").isJsonNull()) {
        JsonArray jsonArrayuserapprovalList = jsonObj.getAsJsonArray("userapprovalList");
        if (jsonArrayuserapprovalList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("userapprovalList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `userapprovalList` to be an array in the JSON string but got `%s`", jsonObj.get("userapprovalList").toString()));
          }

          // validate the optional field `userapprovalList` (array)
          for (int i = 0; i < jsonArrayuserapprovalList.size(); i++) {
            UserPositionApprovalModel.validateJsonObject(jsonArrayuserapprovalList.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PositionModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PositionModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PositionModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PositionModel.class));

       return (TypeAdapter<T>) new TypeAdapter<PositionModel>() {
           @Override
           public void write(JsonWriter out, PositionModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PositionModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PositionModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PositionModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PositionModel
  * @throws IOException if the JSON string is invalid with respect to PositionModel
  */
  public static PositionModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PositionModel.class);
  }

 /**
  * Convert an instance of PositionModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

