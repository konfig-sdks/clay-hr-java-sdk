/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FormsApi
 */
@Disabled
public class FormsApiTest {

    private static FormsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new FormsApi(apiClient);
    }

    /**
     * Retrieve completed forms assigned to me  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssignedFormsTest() throws ApiException {
        String response = api.getAssignedForms()
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve form details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetailsTest() throws ApiException {
        Integer dynamicFormId = null;
        String response = api.getDetails(dynamicFormId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve forms
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDynaFormTest() throws ApiException {
        String response = api.getDynaForm()
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve form response 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFormResponseTest() throws ApiException {
        Integer dynamicFormId = null;
        Integer assignUserId = null;
        Integer assignmentId = null;
        String response = api.getFormResponse(dynamicFormId)
                .assignUserId(assignUserId)
                .assignmentId(assignmentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve form responses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFormResponsesTest() throws ApiException {
        Integer dynamicFormId = null;
        String response = api.getFormResponses(dynamicFormId)
                .execute();
        // TODO: test validations
    }

    /**
     * Save form repsonse 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveFormResponseTest() throws ApiException {
        Integer assignmentId = null;
        String response = api.saveFormResponse(assignmentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Save item response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitItemResponseTest() throws ApiException {
        Integer assignmentId = null;
        Integer itemId = null;
        String responseValue = null;
        String response = api.submitItemResponse(assignmentId, itemId, responseValue)
                .execute();
        // TODO: test validations
    }

}
