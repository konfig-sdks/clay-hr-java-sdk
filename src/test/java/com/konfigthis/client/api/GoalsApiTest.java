/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.GoalsDeleteGoalResponse;
import com.konfigthis.client.model.GoalsGetGoalResponse;
import com.konfigthis.client.model.GoalsGetUserGoalsResponse;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GoalsApi
 */
@Disabled
public class GoalsApiTest {

    private static GoalsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new GoalsApi(apiClient);
    }

    /**
     * Create new goal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewGoalTest() throws ApiException {
        Integer additive = null;
        LocalDate begindate = null;
        Integer cid = null;
        String commentCrediteatets = null;
        String commentDescription = null;
        Integer companyGoal = null;
        Float completionRatio = null;
        Integer createUserId = null;
        Integer createtsDate = null;
        Integer createtsDay = null;
        Integer createtsHours = null;
        Integer createtsMinutes = null;
        Integer createtsMonth = null;
        Integer createtsNanos = null;
        Integer createtsSeconds = null;
        Long createtsTime = null;
        Integer createtsTimezoneOffset = null;
        Integer createtsYear = null;
        OffsetDateTime crediteatets = null;
        Float currentValue = null;
        String description = null;
        String disposition = null;
        Float elapsedTimeRatio = null;
        Integer goalId = null;
        Float goalValue = null;
        Float goalWeightage = null;
        Boolean hasGoalApprovalPermission = null;
        Integer id = null;
        Float initialvalue = null;
        Boolean isForward = null;
        Integer lastUpdateUserId = null;
        Integer objectiveId = null;
        Integer parentGoalId = null;
        Float progressRatio = null;
        Integer projectid = null;
        Integer reviewUserId = null;
        String state = null;
        String status = null;
        String summary = null;
        LocalDate targetDate = null;
        String typecode = null;
        String uname = null;
        String units = null;
        Integer visibleToDirectReports = null;
        Object response = api.createNewGoal()
                .additive(additive)
                .begindate(begindate)
                .cid(cid)
                .commentCrediteatets(commentCrediteatets)
                .commentDescription(commentDescription)
                .companyGoal(companyGoal)
                .completionRatio(completionRatio)
                .createUserId(createUserId)
                .createtsDate(createtsDate)
                .createtsDay(createtsDay)
                .createtsHours(createtsHours)
                .createtsMinutes(createtsMinutes)
                .createtsMonth(createtsMonth)
                .createtsNanos(createtsNanos)
                .createtsSeconds(createtsSeconds)
                .createtsTime(createtsTime)
                .createtsTimezoneOffset(createtsTimezoneOffset)
                .createtsYear(createtsYear)
                .crediteatets(crediteatets)
                .currentValue(currentValue)
                .description(description)
                .disposition(disposition)
                .elapsedTimeRatio(elapsedTimeRatio)
                .goalId(goalId)
                .goalValue(goalValue)
                .goalWeightage(goalWeightage)
                .hasGoalApprovalPermission(hasGoalApprovalPermission)
                .id(id)
                .initialvalue(initialvalue)
                .isForward(isForward)
                .lastUpdateUserId(lastUpdateUserId)
                .objectiveId(objectiveId)
                .parentGoalId(parentGoalId)
                .progressRatio(progressRatio)
                .projectid(projectid)
                .reviewUserId(reviewUserId)
                .state(state)
                .status(status)
                .summary(summary)
                .targetDate(targetDate)
                .typecode(typecode)
                .uname(uname)
                .units(units)
                .visibleToDirectReports(visibleToDirectReports)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Goal
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteGoalTest() throws ApiException {
        Integer goalId = null;
        GoalsDeleteGoalResponse response = api.deleteGoal(goalId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve all goals
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllGoalsTest() throws ApiException {
        Object response = api.getAllGoals()
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve Goal
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGoalTest() throws ApiException {
        Integer goalid = null;
        Integer reviewUserId = null;
        GoalsGetGoalResponse response = api.getGoal(goalid)
                .reviewUserId(reviewUserId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve goals of user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserGoalsTest() throws ApiException {
        GoalsGetUserGoalsResponse response = api.getUserGoals()
                .execute();
        // TODO: test validations
    }

}
