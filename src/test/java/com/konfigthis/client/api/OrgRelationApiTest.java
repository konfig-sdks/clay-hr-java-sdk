/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.time.LocalDate;
import com.konfigthis.client.model.OrgRelationSaveUserResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrgRelationApi
 */
@Disabled
public class OrgRelationApiTest {

    private static OrgRelationApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new OrgRelationApi(apiClient);
    }

    /**
     * Retrieve all active OrgRelations
     *
     * Retrieve all active OrgRelations for entire organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllActiveTest() throws ApiException {
        String response = api.getAllActive()
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve all the OrgRelations for the given user.
     *
     * Retrieve all the OrgRelations for the given user including Active, Archive and Future OrgRelations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrgRelationsByUserTest() throws ApiException {
        String email = null;
        Integer employeeUserId = null;
        String empId = null;
        String response = api.getOrgRelationsByUser(email)
                .employeeUserId(employeeUserId)
                .empId(empId)
                .execute();
        // TODO: test validations
    }

    /**
     * Saves the OrgRelation for the User
     *
     * Saves the OrgRelation for the User.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveUserTest() throws ApiException {
        Integer orgRelationId = null;
        Integer managerUserId = null;
        String managerEmail = null;
        String userEmail = null;
        Integer otherUserId = null;
        String relationType = null;
        LocalDate startDate = null;
        LocalDate enddate = null;
        Integer cid = null;
        String status = null;
        OrgRelationSaveUserResponse response = api.saveUser(orgRelationId, managerUserId, managerEmail)
                .userEmail(userEmail)
                .otherUserId(otherUserId)
                .relationType(relationType)
                .startDate(startDate)
                .enddate(enddate)
                .cid(cid)
                .status(status)
                .execute();
        // TODO: test validations
    }

}
