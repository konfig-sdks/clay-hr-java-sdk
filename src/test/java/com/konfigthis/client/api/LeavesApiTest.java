/*
 * Expense Reports
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.LeaveModel;
import com.konfigthis.client.model.LeavesAddPtoBalanceRequest;
import java.time.LocalDate;
import com.konfigthis.client.model.PtoPolicyModel;
import com.konfigthis.client.model.UserModel;
import com.konfigthis.client.model.UserViewModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LeavesApi
 */
@Disabled
public class LeavesApiTest {

    private static LeavesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new LeavesApi(apiClient);
    }

    /**
     * Add PTO balance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addPtoBalanceTest() throws ApiException {
        String ptobalances = null;
        String response = api.addPtoBalance(ptobalances)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a new leave.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewLeaveTest() throws ApiException {
        LocalDate date = null;
        String description = null;
        UserViewModel createUserViewModel = null;
        String endDateMeridiem = null;
        String meridiem = null;
        Integer numberOfDays = null;
        PtoPolicyModel ptoPolicyModel = null;
        Double totalLeaveDays = null;
        Double totalLeaveHours = null;
        UserModel userModel = null;
        String response = api.createNewLeave(date)
                .description(description)
                .createUserViewModel(createUserViewModel)
                .endDateMeridiem(endDateMeridiem)
                .meridiem(meridiem)
                .numberOfDays(numberOfDays)
                .ptoPolicyModel(ptoPolicyModel)
                .totalLeaveDays(totalLeaveDays)
                .totalLeaveHours(totalLeaveHours)
                .userModel(userModel)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve leave requests within a date range
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLeaveRequestsWithinDateRangeTest() throws ApiException {
        LocalDate endDate = null;
        LocalDate startDate = null;
        Integer leaveUserid = null;
        String status = null;
        String response = api.getLeaveRequestsWithinDateRange(endDate, startDate)
                .leaveUserid(leaveUserid)
                .status(status)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve leaves for approval/rejection by filtering on basis of Role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLeavesBasedOnRoleTest() throws ApiException {
        String response = api.getLeavesBasedOnRole()
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve remaining hours credit for leave policy
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRemainingHoursCreditTest() throws ApiException {
        LocalDate leaveDate = null;
        Integer leaveId = null;
        Integer leaveUserId = null;
        Integer ptoPolicyId = null;
        String response = api.getRemainingHoursCredit(leaveDate, leaveId, leaveUserId, ptoPolicyId)
                .execute();
        // TODO: test validations
    }

    /**
     * Process the leave of a user by leave Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void processLeaveByIdTest() throws ApiException {
        Integer leaveId = null;
        String status = null;
        String response = api.processLeaveById(leaveId, status)
                .execute();
        // TODO: test validations
    }

}
